{"version":3,"sources":["../src/blockie.js"],"names":["initializeLevel","pointTwo","blockieAdjustment","oneHalf","cancelAwaitChain","Promise","all","createWall","fullScreen","threeEigths","fiveEigths","createActivePoint","pointSeven","createPassivePoint","oneEigth","oneFourth","sevenEigths","pointEight","console","log","currentLevel","increaseLevel","levelOne","threeFourths","loopFireBombs","fireBomb","fireMovingHorizontalLaser","pointOne","levelTwo","loopFireMovingHorizontalLasers","destroyCountdownTimer","levelThree","createCountdownTimer","fireMovingVerticalLaser","levelFour","pointThree","moveBlockie","levelFive","levelSix","pointFour","levelSeven","error","levelEight","levelNine","levelTen","levelEleven","levelTwelve","reason","i","currentTimeouts","length","clearTimeout","splice","currentIntervals","clearInterval","updateAllObjects","allObjects","rejectInstances","currentLevelPoints","gameState","blockie","state","sx","displayMessage","controlLevel","playCutscene","spCountdownDestructionScene","restartLevel","angleMovingDegrees","updateLevelPoints","calculateTotalPoints","resolve","reject","partyHatInstance","PartyHat","partyHats","push","animateFinishedLevelHat","y","Math","min","height","window","requestAnimationFrame","message","drawGameOverScreen","setTimeout","document","getElementById","innerHTML","resumePlaying","keysDown","instanceAffecting","warningSeconds","externalResolve","externalReject","timeout","visible","setWarningTimeouts","x","waitingSeconds","firingSeconds","setWaitingTimeout","instance","PassivePoint","passivePoints","remainingFiringSeconds","remainingFiringSecondsInterval","setInterval","addCurrentInterval","removeCurrentInterval","instanceIndex","indexOf","ActivePoint","activePoints","speed","initialWaitingSeconds","MovingHorizontalLaser","movingHorizontalLasers","width","loopFireMovingVerticalLasers","MovingVerticalLaser","movingVerticalLasers","Bomb","bombs","Wall","walls","scene","secondsPerFrame","cutsceneSideLength","cutscenesx","lastFramesx","naturalWidth","cutscene","drawCutscene","context","drawImage","canvas","getContext","lineWidth","totalPoints","xInput","yInput","preventingMovement","arrowLeftAlreadyPressed","arrowUpAlreadyPressed","arrowRightAlreadyPressed","arrowDownAlreadyPressed","shiftAlreadyPressed","spaceAlreadyPressed","pAlreadyPressed","recoveringFromDash","allowDashAgain","dashDistance","dashRecoverySeconds","allowDashAgainSeconds","spBlockiePlaying","createElement","src","spBlockieDestructing","spBlockieRecoveringFromDash","gameScale","countdown","waitingTimeouts","collidingInstances","levelPoints","Player","angleMovingRadians","dx","dy","xSubPixel","ySubPixel","targetXLocation","targetYLocation","sprite","remainingDashSeconds","WaitingTimeout","totalFiringSeconds","pointFive","pointSix","blockieX","blockieY","resolveInstances","objectArray","initialArrayLength","addCurrentTimeout","removeCurrentTimeout","currentTimeoutIndex","interval","currentIntervalIndex","initializeDash","endDashRecovery","remainingDashSecondsInterval","resetAllowDashAgain","resetBlockieState","updateAllInteractiveObjects","moveMovingHorizontalLasers","moveMovingVerticalLasers","animateBlockie","fillStyle","fillRect","round","endAnimateBlockieDestructing","animateBlockieDestructing","drawBlockie","drawPassivePoints","currentInstance","strokeStyle","strokeRect","drawActivePoints","drawMovingHorizontalLasers","beginPath","moveTo","abs","sign","lineTo","max","fill","drawMovingVerticalLasers","drawBombs","drawWalls","drawPartyHats","checkCollisionsWithClass","classArray","checkInstancesColliding","checkTestCollisionsWithClass","instanceOneX","instanceOneY","checkTestInstancesColliding","instanceOne","instanceTwo","xColliding","yColliding","initializeKeyInputs","addEventListener","e","keyCode","scaleGame","innerWidth","innerHeight","gameContainer","style","transform","totalSeconds","seconds","countdownTimerContainer","visibility","currentMinutes","floor","currentSeconds","countdownTimer","calculateAngleRadians","atan2","convertRadiansToDegrees","radians","PI","gameLoop","cos","sin","xChange","yChange","xTestingDistance","yTestingDistance","constructor","name","collidingPoint","drawingLoop","clearRect"],"mappings":";;AA0QA;;uEACA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEQA,wCAAgBC,WAAWC,iBAA3B,EAA8CC,UAAUD,iBAAxD;;AAEAE,2CAAmB,KAAnB;;AAJR;AAAA,+BAMcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBC,UAAjB,EAA6BC,WAA7B,CADc,EAEdF,WAAW,CAAX,EAAcG,UAAd,EAA0BF,UAA1B,EAAsCC,WAAtC,CAFc,EAGdE,kBAAkBC,aAAa,CAA/B,EAAkCT,UAAU,CAA5C,EAA+C,CAA/C,CAHc,EAIdU,mBAAmBV,UAAU,CAA7B,EAAgCA,UAAU,CAA1C,EAA6C,CAA7C,EAAgD,EAAhD,CAJc,CAAZ,CANd;;AAAA;;AAaQC,2CAAmB,KAAnB;;AAbR;AAAA,+BAecC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBC,UAAjB,EAA6BC,WAA7B,CADc,EAEdF,WAAW,CAAX,EAAcG,UAAd,EAA0BI,QAA1B,EAAoCL,WAApC,CAFc,EAGdF,WAAWQ,SAAX,EAAsBL,UAAtB,EAAkCP,OAAlC,EAA2CY,SAA3C,CAHc,EAIdR,WAAWS,WAAX,EAAwBN,UAAxB,EAAoCI,QAApC,EAA8CL,WAA9C,CAJc,EAKdI,mBAAmBZ,WAAW,CAA9B,EAAiCgB,aAAa,CAA9C,EAAiD,CAAjD,EAAoD,EAApD,CALc,EAMdJ,mBAAmBD,aAAa,CAAhC,EAAmCK,aAAa,CAAhD,EAAmD,CAAnD,EAAsD,EAAtD,CANc,EAQdN,kBAAkBV,WAAW,CAA7B,EAAgCE,UAAU,CAA1C,EAA6C,CAA7C,CARc,CAAZ,CAfd;;AAAA;;AA0BQC,2CAAmB,KAAnB;;AA1BR;AAAA,+BA4BcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBE,WAAjB,EAA8BA,WAA9B,CADc,EAEdF,WAAW,CAAX,EAAcG,UAAd,EAA0BD,WAA1B,EAAuCA,WAAvC,CAFc,EAGdF,WAAWG,UAAX,EAAuB,CAAvB,EAA0BD,WAA1B,EAAuCD,UAAvC,CAHc,EAIdG,kBAAkBR,UAAU,CAA5B,EAA+Ba,cAAc,CAA7C,EAAgD,CAAhD,CAJc,EAKdH,mBAAmBV,UAAU,CAA7B,EAAgCW,WAAW,CAA3C,EAA8C,CAA9C,EAAiD,EAAjD,CALc,CAAZ,CA5Bd;;AAAA;;AAoCQV,2CAAmB,KAAnB;;AAEAc,gCAAQC,GAAR,YAAqBC,YAArB;AACAC;AAvCR;AAAA;;AAAA;AAAA;AAAA;;AAyCQH,gCAAQC,GAAR,YAAqBC,YAArB;;AAzCR;AA0CK;;AA1CL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeE,Q;;;;;;wEA6Cf;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEQtB,wCAAgBG,UAAUD,iBAA1B,EAA6Cc,cAAcd,iBAA3D;;AAEAE,2CAAmB,KAAnB;;AAJR;AAAA,+BAMcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBC,UAAjB,EAA6Be,YAA7B,CADc,EAEdV,mBAAmBZ,WAAW,CAA9B,EAAiCe,cAAc,CAA/C,EAAkD,CAAlD,EAAqD,EAArD,CAFc,EAIdQ,cAAcrB,UAAU,EAAxB,EAA4BoB,YAA5B,EAA0C,EAA1C,EAA8CR,SAA9C,EAAyD,CAAzD,EAA4D,CAA5D,EAA+D,CAA/D,CAJc,EAMdJ,kBAAkBK,cAAc,CAAhC,EAAmCA,cAAc,CAAjD,EAAoD,CAApD,CANc,CAAZ,CANd;;AAAA;;AAeQZ,2CAAmB,KAAnB;;AAfR;AAAA,+BAiBcC,QAAQC,GAAR,CAAY,CACdK,kBAAkBR,UAAU,CAA5B,EAA+Ba,cAAc,CAA7C,EAAgD,CAAhD,CADc,EAGdS,SAASF,YAAT,EAAuBA,YAAvB,EAAqCR,SAArC,EAAgDA,SAAhD,EAA2D,CAA3D,EAA8D,CAA9D,CAHc,CAAZ,CAjBd;;AAAA;;AAuBQX,2CAAmB,KAAnB;;AAvBR;AAAA,+BAyBcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBE,WAAjB,EAA8BD,UAA9B,CADc,EAEdD,WAAWG,UAAX,EAAuB,CAAvB,EAA0BD,WAA1B,EAAuCD,UAAvC,CAFc,EAGdG,kBAAkBR,UAAU,CAA5B,EAA+BF,WAAW,CAA1C,EAA6C,CAA7C,CAHc,EAIdyB,0BAA0BlB,aAAa,EAAvC,EAA2C,EAA3C,EAA+C,CAAC,GAAhD,EAAqD,CAArD,EAAwD,CAAxD,CAJc,CAAZ,CAzBd;;AAAA;;AAgCQJ,2CAAmB,KAAnB;;AAhCR;AAAA,+BAkCcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBE,WAAjB,EAA8BA,WAA9B,CADc,EAEdF,WAAWG,UAAX,EAAuB,CAAvB,EAA0BD,WAA1B,EAAuCA,WAAvC,CAFc,EAGdF,WAAW,CAAX,EAAcG,UAAd,EAA0BD,WAA1B,EAAuCA,WAAvC,CAHc,EAIdF,WAAWG,UAAX,EAAuBA,UAAvB,EAAmCD,WAAnC,EAAgDA,WAAhD,CAJc,EAKdE,kBAAkBR,UAAU,CAA5B,EAA+Bc,aAAa,CAA5C,EAA+C,CAA/C,CALc,EAMdJ,mBAAmBc,WAAW,CAA9B,EAAiCxB,UAAU,CAA3C,EAA8C,CAA9C,EAAiD,EAAjD,CANc,EAOdU,mBAAmBI,aAAa,CAAhC,EAAmCd,UAAU,CAA7C,EAAgD,CAAhD,EAAmD,EAAnD,CAPc,EAQdqB,cAAcf,WAAd,EAA2BC,UAA3B,EAAuCK,SAAvC,EAAkDA,SAAlD,EAA6D,CAA7D,EAAgE,CAAhE,EAAmE,CAAnE,CARc,CAAZ,CAlCd;;AAAA;;AA6CQX,2CAAmB,KAAnB;;AAEAc,gCAAQC,GAAR,YAAqBC,YAArB;AACAC;AAhDR;AAAA;;AAAA;AAAA;AAAA;;AAkDQH,gCAAQC,GAAR,YAAqBC,YAArB;;AAlDR;AAmDK;;AAnDL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeQ,Q;;;;;;wEAsDf;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEQ5B,wCAAgBG,UAAUD,iBAA1B,EAA6Cc,cAAcd,iBAA3D;;AAEAE,2CAAmB,KAAnB;;AAJR;AAAA,+BAMcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiB,KAAK,EAAtB,EAA0BC,UAA1B,CADc,EAEdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+B,KAAK,EAApC,CAFc,EAGdA,WAAW,KAAK,EAAhB,EAAoB,KAAK,EAAzB,EAA6B,IAAI,EAAjC,EAAqC,IAAI,EAAzC,CAHc,EAIdA,WAAW,KAAK,EAAhB,EAAoB,KAAK,EAAzB,EAA6B,IAAI,EAAjC,EAAqC,IAAI,EAAzC,CAJc,EAKdA,WAAW,KAAK,EAAhB,EAAoB,KAAK,EAAzB,EAA6B,IAAI,EAAjC,EAAqC,IAAI,EAAzC,CALc,EAMdA,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,KAAK,EAA5B,EAAgCC,UAAhC,CANc,EAOdG,kBAAkBR,UAAU,CAA5B,EAA+BA,UAAU,CAAzC,EAA4C,CAA5C,CAPc,EAQdU,mBAAmBV,UAAU,CAA7B,EAAgC,KAAK,EAAL,GAAU,CAA1C,EAA6C,CAA7C,EAAgD,EAAhD,CARc,CAAZ,CANd;;AAAA;;AAiBQC,2CAAmB,KAAnB;;AAjBR;AAAA,+BAmBcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBC,UAAjB,EAA6B,IAAI,EAAjC,CADc,EAEdD,WAAW,CAAX,EAAc,IAAI,EAAlB,EAAsBC,UAAtB,EAAkC,IAAI,EAAtC,CAFc,EAGdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CAHc,EAIdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,KAAK,EAAxC,CAJc,EAKdD,WAAW,CAAX,EAAc,CAAd,EAAiB,IAAI,EAArB,EAAyBC,UAAzB,CALc,EAMdD,WAAW,IAAI,EAAf,EAAmB,CAAnB,EAAsB,IAAI,EAA1B,EAA8BC,UAA9B,CANc,EAOdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CAPc,EAQdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CARc,EASdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CATc,EAUdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CAVc,EAWdK,mBAAmB,IAAI,EAAJ,GAAS,CAA5B,EAA+BV,UAAU,CAAzC,EAA4C,CAA5C,EAA+C,EAA/C,CAXc,EAYdU,mBAAmB,KAAK,EAAL,GAAU,CAA7B,EAAgCV,UAAU,CAA1C,EAA6C,CAA7C,EAAgD,EAAhD,CAZc,EAadqB,cAAc,IAAI,EAAlB,EAAsB,IAAI,EAA1B,EAA8B,IAAI,EAAlC,EAAsC,IAAI,EAA1C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,CAbc,EAcdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CAdc,EAedA,cAAc,IAAI,EAAlB,EAAsB,IAAI,EAA1B,EAA8B,IAAI,EAAlC,EAAsC,IAAI,EAA1C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,CAfc,EAgBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CAhBc,EAiBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CAjBc,EAkBdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CAlBc,EAmBdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,CAnBc,EAqBdb,kBAAkBR,UAAU,CAA5B,EAA+B,IAAI,EAAJ,GAAS,CAAxC,EAA2C,CAA3C,CArBc,CAAZ,CAnBd;;AAAA;;AA2CQC,2CAAmB,KAAnB;;AA3CR;AAAA,+BA6CcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiB,KAAK,EAAtB,EAA0BC,UAA1B,CADc,EAEdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,KAAK,EAA5B,EAAgCC,UAAhC,CAFc,EAGdG,kBAAkBR,UAAU,CAA5B,EAA+Bc,aAAa,CAA5C,EAA+C,CAA/C,CAHc,EAIdS,0BAA0BlB,aAAa,EAAvC,EAA2C,EAA3C,EAA+C,CAAC,GAAhD,EAAqD,CAArD,EAAwD,CAAxD,CAJc,CAAZ,CA7Cd;;AAAA;;AAoDQJ,2CAAmB,KAAnB;;AApDR;AAAA,+BAsDcC,QAAQC,GAAR,CAAY,CACdK,kBAAkBR,UAAU,CAA5B,EAA+BwB,WAAW,CAA1C,EAA6C,CAA7C,CADc,EAEdE,+BAA+B,CAA/B,EAAkC,EAAlC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,CAFc,EAGdA,+BAA+B,CAA/B,EAAkC,EAAlC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,CAHc,EAIdA,+BAA+B,CAA/B,EAAkC,EAAlC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,CAJc,EAKdA,+BAA+B,CAA/B,EAAkC,EAAlC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,CALc,CAAZ,CAtDd;;AAAA;;AA8DQzB,2CAAmB,KAAnB;;AAEA0B;;AAEAZ,gCAAQC,GAAR,YAAqBC,YAArB;AACAC;AAnER;AAAA;;AAAA;AAAA;AAAA;;AAqEQH,gCAAQC,GAAR,YAAqBC,YAArB;;AArER;AAsEK;;AAtEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeW,U;;;;;;wEAyEf;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEQ/B,wCAAgBG,UAAUD,iBAA1B,EAA6CC,UAAUD,iBAAvD;;AAEA8B,6CAAqB,EAArB;;AAEA5B,2CAAmB,KAAnB;;AANR;AAAA,+BAQcC,QAAQC,GAAR,CAAY,CACdC,WAAWE,WAAX,EAAwB,CAAxB,EAA2B,IAAI,EAA/B,EAAmCO,WAAnC,CADc,EAEdT,WAAWO,QAAX,EAAqB,CAArB,EAAwBC,SAAxB,EAAmC,KAAK,EAAxC,CAFc,EAGdR,WAAWO,QAAX,EAAqB,KAAK,EAA1B,EAA8BC,SAA9B,EAAyC,KAAK,EAA9C,CAHc,EAIdR,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,KAAK,EAA5B,EAAgCC,UAAhC,CAJc,EAKdG,kBAAkBgB,WAAW,CAA7B,EAAgCA,WAAW,CAA3C,EAA8C,CAA9C,CALc,EAMdd,mBAAmBc,WAAW,CAA9B,EAAiCV,aAAa,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,CANc,EAQdgB,wBAAwB,KAAK,EAA7B,EAAiC,EAAjC,EAAqC,CAAC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,CARc,EASdA,wBAAwB,KAAK,EAA7B,EAAiC,EAAjC,EAAqC,CAAC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,CATc,EAUdA,wBAAwBzB,aAAa,EAArC,EAAyC,EAAzC,EAA6C,CAAC,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,CAVc,CAAZ,CARd;;AAAA;;AAqBQJ,2CAAmB,KAAnB;;AArBR;AAAA,+BAuBcC,QAAQC,GAAR,CAAY,CACdC,WAAWO,QAAX,EAAqB,CAArB,EAAwB,KAAK,EAA7B,EAAiCE,WAAjC,CADc,EAEdT,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuBJ,OAAvB,EAAgCK,UAAhC,CAFc,EAGdG,kBAAkBR,UAAU,CAA5B,EAA+BwB,WAAW,CAA1C,EAA6C,CAA7C,CAHc,EAKdH,cAAc,CAAd,EAAiB,CAAjB,EAAoBV,QAApB,EAA8BA,QAA9B,EAAwC,CAAxC,EAA2C,GAA3C,EAAgD,GAAhD,CALc,EAMdU,cAAc,CAAd,EAAiBV,QAAjB,EAA2BA,QAA3B,EAAqCA,QAArC,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,GAAzD,CANc,EAOdU,cAAc,CAAd,EAAiBT,SAAjB,EAA4BD,QAA5B,EAAsCA,QAAtC,EAAgD,CAAhD,EAAmD,GAAnD,EAAwD,GAAxD,CAPc,EAQdU,cAAc,CAAd,EAAiBf,WAAjB,EAA8BK,QAA9B,EAAwCA,QAAxC,EAAkD,GAAlD,EAAuD,GAAvD,EAA4D,GAA5D,CARc,EASdU,cAAc,CAAd,EAAiBrB,OAAjB,EAA0BW,QAA1B,EAAoCA,QAApC,EAA8C,CAA9C,EAAiD,GAAjD,EAAsD,GAAtD,CATc,EAUdU,cAAc,CAAd,EAAiBd,UAAjB,EAA6BI,QAA7B,EAAuCA,QAAvC,EAAiD,GAAjD,EAAsD,GAAtD,EAA2D,GAA3D,CAVc,EAWdU,cAAc,CAAd,EAAiBD,YAAjB,EAA+BT,QAA/B,EAAyCA,QAAzC,EAAmD,CAAnD,EAAsD,GAAtD,EAA2D,GAA3D,CAXc,EAYdU,cAAc,CAAd,EAAiBR,WAAjB,EAA8BF,QAA9B,EAAwCA,QAAxC,EAAkD,GAAlD,EAAuD,GAAvD,EAA4D,GAA5D,CAZc,EAcdU,cAAc,KAAK,EAAnB,EAAuB,CAAvB,EAA0BV,QAA1B,EAAoCA,QAApC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,CAdc,EAedU,cAAc,KAAK,EAAnB,EAAuBV,QAAvB,EAAiCA,QAAjC,EAA2CA,QAA3C,EAAqD,CAArD,EAAwD,GAAxD,EAA6D,GAA7D,CAfc,EAgBdU,cAAc,KAAK,EAAnB,EAAuBT,SAAvB,EAAkCD,QAAlC,EAA4CA,QAA5C,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE,CAhBc,EAiBdU,cAAc,KAAK,EAAnB,EAAuBf,WAAvB,EAAoCK,QAApC,EAA8CA,QAA9C,EAAwD,CAAxD,EAA2D,GAA3D,EAAgE,GAAhE,CAjBc,EAkBdU,cAAc,KAAK,EAAnB,EAAuBrB,OAAvB,EAAgCW,QAAhC,EAA0CA,QAA1C,EAAoD,GAApD,EAAyD,GAAzD,EAA8D,GAA9D,CAlBc,EAmBdU,cAAc,KAAK,EAAnB,EAAuBd,UAAvB,EAAmCI,QAAnC,EAA6CA,QAA7C,EAAuD,CAAvD,EAA0D,GAA1D,EAA+D,GAA/D,CAnBc,EAoBdU,cAAc,KAAK,EAAnB,EAAuBD,YAAvB,EAAqCT,QAArC,EAA+CA,QAA/C,EAAyD,GAAzD,EAA8D,GAA9D,EAAmE,GAAnE,CApBc,EAqBdU,cAAc,KAAK,EAAnB,EAAuBR,WAAvB,EAAoCF,QAApC,EAA8CA,QAA9C,EAAwD,CAAxD,EAA2D,GAA3D,EAAgE,GAAhE,CArBc,CAAZ,CAvBd;;AAAA;;AA+CQV,2CAAmB,KAAnB;;AA/CR;AAAA,+BAiDcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiB,KAAK,EAAtB,EAA0BC,UAA1B,CADc,EAEdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,KAAK,EAA5B,EAAgCQ,SAAhC,CAFc,EAGdR,WAAW,KAAK,EAAhB,EAAoBQ,SAApB,EAA+B,IAAI,EAAnC,EAAuC,KAAK,EAA5C,CAHc,EAIdR,WAAW,KAAK,EAAhB,EAAoBgB,YAApB,EAAkC,IAAI,EAAtC,EAA0CR,SAA1C,CAJc,EAKdR,WAAWgB,YAAX,EAAyBR,SAAzB,EAAoCA,SAApC,EAA+CQ,YAA/C,CALc,EAMdZ,kBAAkBR,UAAU,CAA5B,EAA+B,KAAK,EAAL,GAAU,CAAzC,EAA4C,CAA5C,CANc,EAOdU,mBAAmB,KAAK,EAAL,GAAU,CAA7B,EAAgC,KAAK,EAAL,GAAU,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,CAPc,CAAZ,CAjDd;;AAAA;;AA2DQT,2CAAmB,KAAnB;;AA3DR;AAAA,+BA6DcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBC,UAAjB,EAA6B,IAAI,EAAjC,CADc,EAEdD,WAAW,CAAX,EAAc,IAAI,EAAlB,EAAsBQ,SAAtB,EAAiC,KAAK,EAAtC,CAFc,EAGdR,WAAWgB,YAAX,EAAyB,IAAI,EAA7B,EAAiCR,SAAjC,EAA4C,KAAK,EAAjD,CAHc,EAIdR,WAAWQ,SAAX,EAAsB,IAAI,EAA1B,EAA8B,IAAI,EAAlC,EAAsC,IAAI,EAA1C,CAJc,EAKdR,WAAW,KAAK,EAAhB,EAAoB,IAAI,EAAxB,EAA4B,IAAI,EAAhC,EAAoC,IAAI,EAAxC,CALc,EAMdA,WAAWQ,SAAX,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,KAAK,EAA5C,CANc,EAOdR,WAAW,KAAK,EAAhB,EAAoB,KAAK,EAAzB,EAA6B,IAAI,EAAjC,EAAqC,KAAK,EAA1C,CAPc,EAQdA,WAAW,KAAK,EAAhB,EAAoB,KAAK,EAAzB,EAA6B,IAAI,EAAjC,EAAqC,IAAI,EAAzC,CARc,EAUdkB,SAAS,KAAK,EAAd,EAAkB,KAAK,EAAvB,EAA2B,IAAI,EAA/B,EAAmC,IAAI,EAAvC,EAA2C,GAA3C,EAAgD,GAAhD,CAVc,EAYdA,SAAS,KAAK,EAAd,EAAkB,KAAK,EAAvB,EAA2B,IAAI,EAA/B,EAAmC,IAAI,EAAvC,EAA2C,GAA3C,EAAgD,GAAhD,CAZc,EAcdA,SAAS,KAAK,EAAd,EAAkB,KAAK,EAAvB,EAA2B,IAAI,EAA/B,EAAmC,IAAI,EAAvC,EAA2C,GAA3C,EAAgD,GAAhD,CAdc,EAedA,SAAS,IAAI,EAAb,EAAiB,KAAK,EAAtB,EAA0B,IAAI,EAA9B,EAAkC,IAAI,EAAtC,EAA0C,GAA1C,EAA+C,GAA/C,CAfc,EAgBdA,SAAS,KAAK,EAAd,EAAkB,KAAK,EAAvB,EAA2B,IAAI,EAA/B,EAAmC,IAAI,EAAvC,EAA2C,GAA3C,EAAgD,GAAhD,CAhBc,EAkBdC,0BAA0B,CAA1B,EAA6B,EAA7B,EAAiC,CAAjC,EAAoC,GAApC,EAAyC,EAAzC,CAlBc,EAoBdf,kBAAkBR,UAAU,CAA5B,EAA+BA,UAAU,CAAzC,EAA4C,CAA5C,CApBc,CAAZ,CA7Dd;;AAAA;;AAoFQC,2CAAmB,KAAnB;;AApFR;AAAA,+BAsFcC,QAAQC,GAAR,CAAY,CACdmB,SAAS,EAAT,EAAa,CAAb,EAAgB,KAAK,EAArB,EAAyBX,QAAzB,EAAmC,CAAnC,EAAsC,CAAtC,CADc,EAEdW,SAAS,EAAT,EAAahB,WAAb,EAA0B,KAAK,EAA/B,EAAmCM,SAAnC,EAA8C,IAA9C,EAAoD,CAApD,CAFc,EAGdU,SAAS,EAAT,EAAaT,WAAb,EAA0B,KAAK,EAA/B,EAAmCF,QAAnC,EAA6C,GAA7C,EAAkD,CAAlD,CAHc,EAKdW,SAAS,CAAT,EAAY,EAAZ,EAAgBX,QAAhB,EAA0B,KAAK,EAA/B,EAAmC,IAAnC,EAAyC,CAAzC,CALc,EAMdW,SAAShB,WAAT,EAAsB,EAAtB,EAA0BM,SAA1B,EAAqC,KAAK,EAA1C,EAA8C,GAA9C,EAAmD,CAAnD,CANc,EAOdU,SAAST,WAAT,EAAsB,EAAtB,EAA0BF,QAA1B,EAAoC,KAAK,EAAzC,EAA6C,IAA7C,EAAmD,CAAnD,CAPc,EASdH,kBAAkBR,UAAU,CAA5B,EAA+BA,UAAU,CAAzC,EAA4C,CAA5C,CATc,EAUdsB,SAASX,QAAT,EAAmB,EAAnB,EAAuBC,SAAvB,EAAkC,KAAK,EAAvC,EAA2C,IAA3C,EAAiD,CAAjD,CAVc,EAWdU,SAASf,UAAT,EAAqB,EAArB,EAAyBK,SAAzB,EAAoC,KAAK,EAAzC,EAA6C,GAA7C,EAAkD,CAAlD,CAXc,EAYdU,SAAS,EAAT,EAAaX,QAAb,EAAuB,KAAK,EAA5B,EAAgCC,SAAhC,EAA2C,IAA3C,EAAiD,CAAjD,CAZc,EAadU,SAAS,EAAT,EAAaf,UAAb,EAAyB,KAAK,EAA9B,EAAkCK,SAAlC,EAA6C,GAA7C,EAAkD,CAAlD,CAbc,CAAZ,CAtFd;;AAAA;;AAsGQX,2CAAmB,KAAnB;;AAEA0B;;AAEAZ,gCAAQC,GAAR,YAAqBC,YAArB;AACAC;AA3GR;AAAA;;AAAA;AAAA;AAAA;;AA6GQH,gCAAQC,GAAR,YAAqBC,YAArB;;AA7GR;AA8GK;;AA9GL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAec,S;;;;;;wEAiHf;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEQlC,wCAAgBG,UAAUD,iBAA1B,EAA6CC,UAAUD,iBAAvD;;AAEAE,2CAAmB,KAAnB;;AAJR;AAAA,+BAMcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBC,UAAjB,EAA6BO,SAA7B,CADc,EAEdR,WAAW,CAAX,EAAcQ,SAAd,EAAyBA,SAAzB,EAAoCZ,OAApC,CAFc,EAGdI,WAAWgB,YAAX,EAAyBR,SAAzB,EAAoCA,SAApC,EAA+CZ,OAA/C,CAHc,EAIdI,WAAW,CAAX,EAAcgB,YAAd,EAA4B,KAAK,EAAjC,EAAqCT,QAArC,CAJc,EAKdP,WAAW,KAAK,EAAhB,EAAoBgB,YAApB,EAAkC,KAAK,EAAvC,EAA2CT,QAA3C,CALc,EAMdH,kBAAkBG,WAAW,CAA7B,EAAgCG,aAAa,CAA7C,EAAgD,CAAhD,CANc,EAQdJ,mBAAmBG,cAAc,CAAjC,EAAoCC,aAAa,CAAjD,EAAoD,GAApD,EAAyD,CAAzD,CARc,CAAZ,CANd;;AAAA;;AAiBQb,2CAAmB,KAAnB;;AAjBR;AAAA,+BAmBcC,QAAQC,GAAR,CAAY,CACdC,WAAWQ,SAAX,EAAsBA,SAAtB,EAAiC,IAAI,EAArC,EAAyCQ,YAAzC,CADc,EAEdhB,WAAW,KAAK,EAAhB,EAAoB,KAAK,EAAzB,EAA6B,IAAI,EAAjC,EAAqC,KAAK,EAA1C,CAFc,EAGdA,WAAW,KAAK,EAAhB,EAAoBQ,SAApB,EAA+B,IAAI,EAAnC,EAAuCQ,YAAvC,CAHc,EAIdZ,kBAAkBK,cAAc,CAAhC,EAAmCA,cAAc,CAAjD,EAAoD,CAApD,CAJc,EAKdH,mBAAmBV,UAAU,CAA7B,EAAgCgC,aAAa,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,CALc,EAOdX,cAAc,CAAd,EAAiBT,SAAjB,EAA4BA,SAA5B,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CAPc,EAQdS,cAAc,CAAd,EAAiBrB,OAAjB,EAA0BY,SAA1B,EAAqC,IAAI,EAAzC,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,CARc,EASdS,cAAc,CAAd,EAAiBD,YAAjB,EAA+BR,SAA/B,EAA0C,IAAI,EAA9C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,CAAxD,CATc,EAWdW,0BAA0B,CAA1B,EAA6B,EAA7B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,EAA3C,CAXc,CAAZ,CAnBd;;AAAA;;AAiCQtB,2CAAmB,KAAnB;;AAEAgC,oCAAYpB,cAAc,CAA1B,EAA6BA,cAAc,CAA3C;;AAnCR;AAAA,+BAqCcX,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBC,UAAjB,EAA6B,IAAI,EAAjC,CADc,EAEdD,WAAW,CAAX,EAAc,IAAI,EAAlB,EAAsBC,UAAtB,EAAkC,IAAI,EAAtC,CAFc,EAGdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CAHc,EAIdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CAJc,EAKdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CALc,EAMdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CANc,EAOdD,WAAW,CAAX,EAAc,CAAd,EAAiB,IAAI,EAArB,EAAyBC,UAAzB,CAPc,EAQdD,WAAW,IAAI,EAAf,EAAmB,CAAnB,EAAsB,IAAI,EAA1B,EAA8BC,UAA9B,CARc,EASdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CATc,EAUdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CAVc,EAWdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CAXc,EAYdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CAZc,EAadG,kBAAkB,IAAI,EAAJ,GAAS,CAA3B,EAA8B,IAAI,EAAJ,GAAS,CAAvC,EAA0C,CAA1C,CAbc,EAcdE,mBAAmB,IAAI,EAAJ,GAAS,CAA5B,EAA+B,KAAK,EAAL,GAAU,CAAzC,EAA4C,CAA5C,EAA+C,EAA/C,CAdc,EAgBdA,mBAAmBV,UAAU,CAA7B,EAAgCA,UAAU,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,CAhBc,EAkBdqB,cAAc,IAAI,EAAlB,EAAsB,IAAI,EAA1B,EAA8B,IAAI,EAAlC,EAAsC,IAAI,EAA1C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,CAlBc,EAmBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CAnBc,EAqBdA,cAAc,IAAI,EAAlB,EAAsB,IAAI,EAA1B,EAA8B,IAAI,EAAlC,EAAsC,IAAI,EAA1C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,CArBc,EAsBdA,cAAc,IAAI,EAAlB,EAAsB,IAAI,EAA1B,EAA8B,IAAI,EAAlC,EAAsC,IAAI,EAA1C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,CAtBc,EAuBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CAvBc,EAwBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CAxBc,EAyBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CAzBc,EA2BdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CA3Bc,EA4BdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,CA5Bc,EA6BdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,CA7Bc,EA+BdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CA/Bc,EAgCdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CAhCc,EAiCdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,CAjCc,EAkCdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,CAlCc,EAmCdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,CAnCc,EAqCdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CArCc,EAsCdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,CAtCc,CAAZ,CArCd;;AAAA;;AA8EQpB,2CAAmB,KAAnB;;AAEAc,gCAAQC,GAAR,YAAqBC,YAArB;AACAC;AAjFR;AAAA;;AAAA;AAAA;AAAA;;AAmFQH,gCAAQC,GAAR,YAAqBC,YAArB;;AAnFR;AAoFK;;AApFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeiB,S;;;;;;wEAuFf;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEQrC,wCAAgBc,WAAWZ,iBAA3B,EAA8CY,WAAWZ,iBAAzD;;AAEAE,2CAAmB,KAAnB;;AAJR;AAAA,+BAMcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+BQ,SAA/B,CADc,EAEdR,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,CAFc,EAGdA,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,KAAK,EAAxC,CAHc,EAIdD,WAAW,CAAX,EAAc,CAAd,EAAiB,IAAI,EAArB,EAAyB,IAAI,EAA7B,CAJc,EAKdA,WAAW,IAAI,EAAf,EAAmB,CAAnB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,CALc,EAMdA,WAAW,KAAK,EAAhB,EAAoB,IAAI,EAAxB,EAA4B,IAAI,EAAhC,EAAoCJ,OAApC,CANc,EAOdI,WAAW,KAAK,EAAhB,EAAoB,IAAI,EAAxB,EAA4B,IAAI,EAAhC,EAAoC,IAAI,EAAxC,CAPc,EAQdA,WAAW,KAAK,EAAhB,EAAoBE,WAApB,EAAiCK,QAAjC,EAA2C,IAAI,EAA/C,CARc,EASdH,kBAAkBR,UAAU,CAA5B,EAA+BA,UAAU,CAAzC,EAA4C,CAA5C,CATc,EAUdqB,cAAc,IAAI,EAAlB,EAAsB,IAAI,EAA1B,EAA8B,KAAK,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,GAAlD,EAAuD,CAAvD,CAVc,EAWdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,KAAK,EAA5C,EAAgD,CAAhD,EAAmD,GAAnD,EAAwD,CAAxD,CAXc,CAAZ,CANd;;AAAA;;AAoBQpB,2CAAmB,KAAnB;;AApBR;AAAA,+BAsBcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBC,UAAjB,EAA6BO,SAA7B,CADc,EAEdR,WAAW,CAAX,EAAcQ,SAAd,EAAyBA,SAAzB,EAAoCZ,OAApC,CAFc,EAGdI,WAAWgB,YAAX,EAAyBR,SAAzB,EAAoCA,SAApC,EAA+CZ,OAA/C,CAHc,EAIdI,WAAW,CAAX,EAAcgB,YAAd,EAA4B,KAAK,EAAjC,EAAqCT,QAArC,CAJc,EAKdP,WAAW,KAAK,EAAhB,EAAoBgB,YAApB,EAAkC,KAAK,EAAvC,EAA2CT,QAA3C,CALc,EAMdH,kBAAkBgB,WAAW,CAA7B,EAAgCV,aAAa,CAA7C,EAAgD,CAAhD,CANc,EAOdO,cAAcV,QAAd,EAAwBE,WAAxB,EAAqC,KAAK,EAA1C,EAA8C,IAAI,EAAlD,EAAsD,CAAtD,EAAyD,GAAzD,EAA8D,CAA9D,CAPc,EAQdQ,cAAc,KAAK,EAAnB,EAAuBR,WAAvB,EAAoC,KAAK,EAAzC,EAA6C,IAAI,EAAjD,EAAqD,CAArD,EAAwD,GAAxD,EAA6D,CAA7D,CARc,EAUdH,mBAAmBI,aAAa,CAAhC,EAAmCA,aAAa,CAAhD,EAAmD,GAAnD,EAAwD,CAAxD,CAVc,CAAZ,CAtBd;;AAAA;;AAmCQb,2CAAmB,KAAnB;;AAnCR;AAAA,+BAqCcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiB,KAAK,EAAtB,EAA0BS,WAA1B,CADc,EAEdT,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuBO,QAAvB,EAAiC,KAAK,EAAtC,CAFc,EAGdP,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,KAAK,EAA5B,EAAgCC,UAAhC,CAHc,EAIdG,kBAAkBR,UAAU,CAA5B,EAA+BA,UAAU,CAAzC,EAA4C,CAA5C,CAJc,EAKduB,0BAA0B,CAA1B,EAA6B,EAA7B,EAAiC,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CALc,EAOdA,0BAA0B,KAAK,EAA/B,EAAmC,EAAnC,EAAuC,CAAC,GAAxC,EAA6C,CAA7C,EAAgD,EAAhD,CAPc,CAAZ,CArCd;;AAAA;;AA+CQtB,2CAAmB,KAAnB;;AA/CR;AAAA,+BAiDcC,QAAQC,GAAR,CAAY,CACdK,kBAAkBgB,WAAW,CAA7B,EAAgCV,aAAa,CAA7C,EAAgD,CAAhD,CADc,EAEdQ,SAAS,KAAK,EAAd,EAAkB,KAAK,EAAvB,EAA2B,IAAI,EAA/B,EAAmC,IAAI,EAAvC,EAA2C,IAA3C,EAAiD,GAAjD,CAFc,EAGdA,SAAS,KAAK,EAAd,EAAkB,KAAK,EAAvB,EAA2B,IAAI,EAA/B,EAAmC,IAAI,EAAvC,EAA2C,GAA3C,EAAgD,GAAhD,CAHc,EAIdA,SAAS,KAAK,EAAd,EAAkB,KAAK,EAAvB,EAA2B,IAAI,EAA/B,EAAmC,IAAI,EAAvC,EAA2C,IAA3C,EAAiD,GAAjD,CAJc,EAKdA,SAAS,KAAK,EAAd,EAAkB,KAAK,EAAvB,EAA2B,IAAI,EAA/B,EAAmC,IAAI,EAAvC,EAA2C,GAA3C,EAAgD,GAAhD,CALc,EAMdA,SAAS,KAAK,EAAd,EAAkB,KAAK,EAAvB,EAA2B,KAAK,EAAhC,EAAoC,KAAK,EAAzC,EAA6C,IAA7C,EAAmD,GAAnD,CANc,EAOdA,SAAS,KAAK,EAAd,EAAkB,KAAK,EAAvB,EAA2B,KAAK,EAAhC,EAAoC,KAAK,EAAzC,EAA6C,GAA7C,EAAkD,GAAlD,CAPc,EAQdA,SAAS,IAAI,EAAb,EAAiB,IAAI,EAArB,EAAyB,KAAK,EAA9B,EAAkC,KAAK,EAAvC,EAA2C,IAA3C,EAAiD,GAAjD,CARc,EASdA,SAAS,IAAI,EAAb,EAAiB,IAAI,EAArB,EAAyB,KAAK,EAA9B,EAAkC,KAAK,EAAvC,EAA2C,GAA3C,EAAgD,GAAhD,CATc,EAUdA,SAAS,IAAI,EAAb,EAAiB,IAAI,EAArB,EAAyB,KAAK,EAA9B,EAAkC,KAAK,EAAvC,EAA2C,IAA3C,EAAiD,GAAjD,CAVc,EAWdA,SAAS,IAAI,EAAb,EAAiB,IAAI,EAArB,EAAyB,KAAK,EAA9B,EAAkC,KAAK,EAAvC,EAA2C,GAA3C,EAAgD,GAAhD,CAXc,EAYdA,SAAS,IAAI,EAAb,EAAiB,IAAI,EAArB,EAAyB,KAAK,EAA9B,EAAkC,KAAK,EAAvC,EAA2C,IAA3C,EAAiD,GAAjD,CAZc,EAadA,SAAS,IAAI,EAAb,EAAiB,IAAI,EAArB,EAAyB,KAAK,EAA9B,EAAkC,KAAK,EAAvC,EAA2C,GAA3C,EAAgD,GAAhD,CAbc,EAcdA,SAAS,IAAI,EAAb,EAAiB,IAAI,EAArB,EAAyB,KAAK,EAA9B,EAAkC,KAAK,EAAvC,EAA2C,IAA3C,EAAiD,GAAjD,CAdc,EAedA,SAAS,IAAI,EAAb,EAAiB,IAAI,EAArB,EAAyB,KAAK,EAA9B,EAAkC,KAAK,EAAvC,EAA2C,GAA3C,EAAgD,GAAhD,CAfc,EAgBdA,SAAS,IAAI,EAAb,EAAiB,IAAI,EAArB,EAAyB,KAAK,EAA9B,EAAkC,KAAK,EAAvC,EAA2C,IAA3C,EAAiD,GAAjD,CAhBc,EAiBdA,SAAS,CAAT,EAAY,CAAZ,EAAe,KAAK,EAApB,EAAwB,KAAK,EAA7B,EAAiC,GAAjC,EAAsC,GAAtC,CAjBc,CAAZ,CAjDd;;AAAA;;AAqEQrB,2CAAmB,KAAnB;;AArER;AAAA,+BAuEcC,QAAQC,GAAR,CAAY,CACdK,kBAAkBR,UAAU,CAA5B,EAA+BA,UAAU,CAAzC,EAA4C,CAA5C,CADc,EAEduB,0BAA0B,CAA1B,EAA6BZ,QAA7B,EAAuC,GAAvC,EAA4C,CAA5C,EAA+C,EAA/C,CAFc,EAGdmB,wBAAwBjB,WAAxB,EAAqCF,QAArC,EAA+C,CAAC,GAAhD,EAAqD,CAArD,EAAwD,EAAxD,CAHc,CAAZ,CAvEd;;AAAA;;AA6EQV,2CAAmB,KAAnB;;AAEAc,gCAAQC,GAAR,YAAqBC,YAArB;AACAC;AAhFR;AAAA;;AAAA;AAAA;AAAA;;AAkFQH,gCAAQC,GAAR,YAAqBC,YAArB;;AAlFR;AAmFK;;AAnFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAekB,Q;;;;;;wEAsFf;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEQtC,wCAAgBG,UAAUD,iBAA1B,EAA6CC,UAAUD,iBAAvD;;AAEAE,2CAAmB,KAAnB;;AAJR;AAAA,+BAMcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBC,UAAjB,EAA6B,KAAK,EAAlC,CADc,EAEdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgCO,QAAhC,CAFc,EAGdP,WAAW,KAAK,EAAhB,EAAoB,KAAK,EAAzB,EAA6B,KAAK,EAAlC,EAAsCO,QAAtC,CAHc,EAIdP,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CAJc,EAKdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBQ,SAAvB,EAAkCD,QAAlC,CALc,EAMdP,WAAW,KAAK,EAAhB,EAAoB,KAAK,EAAzB,EAA6B,KAAK,EAAlC,EAAsC,IAAI,EAA1C,CANc,EAOdA,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CAPc,EAQdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+BO,QAA/B,CARc,EASdP,WAAW,IAAI,EAAf,EAAmB,KAAK,EAAxB,EAA4B,KAAK,EAAjC,EAAqCO,QAArC,CATc,EAUdP,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CAVc,EAWdG,kBAAkBG,WAAW,CAA7B,EAAgCE,cAAc,CAA9C,EAAiD,CAAjD,CAXc,CAAZ,CANd;;AAAA;;AAoBQZ,2CAAmB,KAAnB;;AApBR;AAAA,+BAsBcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBgB,YAAjB,EAA+BR,SAA/B,CADc,EAEdR,WAAW,CAAX,EAAcQ,SAAd,EAAyBZ,OAAzB,EAAkCY,SAAlC,CAFc,EAGdR,WAAWgB,YAAX,EAAyBR,SAAzB,EAAoCA,SAApC,EAA+CA,SAA/C,CAHc,EAIdR,WAAW,CAAX,EAAcJ,OAAd,EAAuBY,SAAvB,EAAkCA,SAAlC,CAJc,EAKdR,WAAWJ,OAAX,EAAoBA,OAApB,EAA6BA,OAA7B,EAAsCY,SAAtC,CALc,EAMdR,WAAWQ,SAAX,EAAsBQ,YAAtB,EAAoCA,YAApC,EAAkDR,SAAlD,CANc,EAOdJ,kBAAkBK,cAAc,CAAhC,EAAmCF,WAAW,CAA9C,EAAiD,CAAjD,CAPc,EAQdU,cAAcD,YAAd,EAA4B,CAA5B,EAA+BR,SAA/B,EAA0CA,SAA1C,EAAqD,CAArD,EAAwD,GAAxD,EAA6D,GAA7D,CARc,EASdS,cAAcrB,OAAd,EAAuBY,SAAvB,EAAkCA,SAAlC,EAA6CA,SAA7C,EAAwD,CAAxD,EAA2D,GAA3D,EAAgE,GAAhE,CATc,EAUdS,cAAcT,SAAd,EAAyBZ,OAAzB,EAAkCY,SAAlC,EAA6CA,SAA7C,EAAwD,CAAxD,EAA2D,GAA3D,EAAgE,GAAhE,CAVc,EAWdS,cAAc,CAAd,EAAiBD,YAAjB,EAA+BR,SAA/B,EAA0CA,SAA1C,EAAqD,CAArD,EAAwD,GAAxD,EAA6D,GAA7D,CAXc,CAAZ,CAtBd;;AAAA;;AAoCQX,2CAAmB,KAAnB;;AApCR;AAAA,+BAsCcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBgB,YAAjB,EAA+BT,QAA/B,CADc,EAEdP,WAAW,CAAX,EAAcO,QAAd,EAAwBJ,UAAxB,EAAoCI,QAApC,CAFc,EAGdP,WAAW,CAAX,EAAcQ,SAAd,EAAyBZ,OAAzB,EAAkCW,QAAlC,CAHc,EAIdP,WAAWS,WAAX,EAAwBD,SAAxB,EAAmCD,QAAnC,EAA6CA,QAA7C,CAJc,EAKdP,WAAW,CAAX,EAAcE,WAAd,EAA2BA,WAA3B,EAAwCK,QAAxC,CALc,EAMdP,WAAWgB,YAAX,EAAyBd,WAAzB,EAAsCM,SAAtC,EAAiDD,QAAjD,CANc,EAOdP,WAAWgB,YAAX,EAAyBpB,OAAzB,EAAkCY,SAAlC,EAA6CD,QAA7C,CAPc,EAQdP,WAAW,CAAX,EAAcJ,OAAd,EAAuBM,WAAvB,EAAoCK,QAApC,CARc,EASdP,WAAWS,WAAX,EAAwBN,UAAxB,EAAoCI,QAApC,EAA8CA,QAA9C,CATc,EAUdP,WAAW,CAAX,EAAcG,UAAd,EAA0BP,OAA1B,EAAmCW,QAAnC,CAVc,EAWdP,WAAW,CAAX,EAAcgB,YAAd,EAA4Bb,UAA5B,EAAwCI,QAAxC,CAXc,EAYdP,WAAW,CAAX,EAAcS,WAAd,EAA2BO,YAA3B,EAAyCT,QAAzC,CAZc,EAadH,kBAAkBK,cAAc,CAAhC,EAAmCA,cAAc,CAAjD,EAAoD,CAApD,CAbc,EAcdH,mBAAmB0B,YAAY,CAA/B,EAAkCpC,UAAU,CAA5C,EAA+C,CAA/C,EAAkD,EAAlD,CAdc,EAedqB,cAAcf,WAAd,EAA2BA,WAA3B,EAAwCK,QAAxC,EAAkDC,SAAlD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,CAfc,EAgBdS,cAAcrB,OAAd,EAAuBY,SAAvB,EAAkCD,QAAlC,EAA4CX,OAA5C,EAAqD,GAArD,EAA0D,GAA1D,EAA+D,GAA/D,CAhBc,EAiBdqB,cAAcd,UAAd,EAA0BI,QAA1B,EAAoCA,QAApC,EAA8CS,YAA9C,EAA4D,GAA5D,EAAiE,GAAjE,EAAsE,GAAtE,CAjBc,CAAZ,CAtCd;;AAAA;;AA0DQnB,2CAAmB,KAAnB;;AAEAgC,oCAAYpB,cAAcd,iBAA1B,EAA6Cc,cAAcd,iBAA3D;;AA5DR;AAAA,+BA8DcG,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBC,UAAjB,EAA6B,IAAI,EAAjC,CADc,EAEdD,WAAW,CAAX,EAAc,IAAI,EAAlB,EAAsBC,UAAtB,EAAkC,IAAI,EAAtC,CAFc,EAGdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CAHc,EAIdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CAJc,EAKdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CALc,EAMdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CANc,EAOdD,WAAW,CAAX,EAAc,CAAd,EAAiB,IAAI,EAArB,EAAyBC,UAAzB,CAPc,EAQdD,WAAW,IAAI,EAAf,EAAmB,CAAnB,EAAsB,IAAI,EAA1B,EAA8BC,UAA9B,CARc,EASdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CATc,EAUdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CAVc,EAWdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CAXc,EAYdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CAZc,EAadG,kBAAkBG,WAAW,CAA7B,EAAgCA,WAAW,CAA3C,CAbc,EAcdD,mBAAmBC,WAAW,CAA9B,EAAiCX,UAAU,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,CAdc,EAgBdqB,cAAc,IAAI,EAAlB,EAAsB,IAAI,EAA1B,EAA8B,IAAI,EAAlC,EAAsC,IAAI,EAA1C,EAA8C,IAA9C,EAAoD,CAApD,EAAuD,GAAvD,CAhBc,EAiBdA,cAAc,IAAI,EAAlB,EAAsB,IAAI,EAA1B,EAA8B,IAAI,EAAlC,EAAsC,IAAI,EAA1C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,GAApD,CAjBc,EAkBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,IAA/C,EAAqD,CAArD,EAAwD,GAAxD,CAlBc,EAmBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,GAArD,CAnBc,EAoBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,IAA/C,EAAqD,CAArD,EAAwD,GAAxD,CApBc,EAsBdA,cAAc,IAAI,EAAlB,EAAsB,IAAI,EAA1B,EAA8B,IAAI,EAAlC,EAAsC,IAAI,EAA1C,EAA8C,IAA9C,EAAoD,CAApD,EAAuD,GAAvD,CAtBc,EAuBdA,cAAc,IAAI,EAAlB,EAAsB,IAAI,EAA1B,EAA8B,IAAI,EAAlC,EAAsC,IAAI,EAA1C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,GAApD,CAvBc,EAwBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,IAA/C,EAAqD,CAArD,EAAwD,GAAxD,CAxBc,EAyBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,GAArD,CAzBc,EA0BdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,IAA/C,EAAqD,CAArD,EAAwD,GAAxD,CA1Bc,EA4BdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,IAA/C,EAAqD,CAArD,EAAwD,GAAxD,CA5Bc,EA6BdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,GAArD,CA7Bc,EA8BdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,IAAhD,EAAsD,CAAtD,EAAyD,GAAzD,CA9Bc,EA+BdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,GAAtD,CA/Bc,EAgCdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,IAAhD,EAAsD,CAAtD,EAAyD,GAAzD,CAhCc,EAkCdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,IAA/C,EAAqD,CAArD,EAAwD,GAAxD,CAlCc,EAmCdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,GAArD,CAnCc,EAoCdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,IAAhD,EAAsD,CAAtD,EAAyD,GAAzD,CApCc,EAqCdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,GAAtD,CArCc,EAsCdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,IAAhD,EAAsD,CAAtD,EAAyD,GAAzD,CAtCc,EAwCdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,IAA/C,EAAqD,CAArD,EAAwD,GAAxD,CAxCc,EAyCdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,GAArD,CAzCc,EA0CdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,IAAhD,EAAsD,CAAtD,EAAyD,GAAzD,CA1Cc,EA2CdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,GAAtD,CA3Cc,EA4CdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,IAAhD,EAAsD,CAAtD,EAAyD,GAAzD,CA5Cc,CAAZ,CA9Dd;;AAAA;;AA6GQpB,2CAAmB,KAAnB;;AA7GR;AAAA,+BA+GcC,QAAQC,GAAR,CAAY,CACdC,WAAW,CAAX,EAAc,CAAd,EAAiBC,UAAjB,EAA6B,IAAI,EAAjC,CADc,EAEdD,WAAW,CAAX,EAAc,IAAI,EAAlB,EAAsBC,UAAtB,EAAkC,IAAI,EAAtC,CAFc,EAGdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CAHc,EAIdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CAJc,EAKdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CALc,EAMdD,WAAW,CAAX,EAAc,KAAK,EAAnB,EAAuBC,UAAvB,EAAmC,IAAI,EAAvC,CANc,EAOdD,WAAW,CAAX,EAAc,CAAd,EAAiB,IAAI,EAArB,EAAyBC,UAAzB,CAPc,EAQdD,WAAW,IAAI,EAAf,EAAmB,CAAnB,EAAsB,IAAI,EAA1B,EAA8BC,UAA9B,CARc,EASdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CATc,EAUdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CAVc,EAWdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CAXc,EAYdD,WAAW,KAAK,EAAhB,EAAoB,CAApB,EAAuB,IAAI,EAA3B,EAA+BC,UAA/B,CAZc,EAadG,kBAAkBG,WAAW,CAA7B,EAAgCE,cAAc,CAA9C,EAAiD,CAAjD,CAbc,EAedQ,cAAc,IAAI,EAAlB,EAAsB,IAAI,EAA1B,EAA8B,IAAI,EAAlC,EAAsC,IAAI,EAA1C,EAA8C,CAA9C,EAAiD,GAAjD,EAAsD,GAAtD,CAfc,EAgBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,GAAlD,EAAuD,GAAvD,CAhBc,EAiBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,GAAlD,EAAuD,GAAvD,CAjBc,EAmBdA,cAAc,IAAI,EAAlB,EAAsB,IAAI,EAA1B,EAA8B,IAAI,EAAlC,EAAsC,IAAI,EAA1C,EAA8C,CAA9C,EAAiD,GAAjD,EAAsD,GAAtD,CAnBc,EAoBdA,cAAc,IAAI,EAAlB,EAAsB,IAAI,EAA1B,EAA8B,IAAI,EAAlC,EAAsC,IAAI,EAA1C,EAA8C,CAA9C,EAAiD,GAAjD,EAAsD,GAAtD,CApBc,EAqBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,GAAlD,EAAuD,GAAvD,CArBc,EAsBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,GAAlD,EAAuD,GAAvD,CAtBc,EAuBdA,cAAc,KAAK,EAAnB,EAAuB,IAAI,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,GAAlD,EAAuD,GAAvD,CAvBc,EAyBdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,GAAlD,EAAuD,GAAvD,CAzBc,EA0BdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,GAAlD,EAAuD,GAAvD,CA1Bc,EA2BdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,GAAnD,EAAwD,GAAxD,CA3Bc,EA4BdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,GAAnD,EAAwD,GAAxD,CA5Bc,EA8BdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,GAAlD,EAAuD,GAAvD,CA9Bc,EA+BdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,GAAlD,EAAuD,GAAvD,CA/Bc,EAgCdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,GAAnD,EAAwD,GAAxD,CAhCc,EAiCdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,GAAnD,EAAwD,GAAxD,CAjCc,EAkCdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,GAAnD,EAAwD,GAAxD,CAlCc,EAoCdA,cAAc,IAAI,EAAlB,EAAsB,KAAK,EAA3B,EAA+B,IAAI,EAAnC,EAAuC,IAAI,EAA3C,EAA+C,CAA/C,EAAkD,GAAlD,EAAuD,GAAvD,CApCc,EAqCdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,GAAnD,EAAwD,GAAxD,CArCc,EAsCdA,cAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,IAAI,EAApC,EAAwC,IAAI,EAA5C,EAAgD,CAAhD,EAAmD,GAAnD,EAAwD,GAAxD,CAtCc,CAAZ,CA/Gd;;AAAA;;AAwJQN,gCAAQC,GAAR,YAAqBC,YAArB;AACAC;AAzJR;AAAA;;AAAA;AAAA;AAAA;;AA2JQH,gCAAQC,GAAR,YAAqBC,YAArB;;AA3JR;AA4JK;;AA5JL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeoB,U;;;;;;wEA+Jf;AAAA;AAAA;AAAA;AAAA;AACI,4BAAI,CAEH,CAFD,CAEE,OAAOC,KAAP,EAAc;AACZvB,oCAAQC,GAAR,YAAqBC,YAArB;AACH;;AALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAesB,U;;;;;;wEAQf;AAAA;AAAA;AAAA;AAAA;AACI,4BAAI,CAEH,CAFD,CAEE,OAAOD,KAAP,EAAc;AACZvB,oCAAQC,GAAR,YAAqBC,YAArB;AACH;;AALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeuB,S;;;;;;yEAQf;AAAA;AAAA;AAAA;AAAA;AACI,4BAAI,CAEH,CAFD,CAEE,OAAOF,KAAP,EAAc;AACZvB,oCAAQC,GAAR,YAAqBC,YAArB;AACH;;AALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAewB,Q;;;;;;yEAQf;AAAA;AAAA;AAAA;AAAA;AACI,4BAAI,CAEH,CAFD,CAEE,OAAOH,KAAP,EAAc;AACZvB,oCAAQC,GAAR,YAAqBC,YAArB;AACH;;AALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeyB,W;;;;;;yEAQf;AAAA;AAAA;AAAA;AAAA;AACI,4BAAI,CAEH,CAFD,CAEE,OAAOJ,KAAP,EAAc;AACZvB,oCAAQC,GAAR,YAAqBC,YAArB;AACH;;AALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe0B,W;;;;;AAmBf;;yEACA,mBAA4BC,MAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACI;AACA,6BAASC,CAAT,GAAa,CAAb,EAAgBA,IAAIC,gBAAgBC,MAApC,EAA4CF,GAA5C,EAAiD;AAC7CG,yCAAaF,gBAAgBD,CAAhB,CAAb;AACH;;AAEDC,wCAAgBG,MAAhB,CAAuB,CAAvB;;AAEA;AACA,6BAASJ,EAAT,GAAa,CAAb,EAAgBA,KAAIK,iBAAiBH,MAArC,EAA6CF,IAA7C,EAAkD;AAC9CM,0CAAcD,iBAAiBL,EAAjB,CAAd;AACH;;AAEDK,yCAAiBD,MAAjB,CAAwB,CAAxB;;AAEAG;AACA,6BAASP,GAAT,GAAa,CAAb,EAAgBA,MAAIQ,WAAWN,MAA/B,EAAuCF,KAAvC,EAA4C;AACxCS,4CAAgBD,WAAWR,GAAX,CAAhB;AACH;;AAEDlB;;AAEA;AACA4B,6CAAqB,CAArB;;AAEA;;AAzBJ,8BA0BQX,WAAW,MA1BnB;AAAA;AAAA;AAAA;;AA2BQY,oCAAY,6BAAZ;;AAEA;AACAC,gCAAQC,KAAR,GAAgB,aAAhB;AACAD,gCAAQE,EAAR,GAAa,CAAb;;AA/BR;AAAA,+BAiCcC,eAAe,mCAAf,CAjCd;;AAAA;AAAA;AAAA;;AAAA;AAAA,8BAkCehB,WAAW,YAlC1B;AAAA;AAAA;AAAA;;AAmCQa,gCAAQC,KAAR,GAAgB,SAAhB;AACAG;AApCR;AAAA;;AAAA;AAAA,8BAqCejB,WAAW,gBArC1B;AAAA;AAAA;AAAA;;AAsCQY,oCAAY,iBAAZ;AAtCR;AAAA,+BAuCcM,aAAaC,2BAAb,EAA0C,IAA1C,CAvCd;;AAAA;AAAA;AAAA,+BAwCcH,eAAe,8BAAf,CAxCd;;AAAA;AAyCK;;AAzCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeI,Y;;;;;;yEA4Cf;AAAA;AAAA;AAAA;AAAA;AACIR,oCAAY,gBAAZ;;AAEAC,gCAAQQ,kBAAR,GAA6B,CAAC,GAA9B;;AAGA;AACAC,0CAAkBjD,YAAlB;AACAsC,6CAAqB,CAArB;AACAY;;AAEAlD;;AAEA;AAbJ;AAAA,+BAcU,IAAIf,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AACnC,gCAAIC,mBAAmB,IAAIC,QAAJ,EAAvB;AACAC,sCAAUC,IAAV,CAAeH,gBAAf;;AAEA,qCAASI,uBAAT,GAAmC;AAC/BJ,iDAAiBK,CAAjB,IAAsBC,KAAKC,GAAL,CAAS,CAAT,EAAapB,QAAQkB,CAAR,GAAYL,iBAAiBK,CAA7B,GAAiCL,iBAAiBQ,MAA/D,CAAtB;;AAEA,oCAAIR,iBAAiBK,CAAjB,GAAqBL,iBAAiBQ,MAAtC,KAAiDrB,QAAQkB,CAA7D,EAAgE;AAC5D;AACAI,2CAAOC,qBAAP,CAA6BN,uBAA7B;AACH,iCAHD,MAGO;AACHN,4CAAQ,UAAR;AACH;AACJ;;AAEDW,mCAAOC,qBAAP,CAA6BN,uBAA7B;AACH,yBAhBK,CAdV;;AAAA;AAAA;AAAA,+BAgCUd,eAAe,0BAAf,CAhCV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe1C,a;;;;;AAiIf;;yEACA,mBAA8B+D,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEU,IAAI/E,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AACnC,gCAAIa,qBAAqBC,WAAW,YAAM;AACtC;AACAX,0CAAUvB,MAAV,CAAiB,CAAjB;;AAEA;AACAmC,yCAASC,cAAT,CAAwB,kBAAxB,EAA4CC,SAA5C,GAAwDL,OAAxD;AACAzB,4CAAY,mBAAZ;AACAY,wCAAQ,UAAR;AACH,6BARwB,EAQtB,IARsB,CAAzB;AASH,yBAVK,CAFV;;AAAA;AAAA;AAAA,+BAciB,IAAIlE,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AAC1C;AACA,qCAASkB,aAAT,GAAyB;AACrB,oCAAIC,SAAS,EAAT,KAAgBA,SAAS,EAAT,CAApB,EAAkC;AAC9B;AACA,2CAAOA,SAAS,EAAT,CAAP;AACA,2CAAOA,SAAS,EAAT,CAAP;;AAEAJ,6CAASC,cAAT,CAAwB,kBAAxB,EAA4CC,SAA5C,GAAwD,EAAxD;;AAEA9B,gDAAY,SAAZ;AACAC,4CAAQC,KAAR,GAAgB,SAAhB;;AAEAG;;AAEAO,4CAAQ,UAAR;AACH,iCAbD,MAaO;AACH;AACAW,2CAAOC,qBAAP,CAA6BO,aAA7B;AACH;AACJ;;AAEDR,mCAAOC,qBAAP,CAA6BO,aAA7B;AACH,yBAvBY,CAdjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe3B,c;;;;;AAmHf;AACA;;yEACA,mBAAkC6B,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AACIC,sCAFR,GAEyB,CAFzB;AAAA;AAAA,+BAIU,IAAIxF,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AACnC;AACAoB,8CAAkBE,eAAlB,GAAoCvB,OAApC;AACAqB,8CAAkBG,cAAlB,GAAmCvB,MAAnC;;AAEAoB,8CAAkBI,OAAlB,GAA4BV,WAAW,YAAM;AACzCM,kDAAkBK,OAAlB,GAA4B,KAA5B;;AAEA1B,wCAAQ,UAAR;AACH,6BAJ2B,EAIzBsB,iBAAiB,IAAjB,GAAwB,IAJC,CAA5B;AAKH,yBAVK,CAJV;;AAAA;AAAA,6BAiBQzF,gBAjBR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,+BAmBU,IAAIC,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AACnC;AACAoB,8CAAkBE,eAAlB,GAAoCvB,OAApC;AACAqB,8CAAkBG,cAAlB,GAAmCvB,MAAnC;;AAEAoB,8CAAkBI,OAAlB,GAA4BV,WAAW,YAAM;AACzCM,kDAAkBK,OAAlB,GAA4B,IAA5B;;AAEA1B,wCAAQ,UAAR;AACH,6BAJ2B,EAIzBsB,iBAAiB,IAAjB,GAAwB,IAJC,CAA5B;AAKH,yBAVK,CAnBV;;AAAA;AAAA,6BAgCQzF,gBAhCR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,+BAkCU,IAAIC,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AACnC;AACAoB,8CAAkBE,eAAlB,GAAoCvB,OAApC;AACAqB,8CAAkBG,cAAlB,GAAmCvB,MAAnC;;AAEAoB,8CAAkBI,OAAlB,GAA4BV,WAAW,YAAM;AACzCM,kDAAkBK,OAAlB,GAA4B,KAA5B;;AAEA1B,wCAAQ,UAAR;AACH,6BAJ2B,EAIzBsB,iBAAiB,IAAjB,GAAwB,IAJC,CAA5B;AAKH,yBAVK,CAlCV;;AAAA;AAAA,6BA+CQzF,gBA/CR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,+BAkDiB,IAAIC,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AAC1C;AACAoB,8CAAkBE,eAAlB,GAAoCvB,OAApC;AACAqB,8CAAkBG,cAAlB,GAAmCvB,MAAnC;;AAEAoB,8CAAkBI,OAAlB,GAA4BV,WAAW,YAAM;AACzC;AACAM,kDAAkB/B,KAAlB,GAA0B,QAA1B;AACA+B,kDAAkBK,OAAlB,GAA4B,IAA5B;AACA1B,wCAAQ,UAAR;AACH,6BAL2B,EAKzBsB,iBAAiB,IAAjB,GAAwB,IALC,CAA5B;AAMH,yBAXY,CAlDjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeK,kB;;;;;AAgEf;;yEACA,mBAAkCC,CAAlC,EAAqCrB,CAArC,EAAwCsB,cAAxC,EAAwDC,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEUC,kBAAkBF,cAAlB,CAFV;;AAAA;AAAA,6BAKQhG,gBALR;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAOI;AACImG,gCARR,GAQmB,IAAIC,YAAJ,CAAiBL,CAAjB,EAAoBrB,CAApB,EAAuBuB,aAAvB,CARnB;;AASII,sCAAc7B,IAAd,CAAmB2B,QAAnB;;AAEA;AAXJ;AAAA,+BAYUL,mBAAmBK,QAAnB,CAZV;;AAAA;AAAA,6BAeQnG,gBAfR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,+BAkBiB,IAAIC,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AAC1C;AACA+B,qCAAST,eAAT,GAA2BvB,OAA3B;AACAgC,qCAASR,cAAT,GAA0BvB,MAA1B;;AAEA;AACA;AACA+B,qCAASG,sBAAT,GAAkCL,aAAlC;AACA,gCAAIM,iCAAiCC,YAAY,YAAM;AACnDL,yCAASG,sBAAT,IAAmC,KAAnC;AACH,6BAFoC,EAElC,CAFkC,CAArC;AAGAG,+CAAmBF,8BAAnB;;AAEAJ,qCAASP,OAAT,GAAmBV,WAAW,YAAM;AAChCwB,sDAAsBH,8BAAtB;;AAEA;AACA,oCAAII,gBAAgBN,cAAcO,OAAd,CAAsBT,QAAtB,CAApB;AACAE,8CAAcrD,MAAd,CAAqB2D,aAArB,EAAoC,CAApC;AACAxC,wCAAQ,UAAR;AACH,6BAPkB,EAOhB8B,gBAAgB,IAPA,CAAnB;AAQH,yBArBY,CAlBjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAexF,kB;;;;;AA0Cf;;yEACA,mBAAiCsF,CAAjC,EAAoCrB,CAApC,EAAuCsB,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEUE,kBAAkBF,cAAlB,CAFV;;AAAA;AAAA,6BAKQhG,gBALR;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAOI;AACImG,gCARR,GAQmB,IAAIU,WAAJ,CAAgBd,CAAhB,EAAmBrB,CAAnB,CARnB;;AASIoC,qCAAatC,IAAb,CAAkB2B,QAAlB;;AAEA;AAXJ;AAAA,+BAYUL,mBAAmBK,QAAnB,CAZV;;AAAA;AAAA,6BAeQnG,gBAfR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,+BAkBiB,IAAIC,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AAC1C;AACA+B,qCAAST,eAAT,GAA2BvB,OAA3B;AACAgC,qCAASR,cAAT,GAA0BvB,MAA1B;AACH,yBAJY,CAlBjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe7D,iB;;;;;AAyBf;;yEACA,mBAA8CmE,CAA9C,EAAiDG,MAAjD,EAAyDkC,KAAzD,EAAgEC,qBAAhE,EAAuFhB,cAAvF,EAAuGC,aAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACUC,kBAAkBc,qBAAlB,CADV;;AAAA;AAAA,4BAIYhH,gBAJZ;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAKcsB,0BAA0BoD,CAA1B,EAA6BG,MAA7B,EAAqCkC,KAArC,EAA4Cf,cAA5C,EAA4DC,aAA5D,CALd;;AAAA;AAAA;AAAA;;AAAA;AAMK;;AAED;AARJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAexE,8B;;;;;AAYf;;yEACA,mBAAyCiD,CAAzC,EAA4CG,MAA5C,EAAoDkC,KAApD,EAA2Df,cAA3D,EAA2EC,aAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEUC,kBAAkBF,cAAlB,CAFV;;AAAA;AAAA,6BAKQhG,gBALR;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAOI;AACImG,gCARR,GAQmB,IAAIc,qBAAJ,CAA0BvC,CAA1B,EAA6BG,MAA7B,EAAqCkC,KAArC,CARnB;;AASIG,+CAAuB1C,IAAvB,CAA4B2B,QAA5B;;AAEA;AAXJ;AAAA,+BAYUL,mBAAmBK,QAAnB,CAZV;;AAAA;AAAA,6BAeQnG,gBAfR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,+BAkBiB,IAAIC,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AAC1C;AACA+B,qCAAST,eAAT,GAA2BvB,OAA3B;AACAgC,qCAASR,cAAT,GAA0BvB,MAA1B;;AAEA+B,qCAASP,OAAT,GAAmBV,WAAW,YAAM;AAChC;AACA,oCAAIyB,gBAAgBO,uBAAuBN,OAAvB,CAA+BT,QAA/B,CAApB;AACAe,uDAAuBlE,MAAvB,CAA8B2D,aAA9B,EAA6C,CAA7C;AACAxC,wCAAQ,UAAR;AACH,6BALkB,EAKhB8B,gBAAgB,IALA,CAAnB;AAMH,yBAXY,CAlBjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe3E,yB;;;;;AAgCf;;yEACA,mBAA4CyE,CAA5C,EAA+CoB,KAA/C,EAAsDJ,KAAtD,EAA6DC,qBAA7D,EAAoFhB,cAApF,EAAoGC,aAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACUC,kBAAkBc,qBAAlB,CADV;;AAAA;AAAA,4BAIYhH,gBAJZ;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAKc6B,wBAAwBkE,CAAxB,EAA2BoB,KAA3B,EAAkCJ,KAAlC,EAAyCf,cAAzC,EAAyDC,aAAzD,CALd;;AAAA;AAAA;AAAA;;AAAA;AAMK;;AAED;AARJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAemB,4B;;;;;AAYf;;yEACA,mBAAuCrB,CAAvC,EAA0CoB,KAA1C,EAAiDJ,KAAjD,EAAwDf,cAAxD,EAAwEC,aAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEUC,kBAAkBF,cAAlB,CAFV;;AAAA;AAAA,6BAKQhG,gBALR;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAOI;AACImG,gCARR,GAQmB,IAAIkB,mBAAJ,CAAwBtB,CAAxB,EAA2BoB,KAA3B,EAAkCJ,KAAlC,CARnB;;AASIO,6CAAqB9C,IAArB,CAA0B2B,QAA1B;;AAEA;AAXJ;AAAA,+BAYUL,mBAAmBK,QAAnB,CAZV;;AAAA;AAAA,6BAeQnG,gBAfR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,+BAkBiB,IAAIC,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AAC1C;AACA+B,qCAAST,eAAT,GAA2BvB,OAA3B;AACAgC,qCAASR,cAAT,GAA0BvB,MAA1B;;AAEA+B,qCAASP,OAAT,GAAmBV,WAAW,YAAM;AAChC;AACA,oCAAIyB,gBAAgBW,qBAAqBV,OAArB,CAA6BT,QAA7B,CAApB;AACAmB,qDAAqBtE,MAArB,CAA4B2D,aAA5B,EAA2C,CAA3C;AACAxC,wCAAQ,UAAR;AACH,6BALkB,EAKhB8B,gBAAgB,IALA,CAAnB;AAMH,yBAXY,CAlBjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAepE,uB;;;;;AAgCf;;yEACA,mBAA6BkE,CAA7B,EAAgCrB,CAAhC,EAAmCyC,KAAnC,EAA0CtC,MAA1C,EAAkDmC,qBAAlD,EAAyEhB,cAAzE,EAAyFC,aAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACUC,kBAAkBc,qBAAlB,CADV;;AAAA;AAAA,4BAIYhH,gBAJZ;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAKcqB,SAAS0E,CAAT,EAAYrB,CAAZ,EAAeyC,KAAf,EAAsBtC,MAAtB,EAA8BmB,cAA9B,EAA8CC,aAA9C,CALd;;AAAA;AAAA;AAAA;;AAAA;AAMK;;AAED;AARJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe7E,a;;;;;AAYf;;yEACA,mBAAwB2E,CAAxB,EAA2BrB,CAA3B,EAA8ByC,KAA9B,EAAqCtC,MAArC,EAA6CmB,cAA7C,EAA6DC,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEUC,kBAAkBF,cAAlB,CAFV;;AAAA;AAAA,6BAKQhG,gBALR;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAOI;AACImG,gCARR,GAQmB,IAAIoB,IAAJ,CAASxB,CAAT,EAAYrB,CAAZ,EAAeyC,KAAf,EAAsBtC,MAAtB,CARnB;;AASI2C,8BAAMhD,IAAN,CAAW2B,QAAX;;AAEA;AAXJ;AAAA,+BAYUL,mBAAmBK,QAAnB,CAZV;;AAAA;AAAA,6BAeQnG,gBAfR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,+BAkBiB,IAAIC,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AAC1C;AACA+B,qCAAST,eAAT,GAA2BvB,OAA3B;AACAgC,qCAASR,cAAT,GAA0BvB,MAA1B;;AAEA+B,qCAASP,OAAT,GAAmBV,WAAW,YAAM;AAChC;AACA,oCAAIyB,gBAAgBa,MAAMZ,OAAN,CAAcT,QAAd,CAApB;AACAqB,sCAAMxE,MAAN,CAAa2D,aAAb,EAA4B,CAA5B;AACAxC,wCAAQ,UAAR;AACH,6BALkB,EAKhB8B,gBAAgB,IALA,CAAnB;AAMH,yBAXY,CAlBjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAe5E,Q;;;;;AAgCf;;yEACA,mBAA0B0E,CAA1B,EAA6BrB,CAA7B,EAAgCyC,KAAhC,EAAuCtC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AACIsB,gCAFR,GAEmB,IAAIsB,IAAJ,CAAS1B,CAAT,EAAYrB,CAAZ,EAAeyC,KAAf,EAAsBtC,MAAtB,CAFnB;;AAGI6C,8BAAMlD,IAAN,CAAW2B,QAAX;;AAEA;AALJ;AAAA,+BAMiB,IAAIlG,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AAC1C;AACA+B,qCAAST,eAAT,GAA2BvB,OAA3B;AACAgC,qCAASR,cAAT,GAA0BvB,MAA1B;AACH,yBAJY,CANjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAejE,U;;;;;AA4af;;AAEA;;yEACA,mBAA4BwH,KAA5B,EAAmCC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,0CADR,GAC6B,GAD7B;AAEQC,kCAFR,GAEqB,CAFrB;AAGQC,mCAHR,GAGsBJ,MAAMK,YAAN,GAAqBH,kBAH3C;;AAKI;;AACII,gCANR,GAMmBzB,YAAY,YAAM;AAC7BsB,0CAAcD,kBAAd;AACH,yBAFc,EAEZD,kBAAkB,IAFN,CANnB;AAAA,2DAUW,IAAI3H,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AACpC,qCAAS8D,YAAT,GAAwB;AACpBC,wCAAQC,SAAR,CAAkBT,KAAlB,EAAyBG,UAAzB,EAAqC,CAArC,EAAwCD,kBAAxC,EAA4DA,kBAA5D,EAAgF,CAAhF,EAAmF,CAAnF,EAAsFA,kBAAtF,EAA0GA,kBAA1G;;AAEA;AACA,oCAAIC,aAAaC,WAAjB,EAA8B;AAC1B5D,4CAAQ,UAAR;AACH,iCAFD,MAEO;AACH;AACAW,2CAAOC,qBAAP,CAA6BmD,YAA7B;AACH;AACJ;;AAEDpD,mCAAOC,qBAAP,CAA6BmD,YAA7B;AACH,yBAdM,CAVX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAerE,Y;;;;;AA2Bf;;AAEA;;;;;;;AAv6DA;;AAEA,IAAMwE,SAASlD,SAASC,cAAT,CAAwB,MAAxB,CAAf;AACA,IAAM+C,UAAUE,OAAOC,UAAP,CAAkB,IAAlB,CAAhB;AACAH,QAAQI,SAAR,GAAoB,CAApB;;AAEA;;AAEA,IAAIhF,YAAY,SAAhB;;AAEA,IAAIvC,eAAe,CAAnB;;AAEA,IAAIsC,qBAAqB,CAAzB;AACA,IAAIkF,cAAc,CAAlB;;AAEA,IAAIC,SAAS,CAAb;AACA,IAAIC,SAAS,CAAb;;AAEA,IAAIC,qBAAqB,KAAzB;;AAEA,IAAIC,0BAA0B,KAA9B;AACA,IAAIC,wBAAwB,KAA5B;AACA,IAAIC,2BAA2B,KAA/B;AACA,IAAIC,0BAA0B,KAA9B;AACA,IAAIC,sBAAsB,KAA1B;AACA,IAAIC,sBAAsB,KAA1B;AACA,IAAIC,kBAAkB,KAAtB;;AAEA,IAAIC,qBAAqB,KAAzB;AACA,IAAIC,iBAAiB,IAArB;AACA,IAAIC,eAAe,EAAnB;AACA,IAAIC,sBAAsB,GAA1B;AACA,IAAIC,wBAAwB,GAA5B;;AAEA;AACA;AACA,IAAIvJ,mBAAmB,KAAvB;;AAEA;;AAEA;AACA;;AAEA,IAAIwJ,mBAAmBrE,SAASsE,aAAT,CAAuB,KAAvB,CAAvB;AACAD,iBAAiBE,GAAjB,GAAuB,gCAAvB;;AAEA,IAAIC,uBAAuBxE,SAASsE,aAAT,CAAuB,KAAvB,CAA3B;AACAE,qBAAqBD,GAArB,GAA2B,oCAA3B;;AAEA,IAAIE,8BAA8BzE,SAASsE,aAAT,CAAuB,KAAvB,CAAlC;AACAG,4BAA4BF,GAA5B,GAAkC,2CAAlC;;AAEA,IAAI5F,8BAA8BqB,SAASsE,aAAT,CAAuB,KAAvB,CAAlC;AACA3F,4BAA4B4F,GAA5B,GAAkC,2CAAlC;;AAEA,IAAIG,YAAY,CAAhB;;AAEA,IAAIC,YAAY,CAAhB;;AAEA;;AAEA,IAAIvE,WAAW,EAAf;;AAEA,IAAIwE,kBAAkB,EAAtB;AACA,IAAI1D,gBAAgB,EAApB;AACA,IAAIS,eAAe,EAAnB;AACA,IAAII,yBAAyB,EAA7B;AACA,IAAII,uBAAuB,EAA3B;AACA,IAAIE,QAAQ,EAAZ;AACA,IAAIE,QAAQ,EAAZ;AACA,IAAInD,YAAY,EAAhB;;AAEA;AACA,IAAInB,aAAa,EAAjB;;AAEA,IAAIP,kBAAkB,EAAtB;AACA,IAAII,mBAAmB,EAAvB;;AAEA,IAAI+G,qBAAqB,EAAzB;;AAEA,IAAIC,cAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,CAAlB;;AAEA;;IAEMC,M,GACF,kBAAc;AAAA;;AACV,SAAK/C,KAAL,GAAa,EAAb;AACA,SAAKtC,MAAL,GAAc,EAAd;;AAEA,SAAKkB,CAAL,GAASsC,OAAOlB,KAAP,GAAe,CAAf,GAAmB,KAAKA,KAAL,GAAa,CAAzC;AACA,SAAKzC,CAAL,GAAS2D,OAAOxD,MAAP,GAAgB,CAAhB,GAAoB,KAAKA,MAAL,GAAc,CAA3C;;AAEA,SAAKkC,KAAL,GAAa,CAAb;AACA,SAAK/C,kBAAL,GAA0B,CAA1B;AACA,SAAKmG,kBAAL,GAA0B,CAA1B;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,eAAL,GAAuB,KAAKzE,CAA5B;AACA,SAAK0E,eAAL,GAAuB,KAAK/F,CAA5B;;AAEA,SAAKjB,KAAL,GAAa,SAAb;;AAEA,SAAKiH,MAAL,GAAclB,gBAAd;AACA,SAAK9F,EAAL,GAAU,CAAV;;AAEA;AACA,SAAKiH,oBAAL,GAA4B,CAA5B;AACH,C;;AACJ;;IAEKC,c,GACF,0BAAc;AAAA;;AACV;AACA,SAAKjF,cAAL;AACA,SAAKC,OAAL;AACH,C;;AACJ;;AAED;AACA;;IAEMQ,Y,GACF,sBAAYL,CAAZ,EAAerB,CAAf,EAAkBmG,kBAAlB,EAAsC;AAAA;;AAClC,SAAK9E,CAAL,GAASA,CAAT;AACA,SAAKrB,CAAL,GAASA,CAAT;AACA,SAAKyC,KAAL,GAAa,EAAb;AACA,SAAKtC,MAAL,GAAc,EAAd;;AAEA;AACA,SAAKpB,KAAL,GAAa,SAAb;AACA,SAAKoC,OAAL,GAAe,IAAf;;AAEA;AACA,SAAKH,eAAL;AACA,SAAKC,cAAL;AACA,SAAKC,OAAL;;AAEA;AACA,SAAKiF,kBAAL,GAA0BA,kBAA1B;AACA,SAAKvE,sBAAL,GAA8B,CAA9B;AACH,C;;AACJ;;IAEKO,W,GACF,qBAAYd,CAAZ,EAAerB,CAAf,EAAkBmG,kBAAlB,EAAsC;AAAA;;AAClC,SAAK9E,CAAL,GAASA,CAAT;AACA,SAAKrB,CAAL,GAASA,CAAT;AACA,SAAKyC,KAAL,GAAa,EAAb;AACA,SAAKtC,MAAL,GAAc,EAAd;;AAEA;AACA,SAAKpB,KAAL,GAAa,SAAb;AACA,SAAKoC,OAAL,GAAe,IAAf;;AAEA;AACA,SAAKH,eAAL;AACA,SAAKC,cAAL;AACA,SAAKC,OAAL;AACH,C;;AACJ;;IAEKqB,qB,GACF,+BAAYvC,CAAZ,EAAeG,MAAf,EAAuBkC,KAAvB,EAA8B;AAAA;;AAC1B,SAAKhB,CAAL,GAAS,CAAT;AACA,SAAKrB,CAAL,GAASA,CAAT;AACA,SAAKyC,KAAL,GAAakB,OAAOlB,KAApB;AACA,SAAKtC,MAAL,GAAcA,MAAd;AACA,SAAKkC,KAAL,GAAaA,KAAb;;AAEA;AACA,SAAKtD,KAAL,GAAa,SAAb;AACA,SAAKoC,OAAL,GAAe,IAAf;;AAEA;AACA,SAAKF,cAAL;AACA,SAAKC,OAAL;AACH,C;;AACJ;;IAEKyB,mB,GACF,6BAAYtB,CAAZ,EAAeoB,KAAf,EAAsBJ,KAAtB,EAA6B;AAAA;;AACzB,SAAKhB,CAAL,GAASA,CAAT;AACA,SAAKrB,CAAL,GAAS,CAAT;AACA,SAAKyC,KAAL,GAAaA,KAAb;AACA,SAAKtC,MAAL,GAAcwD,OAAOxD,MAArB;AACA,SAAKkC,KAAL,GAAaA,KAAb;;AAEA;AACA,SAAKtD,KAAL,GAAa,SAAb;AACA,SAAKoC,OAAL,GAAe,IAAf;;AAEA;AACA,SAAKF,cAAL;AACA,SAAKC,OAAL;AACH,C;;AACJ;;IAEK2B,I,GACF,cAAYxB,CAAZ,EAAerB,CAAf,EAAkByC,KAAlB,EAAyBtC,MAAzB,EAAiC;AAAA;;AAC7B,SAAKkB,CAAL,GAASA,CAAT;AACA,SAAKrB,CAAL,GAASA,CAAT;AACA,SAAKyC,KAAL,GAAaA,KAAb;AACA,SAAKtC,MAAL,GAAcA,MAAd;;AAEA;AACA,SAAKpB,KAAL,GAAa,SAAb;AACA,SAAKoC,OAAL,GAAe,IAAf;;AAEA;AACA,SAAKF,cAAL;AACA,SAAKC,OAAL;AACH,C;;AACJ;;IAEK6B,I,GACF,cAAY1B,CAAZ,EAAerB,CAAf,EAAkByC,KAAlB,EAAyBtC,MAAzB,EAAiC;AAAA;;AAC7B,SAAKkB,CAAL,GAASA,CAAT;AACA,SAAKrB,CAAL,GAASA,CAAT;AACA,SAAKyC,KAAL,GAAaA,KAAb;AACA,SAAKtC,MAAL,GAAcA,MAAd;;AAEA;AACA,SAAKc,cAAL;AACA,SAAKC,OAAL;AACH,C;;IAGCtB,Q,GACF,oBAAc;AAAA;;AACV,SAAKyB,CAAL,GAASvC,QAAQuC,CAAR,GAAY,CAArB;AACA,SAAKrB,CAAL,GAAS,CAAC,EAAV;AACA,SAAKyC,KAAL,GAAa,EAAb;AACA,SAAKtC,MAAL,GAAc,EAAd;AACH,C;;AACJ;;AAED,IAAIrB,UAAU,IAAI0G,MAAJ,EAAd;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAIxJ,WAAW,IAAI,EAAnB;AACA,IAAIC,YAAY,IAAI,EAApB;AACA,IAAIN,cAAc,KAAK,EAAvB;AACA,IAAIN,UAAUsI,OAAOlB,KAAP,GAAe,CAA7B;AACA,IAAI7G,aAAa,KAAK,EAAtB;AACA,IAAIa,eAAe,KAAK,EAAxB;AACA,IAAIP,cAAc,KAAK,EAAvB;AACA,IAAIR,aAAa,KAAK,EAAtB;;AAEA,IAAImB,WAAW,IAAI,EAAnB;AACA,IAAI1B,WAAW,IAAI,EAAnB;AACA,IAAIkC,aAAa,KAAK,EAAtB;AACA,IAAII,YAAY,KAAK,EAArB;AACA,IAAI2I,YAAY,KAAK,EAArB;AACA,IAAIC,WAAW,KAAK,EAApB;AACA,IAAIvK,aAAa,KAAK,EAAtB;AACA,IAAIK,aAAa,KAAK,EAAtB;;AAEA,IAAIf,oBAAoB,CAAC0D,QAAQ2D,KAAT,GAAiB,CAAzC,CA8CC;;AAsDA;;AAyEA;;AAiHA;;AAuFA;;AAsFA;;AA+JA;;AAQA;;AAQA;;AAQA;;AAQA;;AAQA;;AAED;AACA,SAASvH,eAAT,CAAyBoL,QAAzB,EAAmCC,QAAnC,EAA6C;AACzC1H,gBAAY,SAAZ;;AAEAC,YAAQuC,CAAR,GAAYiF,QAAZ;AACAxH,YAAQkB,CAAR,GAAYuG,QAAZ;;AAEA9B,yBAAqB,KAArB;AACAC,qBAAiB,IAAjB;AACH,EA6CA;;AAmCA;;AAED,SAASxF,YAAT,GAAwB;AACpB,YAAQ5C,YAAR;AACI,aAAK,CAAL;AACIE;AACA;AACJ,aAAK,CAAL;AACIM;AACA;AACJ,aAAK,CAAL;AACIG;AACA;AACJ,aAAK,CAAL;AACIG;AACA;AACJ,aAAK,CAAL;AACIG;AACA;AACJ,aAAK,CAAL;AACIC;AACA;AACJ,aAAK,CAAL;AACIE;AACA;AACJ,aAAK,CAAL;AACIE;AACA;AACJ,aAAK,CAAL;AACIC;AACA;AACJ,aAAK,EAAL;AACIC;AACA;AACJ,aAAK,EAAL;AACIC;AACA;AACJ,aAAK,EAAL;AACIC;AACA;AApCR,KAqCC;AACJ;;AAED;;AAEA;AACA,SAASwI,gBAAT,CAA0BC,WAA1B,EAAuC;AACnC;AACA,QAAIC,qBAAqBD,YAAYrI,MAArC;;AAEA,SAAK,IAAIF,IAAIwI,qBAAqB,CAAlC,EAAqCxI,KAAK,CAA1C,EAA6CA,GAA7C,EAAkD;AAC9C;AACA,YAAIuD,WAAWgF,YAAYvI,CAAZ,CAAf;AACAuD,iBAAST,eAAT;AACA3C,qBAAaoD,SAASP,OAAtB;AACAuF,oBAAYnI,MAAZ,CAAmBJ,CAAnB,EAAsB,CAAtB;AACH;AACJ;;AAED;AACA,SAASS,eAAT,CAAyB8H,WAAzB,EAAsC;AAClC;AACA,QAAIC,qBAAqBD,YAAYrI,MAArC;;AAEA,SAAK,IAAIF,IAAIwI,qBAAqB,CAAlC,EAAqCxI,KAAK,CAA1C,EAA6CA,GAA7C,EAAkD;AAC9C;AACA,YAAIuD,WAAWgF,YAAYvI,CAAZ,CAAf;AACAuD,iBAASR,cAAT;AACA5C,qBAAaoD,SAASP,OAAtB;AACAuF,oBAAYnI,MAAZ,CAAmBJ,CAAnB,EAAsB,CAAtB;AACH;AACJ;;AAED;AACA,SAASyI,iBAAT,CAA2BzF,OAA3B,EAAoC;AAChC/C,oBAAgB2B,IAAhB,CAAqBoB,OAArB;AACH;;AAED;AACA,SAAS0F,oBAAT,CAA8B1F,OAA9B,EAAuC;AACnC,QAAI2F,sBAAsB1I,gBAAgB+D,OAAhB,CAAwBhB,OAAxB,CAA1B;AACA/C,oBAAgBG,MAAhB,CAAuBuI,mBAAvB,EAA4C,CAA5C;AACH;;AAED;AACA,SAAS9E,kBAAT,CAA4B+E,QAA5B,EAAsC;AAClCvI,qBAAiBuB,IAAjB,CAAsBgH,QAAtB;AACH;;AAED;AACA,SAAS9E,qBAAT,CAA+B8E,QAA/B,EAAyC;AACrCtI,kBAAcsI,QAAd;AACA,QAAIC,uBAAuBxI,iBAAiB2D,OAAjB,CAAyB4E,QAAzB,CAA3B;AACAvI,qBAAiBD,MAAjB,CAAwByI,oBAAxB,EAA8C,CAA9C;AACH,EAyCA;;AAED;;AAEA,SAASC,cAAT,GAA0B;AACtBlI,YAAQC,KAAR,GAAgB,oBAAhB;AACAD,YAAQuD,KAAR,GAAgBsC,YAAhB;AACAF,yBAAqB,IAArB;AACAC,qBAAiB,KAAjB;;AAEA,QAAIuC,kBAAkBzG,WAAW,YAAM;AACnCiE,6BAAqB,KAArB;AACA3F,gBAAQC,KAAR,GAAgB,SAAhB;AACA6H,6BAAqBK,eAArB;AACH,KAJqB,EAInBrC,sBAAsB,IAJH,CAAtB;AAKA+B,sBAAkBM,eAAlB;;AAEA;AACA;AACAnI,YAAQmH,oBAAR,GAA+BpB,qBAA/B;AACA,QAAIqC,+BAA+BpF,YAAY,YAAM;AACjDhD,gBAAQmH,oBAAR,IAAgC,KAAhC;AACH,KAFkC,EAEhC,CAFgC,CAAnC;AAGAlE,uBAAmBmF,4BAAnB;;AAEA,QAAIC,sBAAsB3G,WAAW,YAAM;AACvCkE,yBAAiB,IAAjB;AACA1C,8BAAsBkF,4BAAtB;AACAN,6BAAqBO,mBAArB;AACH,KAJyB,EAIvBtC,wBAAwB,IAJD,CAA1B;AAKA8B,sBAAkBQ,mBAAlB;AACH;;AAED;AACA,SAASC,iBAAT,GAA6B;AACzBtI,YAAQC,KAAR,GAAgB,SAAhB;AACA0F,yBAAqB,KAArB;AACAC,qBAAiB,IAAjB;;AAEA;AACA,WAAO7D,SAAS,EAAT,CAAP;AACA,WAAOA,SAAS,EAAT,CAAP;AACA,WAAOA,SAAS,EAAT,CAAP;AACA,WAAOA,SAAS,EAAT,CAAP;AACA,WAAOA,SAAS,EAAT,CAAP;AACA,WAAOA,SAAS,EAAT,CAAP;AACH;;AAED;AACA,SAASvD,WAAT,CAAqB+D,CAArB,EAAwBrB,CAAxB,EAA2B;AACvBlB,YAAQuC,CAAR,GAAYA,CAAZ;AACAvC,YAAQkB,CAAR,GAAYA,CAAZ;AACH;;AAED;;AAEA;AACA;AACA,SAASwB,iBAAT,CAA2BF,cAA3B,EAA2C;AACvC;AACA,QAAIG,WAAW,IAAIyE,cAAJ,EAAf;AACAb,oBAAgBvF,IAAhB,CAAqB2B,QAArB;;AAEA,WAAO,IAAIlG,OAAJ,CAAY,UAACkE,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACA+B,iBAAST,eAAT,GAA2BvB,OAA3B;AACAgC,iBAASR,cAAT,GAA0BvB,MAA1B;;AAEA+B,iBAASP,OAAT,GAAmBV,WAAW,YAAM;AAChC;AACA,gBAAIyB,gBAAgBoD,gBAAgBnD,OAAhB,CAAwBT,QAAxB,CAApB;AACA4D,4BAAgB/G,MAAhB,CAAuB2D,aAAvB,EAAsC,CAAtC;AACAxC,oBAAQ,UAAR;AACH,SALkB,EAKhB6B,iBAAiB,IALD,CAAnB;AAMH,KAXM,CAAP;AAYH,EAkEA,CA2CA,CA0BA,CAaA,CAiCA,CAaA,CAiCA,CAaA,CAiCA,CAcA;;AAED;;AAEA,SAAS7C,gBAAT,GAA4B;AACxBC,iBAAa,CACT2G,eADS,EAET1D,aAFS,EAGTS,YAHS,EAITI,sBAJS,EAKTI,oBALS,EAMTE,KANS,EAOTE,KAPS,CAAb;AASH;;AAED,SAASqE,2BAAT,GAAuC;AACnC3I,iBAAa,CACT2G,eADS,EAET1D,aAFS,EAGTS,YAHS,EAITI,sBAJS,EAKTI,oBALS,EAMTE,KANS,CAAb;AAQH;;AAED;AACA,SAASwE,0BAAT,GAAsC;AAClC,SAAK,IAAIpJ,IAAI,CAAb,EAAgBA,IAAIsE,uBAAuBpE,MAA3C,EAAmDF,GAAnD,EAAwD;AACpD,YAAIsE,uBAAuBtE,CAAvB,EAA0Ba,KAA1B,KAAoC,SAAxC,EAAmD;AAC/CyD,mCAAuBtE,CAAvB,EAA0B8B,CAA1B,IAA+BwC,uBAAuBtE,CAAvB,EAA0BmE,KAAzD;AACH;AACJ;AACJ;;AAED;AACA,SAASkF,wBAAT,GAAoC;AAChC,SAAK,IAAIrJ,IAAI,CAAb,EAAgBA,IAAI0E,qBAAqBxE,MAAzC,EAAiDF,GAAjD,EAAsD;AAClD,YAAI0E,qBAAqB1E,CAArB,EAAwBa,KAAxB,KAAkC,SAAtC,EAAiD;AAC7C6D,iCAAqB1E,CAArB,EAAwBmD,CAAxB,IAA6BuB,qBAAqB1E,CAArB,EAAwBmE,KAArD;AACH;AACJ;AACJ;;AAED;;AAEA,SAASmF,cAAT,GAA0B;AACtB;AACA,QAAI,CAAC9C,cAAD,IAAmB7F,cAAc,SAArC,EAAgD;AAC5C4E,gBAAQgE,SAAR,GAAoB,SAApB;AACAhE,gBAAQiE,QAAR,CAAiB5I,QAAQuC,CAAzB,EAA4BvC,QAAQkB,CAAR,GAAY,CAAxC,EAA2ClB,QAAQ2D,KAAR,IAAiB3D,QAAQmH,oBAAR,GAA+BpB,qBAAhD,CAA3C,EAAmH,CAAnH;AACH;;AAED;AACA,QAAI/F,QAAQC,KAAR,KAAkB,SAAtB,EAAiC;AAC7BD,gBAAQkH,MAAR,GAAiBlB,gBAAjB;AACA;AACA;AACAhG,gBAAQE,EAAR,GAAaF,QAAQ2D,KAAR,IAAiBxC,KAAK0H,KAAL,CAAW7I,QAAQQ,kBAAR,GAA6B,EAAxC,IAA8C,CAA/D,CAAb;AACH,KALD,MAKO,IAAIR,QAAQC,KAAR,KAAkB,oBAAtB,EAA4C;AAC/CD,gBAAQkH,MAAR,GAAiBd,2BAAjB;AACApG,gBAAQE,EAAR,GAAa,CAAb;AACH,KAHM,MAGA,IAAIF,QAAQC,KAAR,KAAkB,aAAtB,EAAqC;AACxCD,gBAAQkH,MAAR,GAAiBf,oBAAjB;;AAEA,YAAI2C,+BAA+BpH,WAAW,YAAM;AAChDhC,0BAAcqJ,yBAAd;AACAjB,iCAAqBiB,yBAArB;AACAjB,iCAAqBgB,4BAArB;AACH,SAJkC,EAIhC,MAAM,IAJ0B,CAAnC;AAKAjB,0BAAkBiB,4BAAlB;;AAEA,YAAIC,4BAA4B/F,YAAY,YAAM;AAC9ChD,oBAAQE,EAAR,IAAcF,QAAQ2D,KAAtB;AACH,SAF+B,EAE7B,MAAM,IAFuB,CAAhC;AAGAkE,0BAAkBkB,yBAAlB;AACH;AACJ;;AAED,SAASC,WAAT,GAAuB;AACnBrE,YAAQC,SAAR,CAAkB5E,QAAQkH,MAA1B,EAAkClH,QAAQE,EAA1C,EAA8C,CAA9C,EAAiDF,QAAQ2D,KAAzD,EAAgE3D,QAAQqB,MAAxE,EAAgFrB,QAAQuC,CAAxF,EAA2FvC,QAAQkB,CAAnG,EAAsGlB,QAAQ2D,KAA9G,EAAqH3D,QAAQqB,MAA7H;AACH;;AAED,SAAS4H,iBAAT,GAA6B;AACzB,SAAK,IAAI7J,IAAI,CAAb,EAAgBA,IAAIyD,cAAcvD,MAAlC,EAA0CF,GAA1C,EAA+C;AAC3C,YAAI8J,kBAAkBrG,cAAczD,CAAd,CAAtB;;AAEA;AACAuF,gBAAQgE,SAAR,GAAoB,SAApB;AACAhE,gBAAQiE,QAAR,CAAiBM,gBAAgB3G,CAAjC,EAAoC2G,gBAAgBhI,CAAhB,GAAoB,CAAxD,EAA2DgI,gBAAgBvF,KAAhB,IAAyBuF,gBAAgBpG,sBAAhB,GAAyCoG,gBAAgB7B,kBAAlF,CAA3D,EAAkK,CAAlK;;AAEA;AACA,YAAI6B,gBAAgB7G,OAApB,EAA6B;AACzB;AACA,gBAAI6G,gBAAgBjJ,KAAhB,IAAyB,SAA7B,EAAwC;AACpC0E,wBAAQwE,WAAR,GAAsB,SAAtB;AACAxE,wBAAQyE,UAAR,CAAmBF,gBAAgB3G,CAAnC,EAAsC2G,gBAAgBhI,CAAtD,EAAyDgI,gBAAgBvF,KAAzE,EAAgFuF,gBAAgB7H,MAAhG;AACH,aAHD,MAGO,IAAI6H,gBAAgBjJ,KAAhB,IAAyB,QAA7B,EAAuC;AAC1C0E,wBAAQgE,SAAR,GAAoB,SAApB;AACAhE,wBAAQiE,QAAR,CAAiBM,gBAAgB3G,CAAjC,EAAoC2G,gBAAgBhI,CAApD,EAAuDgI,gBAAgBvF,KAAvE,EAA8EuF,gBAAgB7H,MAA9F;AACH;AACJ;AACJ;AACJ;;AAED,SAASgI,gBAAT,GAA4B;AACxB,SAAK,IAAIjK,IAAI,CAAb,EAAgBA,IAAIkE,aAAahE,MAAjC,EAAyCF,GAAzC,EAA8C;AAC1C,YAAI8J,kBAAkB5F,aAAalE,CAAb,CAAtB;;AAEA;AACA,YAAI8J,gBAAgB7G,OAApB,EAA6B;AACzB;AACA,gBAAI6G,gBAAgBjJ,KAAhB,IAAyB,SAA7B,EAAwC;AACpC0E,wBAAQwE,WAAR,GAAsB,SAAtB;AACAxE,wBAAQyE,UAAR,CAAmBF,gBAAgB3G,CAAnC,EAAsC2G,gBAAgBhI,CAAtD,EAAyDgI,gBAAgBvF,KAAzE,EAAgFuF,gBAAgB7H,MAAhG;AACH,aAHD,MAGO,IAAI6H,gBAAgBjJ,KAAhB,IAAyB,QAA7B,EAAuC;AAC1C0E,wBAAQgE,SAAR,GAAoB,SAApB;AACAhE,wBAAQiE,QAAR,CAAiBM,gBAAgB3G,CAAjC,EAAoC2G,gBAAgBhI,CAApD,EAAuDgI,gBAAgBvF,KAAvE,EAA8EuF,gBAAgB7H,MAA9F;AACH;AACJ;AACJ;AACJ;;AAED,SAASiI,0BAAT,GAAsC;AAClC,SAAK,IAAIlK,IAAI,CAAb,EAAgBA,IAAIsE,uBAAuBpE,MAA3C,EAAmDF,GAAnD,EAAwD;AACpD,YAAI8J,kBAAkBxF,uBAAuBtE,CAAvB,CAAtB;AACA,YAAI8J,gBAAgB7G,OAApB,EAA6B;AACzB;AACA,gBAAI6G,gBAAgBjJ,KAAhB,IAAyB,SAA7B,EAAwC;AACpC0E,wBAAQgE,SAAR,GAAoB,SAApB;;AAEA;AACA;AACAhE,wBAAQ4E,SAAR;AACA5E,wBAAQ6E,MAAR,CAAeN,gBAAgB3G,CAAhB,GAAoB,EAAnC,EAAuC2G,gBAAgBhI,CAAhB,GAAoBgI,gBAAgB7H,MAAhB,GAAyBF,KAAKsI,GAAL,CAAStI,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKuI,IAAL,CAAUR,gBAAgB3F,KAA1B,CAAZ,CAAT,CAApF;AACAoB,wBAAQgF,MAAR,CAAeT,gBAAgB3G,CAAhB,GAAoB,EAAnC,EAAuC2G,gBAAgBhI,CAAhB,GAAoBgI,gBAAgB7H,MAAhB,GAAyBF,KAAKyI,GAAL,CAAS,CAAT,EAAYzI,KAAKuI,IAAL,CAAUR,gBAAgB3F,KAA1B,CAAZ,CAApF;AACAoB,wBAAQgF,MAAR,CAAeT,gBAAgB3G,CAAhB,GAAoB,EAAnC,EAAuC2G,gBAAgBhI,CAAhB,GAAoBgI,gBAAgB7H,MAAhB,GAAyBF,KAAKsI,GAAL,CAAStI,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKuI,IAAL,CAAUR,gBAAgB3F,KAA1B,CAAZ,CAAT,CAApF;AACAoB,wBAAQkF,IAAR;;AAEA;AACAlF,wBAAQ4E,SAAR;AACA5E,wBAAQ6E,MAAR,CAAeN,gBAAgBvF,KAAhB,GAAwB,EAAvC,EAA2CuF,gBAAgBhI,CAAhB,GAAoBgI,gBAAgB7H,MAAhB,GAAyBF,KAAKsI,GAAL,CAAStI,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKuI,IAAL,CAAUR,gBAAgB3F,KAA1B,CAAZ,CAAT,CAAxF;AACAoB,wBAAQgF,MAAR,CAAeT,gBAAgBvF,KAAhB,GAAwB,EAAvC,EAA2CuF,gBAAgBhI,CAAhB,GAAoBgI,gBAAgB7H,MAAhB,GAAyBF,KAAKyI,GAAL,CAAS,CAAT,EAAYzI,KAAKuI,IAAL,CAAUR,gBAAgB3F,KAA1B,CAAZ,CAAxF;AACAoB,wBAAQgF,MAAR,CAAeT,gBAAgBvF,KAAhB,GAAwB,EAAvC,EAA2CuF,gBAAgBhI,CAAhB,GAAoBgI,gBAAgB7H,MAAhB,GAAyBF,KAAKsI,GAAL,CAAStI,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKuI,IAAL,CAAUR,gBAAgB3F,KAA1B,CAAZ,CAAT,CAAxF;AACAoB,wBAAQkF,IAAR;AACH,aAjBD,MAiBO,IAAIX,gBAAgBjJ,KAAhB,IAAyB,QAA7B,EAAuC;AAC1C0E,wBAAQgE,SAAR,GAAoB,SAApB;AACAhE,wBAAQiE,QAAR,CAAiBM,gBAAgB3G,CAAjC,EAAoC2G,gBAAgBhI,CAApD,EAAuDgI,gBAAgBvF,KAAvE,EAA8EuF,gBAAgB7H,MAA9F;AACH;AACJ;AACJ;AACJ;;AAED,SAASyI,wBAAT,GAAoC;AAChC,SAAK,IAAI1K,IAAI,CAAb,EAAgBA,IAAI0E,qBAAqBxE,MAAzC,EAAiDF,GAAjD,EAAsD;AAClD,YAAI8J,kBAAkBpF,qBAAqB1E,CAArB,CAAtB;AACA,YAAI8J,gBAAgB7G,OAApB,EAA6B;AACzB;AACA,gBAAI6G,gBAAgBjJ,KAAhB,IAAyB,SAA7B,EAAwC;AACpC0E,wBAAQgE,SAAR,GAAoB,SAApB;;AAEA;AACA;AACAhE,wBAAQ4E,SAAR;AACA5E,wBAAQ6E,MAAR,CAAeN,gBAAgB3G,CAAhB,GAAoB2G,gBAAgBvF,KAAhB,GAAwBxC,KAAKsI,GAAL,CAAStI,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKuI,IAAL,CAAUR,gBAAgB3F,KAA1B,CAAZ,CAAT,CAA3D,EAAoH2F,gBAAgBhI,CAAhB,GAAoB,EAAxI;AACAyD,wBAAQgF,MAAR,CAAeT,gBAAgB3G,CAAhB,GAAoB2G,gBAAgBvF,KAAhB,GAAwBxC,KAAKyI,GAAL,CAAS,CAAT,EAAYzI,KAAKuI,IAAL,CAAUR,gBAAgB3F,KAA1B,CAAZ,CAA3D,EAA0G2F,gBAAgBhI,CAAhB,GAAoB,EAA9H;AACAyD,wBAAQgF,MAAR,CAAeT,gBAAgB3G,CAAhB,GAAoB2G,gBAAgBvF,KAAhB,GAAwBxC,KAAKsI,GAAL,CAAStI,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKuI,IAAL,CAAUR,gBAAgB3F,KAA1B,CAAZ,CAAT,CAA3D,EAAoH2F,gBAAgBhI,CAAhB,GAAoB,EAAxI;AACAyD,wBAAQkF,IAAR;;AAEA;AACAlF,wBAAQ4E,SAAR;AACA5E,wBAAQ6E,MAAR,CAAeN,gBAAgB3G,CAAhB,GAAoB2G,gBAAgBvF,KAAhB,GAAwBxC,KAAKsI,GAAL,CAAStI,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKuI,IAAL,CAAUR,gBAAgB3F,KAA1B,CAAZ,CAAT,CAA3D,EAAoH2F,gBAAgB7H,MAAhB,GAAyB,EAA7I;AACAsD,wBAAQgF,MAAR,CAAeT,gBAAgB3G,CAAhB,GAAoB2G,gBAAgBvF,KAAhB,GAAwBxC,KAAKyI,GAAL,CAAS,CAAT,EAAYzI,KAAKuI,IAAL,CAAUR,gBAAgB3F,KAA1B,CAAZ,CAA3D,EAA0G2F,gBAAgB7H,MAAhB,GAAyB,EAAnI;AACAsD,wBAAQgF,MAAR,CAAeT,gBAAgB3G,CAAhB,GAAoB2G,gBAAgBvF,KAAhB,GAAwBxC,KAAKsI,GAAL,CAAStI,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKuI,IAAL,CAAUR,gBAAgB3F,KAA1B,CAAZ,CAAT,CAA3D,EAAoH2F,gBAAgB7H,MAAhB,GAAyB,EAA7I;AACAsD,wBAAQkF,IAAR;AACH,aAjBD,MAiBO,IAAIX,gBAAgBjJ,KAAhB,IAAyB,QAA7B,EAAuC;AAC1C0E,wBAAQgE,SAAR,GAAoB,SAApB;AACAhE,wBAAQiE,QAAR,CAAiBM,gBAAgB3G,CAAjC,EAAoC2G,gBAAgBhI,CAApD,EAAuDgI,gBAAgBvF,KAAvE,EAA8EuF,gBAAgB7H,MAA9F;AACH;AACJ;AACJ;AACJ;;AAED,SAAS0I,SAAT,GAAqB;AACjB,SAAK,IAAI3K,IAAI,CAAb,EAAgBA,IAAI4E,MAAM1E,MAA1B,EAAkCF,GAAlC,EAAuC;AACnC,YAAI8J,kBAAkBlF,MAAM5E,CAAN,CAAtB;AACA,YAAI8J,gBAAgB7G,OAApB,EAA6B;AACzB;AACA,gBAAI6G,gBAAgBjJ,KAAhB,IAAyB,SAA7B,EAAwC;AACpC0E,wBAAQwE,WAAR,GAAsB,SAAtB;AACAxE,wBAAQyE,UAAR,CAAmBF,gBAAgB3G,CAAnC,EAAsC2G,gBAAgBhI,CAAtD,EAAyDgI,gBAAgBvF,KAAzE,EAAgFuF,gBAAgB7H,MAAhG;AACH,aAHD,MAGO,IAAI6H,gBAAgBjJ,KAAhB,IAAyB,QAA7B,EAAuC;AAC1C0E,wBAAQgE,SAAR,GAAoB,SAApB;AACAhE,wBAAQiE,QAAR,CAAiBM,gBAAgB3G,CAAjC,EAAoC2G,gBAAgBhI,CAApD,EAAuDgI,gBAAgBvF,KAAvE,EAA8EuF,gBAAgB7H,MAA9F;AACH;AACJ;AACJ;AACJ;;AAED,SAAS2I,SAAT,GAAqB;AACjB,SAAK,IAAI5K,IAAI,CAAb,EAAgBA,IAAI8E,MAAM5E,MAA1B,EAAkCF,GAAlC,EAAuC;AACnC,YAAI8J,kBAAkBhF,MAAM9E,CAAN,CAAtB;AACAuF,gBAAQgE,SAAR,GAAoB,SAApB;AACAhE,gBAAQiE,QAAR,CAAiBM,gBAAgB3G,CAAjC,EAAoC2G,gBAAgBhI,CAApD,EAAuDgI,gBAAgBvF,KAAvE,EAA8EuF,gBAAgB7H,MAA9F;AACH;AACJ;;AAED,SAAS4I,aAAT,GAAyB;AACrB,SAAK,IAAI7K,IAAI,CAAb,EAAgBA,IAAI2B,UAAUzB,MAA9B,EAAsCF,GAAtC,EAA2C;AACvC,YAAI8J,kBAAkBnI,UAAU3B,CAAV,CAAtB;;AAEAuF,gBAAQgE,SAAR,GAAoB,SAApB;;AAEAhE,gBAAQ4E,SAAR;AACA5E,gBAAQ6E,MAAR,CAAeN,gBAAgB3G,CAA/B,EAAkC2G,gBAAgBhI,CAAhB,GAAoBgI,gBAAgB7H,MAAtE;AACAsD,gBAAQgF,MAAR,CAAeT,gBAAgB3G,CAAhB,GAAoB2G,gBAAgBvF,KAAhB,GAAwB,CAA3D,EAA8DuF,gBAAgBhI,CAA9E;AACAyD,gBAAQgF,MAAR,CAAeT,gBAAgB3G,CAAhB,GAAoB2G,gBAAgBvF,KAAnD,EAA0DuF,gBAAgBhI,CAAhB,GAAoBgI,gBAAgB7H,MAA9F;AACAsD,gBAAQkF,IAAR;AACH;AACJ;;AAED;;AAEA,SAASK,wBAAT,CAAkCC,UAAlC,EAA8C;AAC1C,SAAK,IAAI/K,IAAI,CAAb,EAAgBA,IAAI+K,WAAW7K,MAA/B,EAAuCF,GAAvC,EAA4C;AACxCgL,gCAAwBpK,OAAxB,EAAiCmK,WAAW/K,CAAX,CAAjC;AACH;AACJ;;AAED,SAASiL,4BAAT,CAAsCC,YAAtC,EAAoDC,YAApD,EAAkEJ,UAAlE,EAA8E;AAC1EhF,yBAAqB,KAArB;;AAEA,SAAK,IAAI/F,IAAI,CAAb,EAAgBA,IAAI+K,WAAW7K,MAA/B,EAAuCF,GAAvC,EAA4C;AACxCoL,oCAA4BxK,OAA5B,EAAqCsK,YAArC,EAAmDC,YAAnD,EAAiEJ,WAAW/K,CAAX,CAAjE;AACH;AACJ;;AAED;AACA,SAASgL,uBAAT,CAAiCK,WAAjC,EAA8CC,WAA9C,EAA2D;AACvD,QAAIC,aAAa,KAAjB;AACA,QAAIC,aAAa,KAAjB;;AAEA,QAAKF,YAAYnI,CAAZ,IAAiBkI,YAAYlI,CAA9B,IAAqCkI,YAAYlI,CAAZ,IAAiBmI,YAAYnI,CAAZ,GAAgBmI,YAAY/G,KAAlF,IAA6F+G,YAAYzK,KAAZ,KAAsB,QAAvH,EAAkI;AAC9H0K,qBAAa,IAAb;AACH,KAFD,MAEO,IAAKF,YAAYlI,CAAZ,IAAiBmI,YAAYnI,CAA9B,IAAqCmI,YAAYnI,CAAZ,IAAiBkI,YAAYlI,CAAZ,GAAgBkI,YAAY9G,KAAlF,IAA6F+G,YAAYzK,KAAZ,KAAsB,QAAvH,EAAkI;AACrI0K,qBAAa,IAAb;AACH;;AAED,QAAKD,YAAYxJ,CAAZ,IAAiBuJ,YAAYvJ,CAA9B,IAAqCuJ,YAAYvJ,CAAZ,IAAiBwJ,YAAYxJ,CAAZ,GAAgBwJ,YAAYrJ,MAAlF,IAA8FqJ,YAAYzK,KAAZ,KAAsB,QAAxH,EAAmI;AAC/H2K,qBAAa,IAAb;AACH,KAFD,MAEO,IAAKH,YAAYvJ,CAAZ,IAAiBwJ,YAAYxJ,CAA9B,IAAqCwJ,YAAYxJ,CAAZ,IAAiBuJ,YAAYvJ,CAAZ,GAAgBuJ,YAAYpJ,MAAlF,IAA8FqJ,YAAYzK,KAAZ,KAAsB,QAAxH,EAAmI;AACtI2K,qBAAa,IAAb;AACH;;AAED;AACA,QAAID,cAAcC,UAAlB,EAA8B;AAC1BpE,2BAAmBxF,IAAnB,CAAwB0J,WAAxB;AACH;AACJ;;AAED;AACA;AACA,SAASF,2BAAT,CAAqCC,WAArC,EAAkDH,YAAlD,EAAgEC,YAAhE,EAA8EG,WAA9E,EAA2F;AACvF,QAAIC,aAAa,KAAjB;AACA,QAAIC,aAAa,KAAjB;;AAEA,QAAKF,YAAYnI,CAAZ,IAAiB+H,YAAlB,IAAoCA,gBAAgBI,YAAYnI,CAAZ,GAAgBmI,YAAY/G,KAApF,EAA4F;AACxFgH,qBAAa,IAAb;AACH,KAFD,MAEO,IAAKL,gBAAgBI,YAAYnI,CAA7B,IAAoCmI,YAAYnI,CAAZ,IAAiB+H,eAAeG,YAAY9G,KAApF,EAA4F;AAC/FgH,qBAAa,IAAb;AACH;;AAED,QAAKD,YAAYxJ,CAAZ,IAAiBqJ,YAAlB,IAAoCA,gBAAgBG,YAAYxJ,CAAZ,GAAgBwJ,YAAYrJ,MAApF,EAA6F;AACzFuJ,qBAAa,IAAb;AACH,KAFD,MAEO,IAAKL,gBAAgBG,YAAYxJ,CAA7B,IAAoCwJ,YAAYxJ,CAAZ,IAAiBqJ,eAAeE,YAAYpJ,MAApF,EAA6F;AAChGuJ,qBAAa,IAAb;AACH;;AAED;AACA,QAAID,cAAcC,UAAlB,EAA8B;AAC1BzF,6BAAqB,IAArB;AACH,KAFD,MAEO,IAAImF,eAAe,CAAf,IAAoBzF,OAAOlB,KAAP,GAAgB2G,eAAeG,YAAY9G,KAAnE,EAA2E;AAC9EwB,6BAAqB,IAArB;AACH,KAFM,MAEA,IAAIoF,eAAe,CAAf,IAAoB1F,OAAOxD,MAAP,GAAiBkJ,eAAeE,YAAYpJ,MAApE,EAA6E;AAChF8D,6BAAqB,IAArB;AACH;AACJ;;AAED;;AAEA,SAAS0F,mBAAT,GAA+B;AAC3B;AACA;AACAlJ,aAASmJ,gBAAT,CAA0B,SAA1B,EAAqC,aAAK;AACtC;AACA;AACA,YAAItF,mBAAJ,EAAyB;AACrB,mBAAOzD,SAAS,EAAT,CAAP;AACH;AACD,YAAI0D,mBAAJ,EAAyB;AACrB,mBAAO1D,SAAS,EAAT,CAAP;AACH;AACD,YAAIqD,uBAAJ,EAA6B;AACzB,mBAAOrD,SAAS,EAAT,CAAP;AACH;AACD,YAAIsD,qBAAJ,EAA2B;AACvB,mBAAOtD,SAAS,EAAT,CAAP;AACH;AACD,YAAIuD,wBAAJ,EAA8B;AAC1B,mBAAOvD,SAAS,EAAT,CAAP;AACH;AACD,YAAIwD,uBAAJ,EAA6B;AACzB,mBAAOxD,SAAS,EAAT,CAAP;AACH;AACD,YAAI2D,eAAJ,EAAqB;AACjB,mBAAO3D,SAAS,EAAT,CAAP;AACH;;AAED,YAAIgJ,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AAClB,gBAAI,CAACxF,mBAAL,EAA0B;AACtBzD,yBAASgJ,EAAEC,OAAX,IAAsB,IAAtB;AACAxF,sCAAsB,IAAtB;AACH;AACJ,SALD,MAKO,IAAIuF,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACzB,gBAAI,CAACvF,mBAAL,EAA0B;AACtB1D,yBAASgJ,EAAEC,OAAX,IAAsB,IAAtB;AACAvF,sCAAsB,IAAtB;AACH;AACJ,SALM,MAKA,IAAIsF,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACzB,gBAAI,CAAC5F,uBAAL,EAA8B;AAC1BrD,yBAASgJ,EAAEC,OAAX,IAAsB,IAAtB;AACA5F,0CAA0B,IAA1B;AACH;AACJ,SALM,MAKA,IAAI2F,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACzB,gBAAI,CAAC3F,qBAAL,EAA4B;AACxBtD,yBAASgJ,EAAEC,OAAX,IAAsB,IAAtB;AACA3F,wCAAwB,IAAxB;AACH;AACJ,SALM,MAKA,IAAI0F,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACzB,gBAAI,CAAC1F,wBAAL,EAA+B;AAC3BvD,yBAASgJ,EAAEC,OAAX,IAAsB,IAAtB;AACA1F,2CAA2B,IAA3B;AACH;AACJ,SALM,MAKA,IAAIyF,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACzB,gBAAI,CAACzF,uBAAL,EAA8B;AAC1BxD,yBAASgJ,EAAEC,OAAX,IAAsB,IAAtB;AACAzF,0CAA0B,IAA1B;AACH;AACJ,SALM,MAKA,IAAIwF,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACzB,gBAAI,CAACtF,eAAL,EAAsB;AAClB3D,yBAASgJ,EAAEC,OAAX,IAAsB,IAAtB;AACAtF,kCAAkB,IAAlB;AACH;AACJ,SALM,MAKA;AACH3D,qBAASgJ,EAAEC,OAAX,IAAsB,IAAtB;AACH;AACJ,KA/DD;;AAiEA;AACArJ,aAASmJ,gBAAT,CAA0B,OAA1B,EAAmC,aAAK;AACpC;AACA,YAAIC,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AAClB,mBAAOjJ,SAASgJ,EAAEC,OAAX,CAAP;AACAxF,kCAAsB,KAAtB;AACH,SAHD,MAGO,IAAIuF,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACzB,mBAAOjJ,SAASgJ,EAAEC,OAAX,CAAP;AACAvF,kCAAsB,KAAtB;AACH,SAHM,MAGA,IAAIsF,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACzB,mBAAOjJ,SAASgJ,EAAEC,OAAX,CAAP;AACA5F,sCAA0B,KAA1B;AACH,SAHM,MAGA,IAAI2F,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACzB,mBAAOjJ,SAASgJ,EAAEC,OAAX,CAAP;AACA3F,oCAAwB,KAAxB;AACH,SAHM,MAGA,IAAI0F,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACzB,mBAAOjJ,SAASgJ,EAAEC,OAAX,CAAP;AACA1F,uCAA2B,KAA3B;AACH,SAHM,MAGA,IAAIyF,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACzB,mBAAOjJ,SAASgJ,EAAEC,OAAX,CAAP;AACAzF,sCAA0B,KAA1B;AACH,SAHM,MAGA,IAAIwF,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACzB,mBAAOjJ,SAASgJ,EAAEC,OAAX,CAAP;AACAtF,8BAAkB,KAAlB;AACH,SAHM,MAGA;AACH,mBAAO3D,SAASgJ,EAAEC,OAAX,CAAP;AACH;AACJ,KA1BD;AA2BH;;AAED;;AAEA;AACA,SAASC,SAAT,GAAqB;AACjB;AACA5E,gBAAYlF,KAAKC,GAAL,CAASE,OAAO4J,UAAP,GAAoB,GAA7B,EAAkC5J,OAAO6J,WAAP,GAAqB,GAAvD,CAAZ;;AAEA;AACA,QAAIC,gBAAgBzJ,SAASC,cAAT,CAAwB,eAAxB,CAApB;AACAwJ,kBAAcC,KAAd,CAAoBC,SAApB,GAAgC,WAAWjF,SAAX,GAAuB,GAAvD;;AAEA;AACA/E,WAAOC,qBAAP,CAA6B0J,SAA7B;AACH;;AAED;;AAEA,SAASxK,iBAAT,CAA2BjD,YAA3B,EAAyC;AACrCiJ,gBAAYjJ,eAAe,CAA3B,IAAgCsC,kBAAhC;AACH;;AAED,SAASY,oBAAT,GAAgC;AAC5BsE,kBAAc,CAAd;AACA,SAAK,IAAI5F,IAAI,CAAb,EAAgBA,IAAIqH,YAAYnH,MAAhC,EAAwCF,GAAxC,EAA6C;AACzC4F,uBAAeyB,YAAYrH,CAAZ,CAAf;AACH;AACJ,EAmCD,SAAShB,oBAAT,CAA8BmN,YAA9B,EAA4C;AACxC,QAAIC,UAAUD,YAAd;;AAEA;AACA,QAAIE,0BAA0B9J,SAASC,cAAT,CAAwB,yBAAxB,CAA9B;AACA6J,4BAAwBJ,KAAxB,CAA8BK,UAA9B,GAA2C,SAA3C;;AAEApF,gBAAYtD,YAAY,YAAM;AAC1B;AACAwI;AACA,YAAIG,iBAAiBxK,KAAKyK,KAAL,CAAWJ,UAAU,EAArB,CAArB;AACA,YAAIK,iBAAiBL,UAAU,EAA/B;;AAEA;AACA,YAAIM,iBAAiBnK,SAASC,cAAT,CAAwB,gBAAxB,CAArB;AACAkK,uBAAejK,SAAf,GAA8B8J,cAA9B,SAAgDE,cAAhD;;AAEA;AACA,YAAIL,WAAW,CAAf,EAAkB;AACdtN;AACAqC,yBAAa,gBAAb;AACH;AACJ,KAfW,EAeT,IAfS,CAAZ;AAgBH;;AAED;AACA,SAASrC,qBAAT,GAAiC;AAC7B,QAAIuN,0BAA0B9J,SAASC,cAAT,CAAwB,yBAAxB,CAA9B;AACA6J,4BAAwBJ,KAAxB,CAA8BK,UAA9B,GAA2C,QAA3C;AACAhM,kBAAc4G,SAAd;AACH;;AAED,SAASyF,qBAAT,CAA+BxJ,CAA/B,EAAkCrB,CAAlC,EAAqC;AACjC,WAAOC,KAAK6K,KAAL,CAAW9K,CAAX,EAAcqB,CAAd,CAAP;AACH;;AAED,SAAS0J,uBAAT,CAAiCC,OAAjC,EAA0C;AACtC,WAAOA,UAAU,GAAV,GAAgB/K,KAAKgL,EAA5B;AACH;;AAED;;AAEA,SAASC,QAAT,GAAoB;AAChB;AACA,QAAIrK,SAAS,EAAT,CAAJ,EAAkB;AACdxB,qBAAa,YAAb;AACH;;AAED,QAAIR,cAAc,SAAlB,EAA6B;AACzB;;AAEA,YAAI,CAAC4F,kBAAL,EAAyB;AACrB;AACAV,qBAAS,CAAT;AACAC,qBAAS,CAAT;;AAEA;AACA;AACA,gBAAInD,SAAS,EAAT,CAAJ,EAAkB;AACdkD;AACH;;AAED;AACA,gBAAIlD,SAAS,EAAT,CAAJ,EAAkB;AACdkD;AACH;;AAED;AACA,gBAAIlD,SAAS,EAAT,CAAJ,EAAkB;AACdmD;AACH;;AAED;AACA,gBAAInD,SAAS,EAAT,CAAJ,EAAkB;AACdmD;AACH;;AAED,gBAAI,CAACnD,SAAS,EAAT,KAAgBA,SAAS,EAAT,CAAjB,KAAkC6D,cAAlC,KAAqDX,WAAW,CAAX,IAAgBC,WAAW,CAAhF,CAAJ,EAAwF;AACpF;AACA;AACA,uBAAOnD,SAAS,EAAT,CAAP;;AAEA;AACA;AACAmG;AACH,aARD,MAQO,IAAI,CAACnG,SAAS,EAAT,KAAgBA,SAAS,EAAT,CAAhB,IAAgCA,SAAS,EAAT,CAAhC,IAAgDA,SAAS,EAAT,CAAjD,KAAkE6D,cAAtE,EAAsF;AACzF;AACA;AACAX,yBAAS,CAAT;AACAC,yBAAS,CAAT;;AAEA;AACA,oBAAInD,SAAS,EAAT,CAAJ,EAAkB;AACdkD;AACH;;AAED;AACA,oBAAIlD,SAAS,EAAT,CAAJ,EAAkB;AACdkD;AACH;;AAED;AACA,oBAAIlD,SAAS,EAAT,CAAJ,EAAkB;AACdmD;AACH;;AAED;AACA,oBAAInD,SAAS,EAAT,CAAJ,EAAkB;AACdmD;AACH;;AAEDgD;AACH,aA3BM,MA2BA;AACHlI,wBAAQuD,KAAR,GAAgB,CAAhB;AACH;;AAED;AACA;AACA;AACAvD,oBAAQQ,kBAAR,GAA6B,CAAC,GAA9B;;AAEA,gBAAIyE,WAAW,CAAX,IAAgBC,WAAW,CAA/B,EAAkC;AAC9B;AACAlF,wBAAQ2G,kBAAR,GAA6BoF,sBAAsB9G,MAAtB,EAA8BC,MAA9B,CAA7B;;AAEA;AACAlF,wBAAQQ,kBAAR,GAA6ByL,wBAAwBjM,QAAQ2G,kBAAhC,CAA7B;;AAEA;AACA3G,wBAAQ4G,EAAR,GAAazF,KAAKkL,GAAL,CAASrM,QAAQ2G,kBAAjB,IAAuC3G,QAAQuD,KAA5D;AACAvD,wBAAQ6G,EAAR,GAAa1F,KAAKmL,GAAL,CAAStM,QAAQ2G,kBAAjB,IAAuC3G,QAAQuD,KAA5D;;AAEA;AACAvD,wBAAQ8G,SAAR,IAAqB9G,QAAQ4G,EAA7B;AACA5G,wBAAQ+G,SAAR,IAAqB/G,QAAQ6G,EAA7B;;AAEA;AACA7G,wBAAQ4G,EAAR,GAAazF,KAAKyK,KAAL,CAAW5L,QAAQ8G,SAAnB,CAAb;AACA9G,wBAAQ6G,EAAR,GAAa1F,KAAKyK,KAAL,CAAW5L,QAAQ+G,SAAnB,CAAb;;AAEA;AACA/G,wBAAQ8G,SAAR,IAAqB9G,QAAQ4G,EAA7B;AACA5G,wBAAQ+G,SAAR,IAAqB/G,QAAQ6G,EAA7B;;AAEA;AACA7G,wBAAQgH,eAAR,GAA0BhH,QAAQuC,CAAR,GAAYvC,QAAQ4G,EAA9C;AACA5G,wBAAQiH,eAAR,GAA0BjH,QAAQkB,CAAR,GAAYlB,QAAQ6G,EAA9C;AACH,aA1BD,MA0BO;AACH;AACA7G,wBAAQgH,eAAR,GAA0BhH,QAAQuC,CAAlC;AACAvC,wBAAQiH,eAAR,GAA0BjH,QAAQkB,CAAlC;AACH;;AAED;;AAEA;;AAEAmJ,yCAA6BrK,QAAQgH,eAArC,EAAsDhH,QAAQiH,eAA9D,EAA+E/C,KAA/E;;AAEA;AACA,gBAAIiB,kBAAJ,EAAwB;AACpBnF,wBAAQgH,eAAR,GAA0BhH,QAAQuC,CAAlC;AACAvC,wBAAQiH,eAAR,GAA0BjH,QAAQkB,CAAlC;;AAEA,oBAAIqL,UAAU,CAAd;AACA,oBAAIC,UAAU,CAAd;AACA,oBAAIC,mBAAmB,CAAvB;AACA,oBAAIC,mBAAmB,CAAvB;;AAEA;AACA;AACA,oBAAIvL,KAAKsI,GAAL,CAASzJ,QAAQ4G,EAAR,GAAa6F,gBAAtB,IAA0C,CAA9C,EAAiD;AAC7CF,8BAAUvM,QAAQ4G,EAAR,GAAa6F,gBAAvB;AACH,iBAFD,MAEO;AACHF,8BAAUpL,KAAKuI,IAAL,CAAU1J,QAAQ4G,EAAlB,CAAV;AACH;;AAEDyD,6CAA6BrK,QAAQgH,eAAR,GAA0BuF,OAAvD,EAAgEvM,QAAQiH,eAAxE,EAAyF/C,KAAzF;;AAEA,uBAAO,CAACiB,kBAAD,IAAuBhE,KAAKsI,GAAL,CAASgD,gBAAT,KAA8BtL,KAAKsI,GAAL,CAASzJ,QAAQ4G,EAAjB,IAAuB,CAAnF,EAAsF;AAClF5G,4BAAQgH,eAAR,IAA2BuF,OAA3B;AACAE,wCAAoBF,OAApB;;AAEA,wBAAIpL,KAAKsI,GAAL,CAASzJ,QAAQ4G,EAAR,GAAa6F,gBAAtB,IAA0C,CAA9C,EAAiD;AAC7CF,kCAAUvM,QAAQ4G,EAAR,GAAa6F,gBAAvB;AACH,qBAFD,MAEO;AACHF,kCAAUpL,KAAKuI,IAAL,CAAU1J,QAAQ4G,EAAlB,CAAV;AACH;;AAEDyD,iDAA6BrK,QAAQgH,eAAR,GAA0BuF,OAAvD,EAAgEvM,QAAQiH,eAAxE,EAAyF/C,KAAzF;AACH;;AAED;AACA;AACA,oBAAI/C,KAAKsI,GAAL,CAASzJ,QAAQ6G,EAAR,GAAa6F,gBAAtB,IAA0C,CAA9C,EAAiD;AAC7CF,8BAAUxM,QAAQ6G,EAAR,GAAa6F,gBAAvB;AACH,iBAFD,MAEO;AACHF,8BAAUrL,KAAKuI,IAAL,CAAU1J,QAAQ6G,EAAlB,CAAV;AACH;;AAEDwD,6CAA6BrK,QAAQgH,eAArC,EAAsDhH,QAAQiH,eAAR,GAA0BuF,OAAhF,EAAyFtI,KAAzF;;AAEA,uBAAO,CAACiB,kBAAD,IAAuBhE,KAAKsI,GAAL,CAASiD,gBAAT,KAA8BvL,KAAKsI,GAAL,CAASzJ,QAAQ6G,EAAjB,IAAuB,CAAnF,EAAsF;AAClF7G,4BAAQiH,eAAR,IAA2BuF,OAA3B;AACAE,wCAAoBF,OAApB;;AAEA,wBAAIrL,KAAKsI,GAAL,CAASzJ,QAAQ6G,EAAR,GAAa6F,gBAAtB,IAA0C,CAA9C,EAAiD;AAC7CF,kCAAUxM,QAAQ6G,EAAR,GAAa6F,gBAAvB;AACH,qBAFD,MAEO;AACHF,kCAAUrL,KAAKuI,IAAL,CAAU1J,QAAQ6G,EAAlB,CAAV;AACH;;AAEDwD,iDAA6BrK,QAAQgH,eAArC,EAAsDhH,QAAQiH,eAAR,GAA0BuF,OAAhF,EAAyFtI,KAAzF;AACH;AACJ;;AAEDlE,oBAAQuC,CAAR,GAAYvC,QAAQgH,eAApB;AACAhH,oBAAQkB,CAAR,GAAYlB,QAAQiH,eAApB;AACH;;AAED;;AAEAuB;AACAC;;AAEA;;AAEAjC,2BAAmBhH,MAAnB,CAA0B,CAA1B;;AAEA+I;AACA,aAAK,IAAInJ,IAAI,CAAb,EAAgBA,IAAIQ,WAAWN,MAA/B,EAAuCF,GAAvC,EAA4C;AACxC8K,qCAAyBtK,WAAWR,CAAX,CAAzB;AACH;;AAED,aAAK,IAAIA,MAAI,CAAb,EAAgBA,MAAIoH,mBAAmBlH,MAAvC,EAA+CF,KAA/C,EAAoD;AAChD,gBAAIoH,mBAAmBpH,GAAnB,EAAsBuN,WAAtB,CAAkCC,IAAlC,KAA2C,cAA/C,EAA+D;AAC3D;AACA9M;;AAEA;AACA,oBAAI+M,iBAAiBrG,mBAAmBpH,GAAnB,CAArB;AACAyN,+BAAe3K,eAAf;AACA3C,6BAAasN,eAAezK,OAA5B;AACA,oBAAIe,gBAAgBN,cAAcO,OAAd,CAAsByJ,cAAtB,CAApB;AACAhK,8BAAcrD,MAAd,CAAqB2D,aAArB,EAAoC,CAApC;AACH,aAVD,MAUO,IAAIqD,mBAAmBpH,GAAnB,EAAsBuN,WAAtB,CAAkCC,IAAlC,KAA2C,aAA/C,EAA8D;AACjE;AACA9M;;AAEA;AACA,qBAAK,IAAIV,MAAI,CAAb,EAAgBA,MAAIC,gBAAgBC,MAApC,EAA4CF,KAA5C,EAAiD;AAC7CG,iCAAaF,gBAAgBD,GAAhB,CAAb;AACH;;AAEDC,gCAAgBG,MAAhB,CAAuB,CAAvB;;AAEA;AACA,qBAAK,IAAIJ,MAAI,CAAb,EAAgBA,MAAIK,iBAAiBH,MAArC,EAA6CF,KAA7C,EAAkD;AAC9CM,kCAAcD,iBAAiBL,GAAjB,CAAd;AACH;;AAEDK,iCAAiBD,MAAjB,CAAwB,CAAxB;;AAEA8I;;AAEA9L,mCAAmB,IAAnB;;AAEAmD;AACA,qBAAK,IAAIP,MAAI,CAAb,EAAgBA,MAAIQ,WAAWN,MAA/B,EAAuCF,KAAvC,EAA4C;AACxCsI,qCAAiB9H,WAAWR,GAAX,CAAjB;AACH;;AAED;AACA;AACH,aA7BM,MA6BA;AACHmB,6BAAa,MAAb;AACA;AACH;AACJ;AACJ;;AAED;AACAe,WAAOC,qBAAP,CAA6B6K,QAA7B;AACH;;AAED;AACA;AACA,SAASU,WAAT,GAAuB;AACnB;AACAnL,aAASC,cAAT,CAAwB,eAAxB,EAAyCC,SAAzC,gBAAgE/B,kBAAhE;;AAEA;AACA6B,aAASC,cAAT,CAAwB,cAAxB,EAAwCC,SAAxC,GAAoD,YAAYrE,YAAhE;;AAEA;AACAmH,YAAQoI,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBlI,OAAOlB,KAA/B,EAAsCkB,OAAOxD,MAA7C;;AAEA,QAAItB,cAAc,mBAAd,IAAqCA,cAAc,iBAAvD,EAA0E;AACtE2I;AACAM;AACH;;AAED,QAAIjJ,cAAc,SAAlB,EAA6B;AACzBiK;AACAf;AACAI;AACAC;AACAQ;AACAC;AACH,KAPD,MAOO,IAAIhK,cAAc,gBAAlB,EAAoC;AACvCkK;AACH;;AAED;AACA3I,WAAOC,qBAAP,CAA6BuL,WAA7B;AACH;;AAED;;AAEApP;;AAEAmN;AACAvJ,OAAOC,qBAAP,CAA6B6K,QAA7B;AACA9K,OAAOC,qBAAP,CAA6BuL,WAA7B;AACAxL,OAAOC,qBAAP,CAA6B0J,SAA7B","file":"blockie.js","sourcesContent":["//Game Setup\r\n\r\nconst canvas = document.getElementById(\"game\");\r\nconst context = canvas.getContext(\"2d\");\r\ncontext.lineWidth = 4;\r\n\r\n//Variables\r\n\r\nlet gameState = \"playing\";\r\n\r\nlet currentLevel = 1;\r\n\r\nlet currentLevelPoints = 0;\r\nlet totalPoints = 0;\r\n\r\nlet xInput = 0;\r\nlet yInput = 0;\r\n\r\nlet preventingMovement = false;\r\n\r\nlet arrowLeftAlreadyPressed = false;\r\nlet arrowUpAlreadyPressed = false;\r\nlet arrowRightAlreadyPressed = false;\r\nlet arrowDownAlreadyPressed = false;\r\nlet shiftAlreadyPressed = false;\r\nlet spaceAlreadyPressed = false;\r\nlet pAlreadyPressed = false;\r\n\r\nlet recoveringFromDash = false;\r\nlet allowDashAgain = true;\r\nlet dashDistance = 96;\r\nlet dashRecoverySeconds = 0.3;\r\nlet allowDashAgainSeconds = 0.9;\r\n\r\n//Used to stop async/await functions by preventing another await to run. Used when Blockie touches activePoints and the current\r\n//instances needs to stop running, yet everything cannot be rejected (because that would stop the level too).\r\nlet cancelAwaitChain = false;\r\n\r\n//Sprite maps. \r\n\r\n//These are used when drawing to easily reference sprites. They are large sprite maps to avoid loading many individual sprite \r\n//files (which would hurt performance).\r\n\r\nlet spBlockiePlaying = document.createElement(\"img\");\r\nspBlockiePlaying.src = \"../images/spBlockiePlaying.png\";\r\n\r\nlet spBlockieDestructing = document.createElement(\"img\");\r\nspBlockieDestructing.src = \"../images/spBlockieDestructing.png\";\r\n\r\nlet spBlockieRecoveringFromDash = document.createElement(\"img\");\r\nspBlockieRecoveringFromDash.src = \"../images/spBlockieRecoveringFromDash.png\";\r\n\r\nlet spCountdownDestructionScene = document.createElement(\"img\");\r\nspCountdownDestructionScene.src = \"../images/spCountdownDestructionScene.png\";\r\n\r\nlet gameScale = 1;\r\n\r\nlet countdown = 0;\r\n\r\n//Arrays\r\n\r\nlet keysDown = [];\r\n\r\nlet waitingTimeouts = [];\r\nlet passivePoints = [];\r\nlet activePoints = [];\r\nlet movingHorizontalLasers = [];\r\nlet movingVerticalLasers = [];\r\nlet bombs = [];\r\nlet walls = [];\r\nlet partyHats = [];\r\n\r\n//allObjects is used to make destroying all instances (reject or resolve) possible with a for loop.\r\nlet allObjects = [];\r\n\r\nlet currentTimeouts = [];\r\nlet currentIntervals = [];\r\n\r\nlet collidingInstances = [];\r\n\r\nlet levelPoints = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n//Classes\r\n\r\nclass Player {\r\n    constructor() {\r\n        this.width = 32;\r\n        this.height = 32;\r\n\r\n        this.x = canvas.width / 2 - this.width / 2;\r\n        this.y = canvas.height / 2 - this.height / 2;\r\n\r\n        this.speed = 2;\r\n        this.angleMovingDegrees = 0;\r\n        this.angleMovingRadians = 0;\r\n        this.dx = 0;\r\n        this.dy = 0;\r\n        this.xSubPixel = 0;\r\n        this.ySubPixel = 0;\r\n        this.targetXLocation = this.x;\r\n        this.targetYLocation = this.y;\r\n\r\n        this.state = \"playing\";\r\n\r\n        this.sprite = spBlockiePlaying;\r\n        this.sx = 0;\r\n\r\n        //Used to draw the remaining seconds meter above the instance.\r\n        this.remainingDashSeconds = 0;\r\n    };\r\n};\r\n\r\nclass WaitingTimeout {\r\n    constructor() {\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalReject;\r\n        this.timeout;\r\n    };\r\n};\r\n\r\n//The difference between PassivePoints and ActivePoints is that the latter resolve all currently running promises when touched by\r\n//Blockie, while the former do not.\r\n\r\nclass PassivePoint {\r\n    constructor(x, y, totalFiringSeconds) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = 16;\r\n        this.height = 16;\r\n\r\n        //When created, the instance begins its warning state to provide visual feedback.\r\n        this.state = \"warning\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalResolve;\r\n        this.externalReject;\r\n        this.timeout;\r\n\r\n        //Used to draw the remaining seconds meter above the instance.\r\n        this.totalFiringSeconds = totalFiringSeconds;\r\n        this.remainingFiringSeconds = 0;\r\n    };\r\n};\r\n\r\nclass ActivePoint {\r\n    constructor(x, y, totalFiringSeconds) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = 16;\r\n        this.height = 16;\r\n\r\n        //When created, the instance begins its warning state to provide visual feedback.\r\n        this.state = \"warning\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalResolve;\r\n        this.externalReject;\r\n        this.timeout;\r\n    };\r\n};\r\n\r\nclass MovingHorizontalLaser {\r\n    constructor(y, height, speed) {\r\n        this.x = 0;\r\n        this.y = y;\r\n        this.width = canvas.width;\r\n        this.height = height;\r\n        this.speed = speed;\r\n\r\n        //When created, the instance begins its warning state to provide visual feedback.\r\n        this.state = \"warning\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalReject;\r\n        this.timeout;\r\n    };\r\n};\r\n\r\nclass MovingVerticalLaser {\r\n    constructor(x, width, speed) {\r\n        this.x = x;\r\n        this.y = 0;\r\n        this.width = width;\r\n        this.height = canvas.height;\r\n        this.speed = speed;\r\n\r\n        //When created, the instance begins its warning state to provide visual feedback.\r\n        this.state = \"warning\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalReject;\r\n        this.timeout;\r\n    };\r\n};\r\n\r\nclass Bomb {\r\n    constructor(x, y, width, height) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        //When created, the instance begins its warning state to provide visual feedback.\r\n        this.state = \"warning\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalReject;\r\n        this.timeout;\r\n    };\r\n};\r\n\r\nclass Wall {\r\n    constructor(x, y, width, height) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalReject;\r\n        this.timeout;\r\n    }\r\n}\r\n\r\nclass PartyHat {\r\n    constructor() {\r\n        this.x = blockie.x + 8;\r\n        this.y = -20;\r\n        this.width = 16;\r\n        this.height = 20;\r\n    };\r\n};\r\n\r\nlet blockie = new Player();\r\n\r\n//Functions\r\n\r\n//Level-Handling Functions\r\n\r\n//Since these are frequently used numbers, they are variables for simplicity. The canvas' width and height are the same, so they \r\n//work with both axes.\r\nlet oneEigth = 4 * 16;\r\nlet oneFourth = 8 * 16;\r\nlet threeEigths = 12 * 16;\r\nlet oneHalf = canvas.width / 2;\r\nlet fiveEigths = 20 * 16;\r\nlet threeFourths = 24 * 16;\r\nlet sevenEigths = 28 * 16;\r\nlet fullScreen = 32 * 16;\r\n\r\nlet pointOne = 2 * 16;\r\nlet pointTwo = 6 * 16;\r\nlet pointThree = 10 * 16;\r\nlet pointFour = 14 * 16;\r\nlet pointFive = 18 * 16;\r\nlet pointSix = 22 * 16;\r\nlet pointSeven = 26 * 16;\r\nlet pointEight = 30 * 16;\r\n\r\nlet blockieAdjustment = -blockie.width / 2\r\n\r\n//Levels are a series of obstacles and objectives that appear in specific orders and time periods using async/await.\r\nasync function levelOne() {\r\n    try {\r\n        initializeLevel(pointTwo + blockieAdjustment, oneHalf + blockieAdjustment);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, fullScreen, threeEigths),\r\n            createWall(0, fiveEigths, fullScreen, threeEigths),\r\n            createActivePoint(pointSeven - 8, oneHalf - 8, 0),\r\n            createPassivePoint(oneHalf - 8, oneHalf - 8, 0, 10)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, fullScreen, threeEigths),\r\n            createWall(0, fiveEigths, oneEigth, threeEigths),\r\n            createWall(oneFourth, fiveEigths, oneHalf, oneFourth),\r\n            createWall(sevenEigths, fiveEigths, oneEigth, threeEigths),\r\n            createPassivePoint(pointTwo - 8, pointEight - 8, 0, 15),\r\n            createPassivePoint(pointSeven - 8, pointEight - 8, 0, 15),\r\n\r\n            createActivePoint(pointTwo - 8, oneHalf - 8, 4)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, threeEigths, threeEigths),\r\n            createWall(0, fiveEigths, threeEigths, threeEigths),\r\n            createWall(fiveEigths, 0, threeEigths, fullScreen),\r\n            createActivePoint(oneHalf - 8, sevenEigths - 8, 0),\r\n            createPassivePoint(oneHalf - 8, oneEigth - 8, 0, 10)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        console.log(`Level ${currentLevel} completed.`);\r\n        increaseLevel();\r\n    } catch (error) {\r\n        console.log(`Level ${currentLevel} restarted.`);\r\n    };\r\n};\r\n\r\nasync function levelTwo() {\r\n    try {\r\n        initializeLevel(oneHalf + blockieAdjustment, sevenEigths + blockieAdjustment);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, fullScreen, threeFourths),\r\n            createPassivePoint(pointTwo - 8, sevenEigths - 8, 0, 10),\r\n\r\n            loopFireBombs(oneHalf - 16, threeFourths, 32, oneFourth, 0, 1, 1),\r\n\r\n            createActivePoint(sevenEigths - 8, sevenEigths - 8, 3)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createActivePoint(oneHalf - 8, sevenEigths - 8, 0),\r\n\r\n            fireBomb(threeFourths, threeFourths, oneFourth, oneFourth, 1, 3)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, threeEigths, fullScreen),\r\n            createWall(fiveEigths, 0, threeEigths, fullScreen),\r\n            createActivePoint(oneHalf - 8, pointTwo - 8, 0),\r\n            fireMovingHorizontalLaser(fullScreen - 32, 32, -1.5, 1, 5)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, threeEigths, threeEigths),\r\n            createWall(fiveEigths, 0, threeEigths, threeEigths),\r\n            createWall(0, fiveEigths, threeEigths, threeEigths),\r\n            createWall(fiveEigths, fiveEigths, threeEigths, threeEigths),\r\n            createActivePoint(oneHalf - 8, pointEight - 8, 0),\r\n            createPassivePoint(pointOne - 8, oneHalf - 8, 0, 12),\r\n            createPassivePoint(pointEight - 8, oneHalf - 8, 0, 12),\r\n            loopFireBombs(threeEigths, fiveEigths, oneFourth, oneFourth, 0, 1, 2)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        console.log(`Level ${currentLevel} completed.`);\r\n        increaseLevel();\r\n    } catch (error) {\r\n        console.log(`Level ${currentLevel} restarted.`);\r\n    };\r\n};\r\n\r\nasync function levelThree() {\r\n    try {\r\n        initializeLevel(oneHalf + blockieAdjustment, sevenEigths + blockieAdjustment);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, 14 * 16, fullScreen),\r\n            createWall(14 * 16, 0, 4 * 16, 14 * 16),\r\n            createWall(14 * 16, 18 * 16, 4 * 16, 2 * 16),\r\n            createWall(14 * 16, 24 * 16, 4 * 16, 2 * 16),\r\n            createWall(14 * 16, 30 * 16, 4 * 16, 2 * 16),\r\n            createWall(18 * 16, 0, 14 * 16, fullScreen),\r\n            createActivePoint(oneHalf - 8, oneHalf - 8, 0),\r\n            createPassivePoint(oneHalf - 8, 22 * 16 - 8, 0, 10)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, fullScreen, 2 * 16),\r\n            createWall(0, 6 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 12 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 18 * 16, fullScreen, 14 * 16),\r\n            createWall(0, 0, 2 * 16, fullScreen),\r\n            createWall(6 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(12 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(18 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(24 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(30 * 16, 0, 2 * 16, fullScreen),\r\n            createPassivePoint(4 * 16 - 8, oneHalf - 8, 0, 16),\r\n            createPassivePoint(28 * 16 - 8, oneHalf - 8, 0, 16),\r\n            loopFireBombs(8 * 16, 2 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n            loopFireBombs(20 * 16, 2 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n            loopFireBombs(2 * 16, 8 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n            loopFireBombs(14 * 16, 8 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n            loopFireBombs(26 * 16, 8 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n            loopFireBombs(8 * 16, 14 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n            loopFireBombs(20 * 16, 14 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n\r\n            createActivePoint(oneHalf - 8, 4 * 16 - 8, 3)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, 14 * 16, fullScreen),\r\n            createWall(18 * 16, 0, 14 * 16, fullScreen),\r\n            createActivePoint(oneHalf - 8, pointEight - 8, 0),\r\n            fireMovingHorizontalLaser(fullScreen - 32, 32, -1.5, 0, 5)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createActivePoint(oneHalf - 8, pointOne - 8, 0),\r\n            loopFireMovingHorizontalLasers(0, 32, 2, 0, 1, 4),\r\n            loopFireMovingHorizontalLasers(0, 32, 2, 2, 1, 4),\r\n            loopFireMovingHorizontalLasers(0, 32, 2, 4, 1, 4),\r\n            loopFireMovingHorizontalLasers(0, 32, 2, 6, 1, 4)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        destroyCountdownTimer();\r\n\r\n        console.log(`Level ${currentLevel} completed.`);\r\n        increaseLevel();\r\n    } catch (error) {\r\n        console.log(`Level ${currentLevel} restarted.`);\r\n    };\r\n};\r\n\r\nasync function levelFour() {\r\n    try {\r\n        initializeLevel(oneHalf + blockieAdjustment, oneHalf + blockieAdjustment);\r\n\r\n        createCountdownTimer(35);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(threeEigths, 0, 2 * 16, sevenEigths),\r\n            createWall(oneEigth, 0, oneFourth, 14 * 16),\r\n            createWall(oneEigth, 18 * 16, oneFourth, 10 * 16),\r\n            createWall(18 * 16, 0, 14 * 16, fullScreen),\r\n            createActivePoint(pointOne - 8, pointOne - 8, 0),\r\n            createPassivePoint(pointOne - 8, pointEight - 8, 0, 9),\r\n\r\n            fireMovingVerticalLaser(27 * 16, 16, -1, 2, 9),\r\n            fireMovingVerticalLaser(29 * 16, 16, -1, 2, 9),\r\n            fireMovingVerticalLaser(fullScreen - 16, 16, -1, 2, 9)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(oneEigth, 0, 10 * 16, sevenEigths),\r\n            createWall(18 * 16, 0, oneHalf, fullScreen),\r\n            createActivePoint(oneHalf - 8, pointOne - 8, 0),\r\n\r\n            loopFireBombs(0, 0, oneEigth, oneEigth, 0, 0.5, 0.5),\r\n            loopFireBombs(0, oneEigth, oneEigth, oneEigth, 0.5, 0.5, 0.5),\r\n            loopFireBombs(0, oneFourth, oneEigth, oneEigth, 1, 0.5, 0.5),\r\n            loopFireBombs(0, threeEigths, oneEigth, oneEigth, 1.5, 0.5, 0.5),\r\n            loopFireBombs(0, oneHalf, oneEigth, oneEigth, 0, 0.5, 0.5),\r\n            loopFireBombs(0, fiveEigths, oneEigth, oneEigth, 0.5, 0.5, 0.5),\r\n            loopFireBombs(0, threeFourths, oneEigth, oneEigth, 1, 0.5, 0.5),\r\n            loopFireBombs(0, sevenEigths, oneEigth, oneEigth, 1.5, 0.5, 0.5),\r\n\r\n            loopFireBombs(14 * 16, 0, oneEigth, oneEigth, 1.5, 0.5, 0.5),\r\n            loopFireBombs(14 * 16, oneEigth, oneEigth, oneEigth, 1, 0.5, 0.5),\r\n            loopFireBombs(14 * 16, oneFourth, oneEigth, oneEigth, 0.5, 0.5, 0.5),\r\n            loopFireBombs(14 * 16, threeEigths, oneEigth, oneEigth, 0, 0.5, 0.5),\r\n            loopFireBombs(14 * 16, oneHalf, oneEigth, oneEigth, 1.5, 0.5, 0.5),\r\n            loopFireBombs(14 * 16, fiveEigths, oneEigth, oneEigth, 1, 0.5, 0.5),\r\n            loopFireBombs(14 * 16, threeFourths, oneEigth, oneEigth, 0.5, 0.5, 0.5),\r\n            loopFireBombs(14 * 16, sevenEigths, oneEigth, oneEigth, 0, 0.5, 0.5),\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, 14 * 16, fullScreen),\r\n            createWall(18 * 16, 0, 14 * 16, oneFourth),\r\n            createWall(18 * 16, oneFourth, 2 * 16, 12 * 16),\r\n            createWall(18 * 16, threeFourths, 6 * 16, oneFourth),\r\n            createWall(threeFourths, oneFourth, oneFourth, threeFourths),\r\n            createActivePoint(oneHalf - 8, 28 * 16 - 8, 0),\r\n            createPassivePoint(22 * 16 - 8, 10 * 16 - 8, 0, 5)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, fullScreen, 8 * 16),\r\n            createWall(0, 8 * 16, oneFourth, 26 * 16),\r\n            createWall(threeFourths, 8 * 16, oneFourth, 26 * 16),\r\n            createWall(oneFourth, 8 * 16, 6 * 16, 6 * 16),\r\n            createWall(18 * 16, 8 * 16, 6 * 16, 6 * 16),\r\n            createWall(oneFourth, 18 * 16, 6 * 16, 14 * 16),\r\n            createWall(18 * 16, 18 * 16, 6 * 16, 14 * 16),\r\n            createWall(14 * 16, 30 * 16, 4 * 16, 2 * 16),\r\n\r\n            fireBomb(14 * 16, 26 * 16, 4 * 16, 4 * 16, 0.7, 0.7),\r\n\r\n            fireBomb(14 * 16, 20 * 16, 4 * 16, 4 * 16, 1.4, 0.7),\r\n\r\n            fireBomb(14 * 16, 14 * 16, 4 * 16, 4 * 16, 2.1, 0.7),\r\n            fireBomb(8 * 16, 14 * 16, 4 * 16, 4 * 16, 2.1, 0.7),\r\n            fireBomb(20 * 16, 14 * 16, 4 * 16, 4 * 16, 2.1, 0.7),\r\n\r\n            fireMovingHorizontalLaser(0, 32, 2, 2.1, 10),\r\n\r\n            createActivePoint(oneHalf - 8, oneHalf - 8, 3)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            fireBomb(16, 0, 30 * 16, oneEigth, 0, 1),\r\n            fireBomb(16, threeEigths, 30 * 16, oneFourth, 0.15, 1),\r\n            fireBomb(16, sevenEigths, 30 * 16, oneEigth, 0.3, 1),\r\n\r\n            fireBomb(0, 16, oneEigth, 30 * 16, 2.45, 1),\r\n            fireBomb(threeEigths, 16, oneFourth, 30 * 16, 2.6, 1),\r\n            fireBomb(sevenEigths, 16, oneEigth, 30 * 16, 2.75, 1),\r\n\r\n            createActivePoint(oneHalf - 8, oneHalf - 8, 7),\r\n            fireBomb(oneEigth, 16, oneFourth, 30 * 16, 4.75, 1),\r\n            fireBomb(fiveEigths, 16, oneFourth, 30 * 16, 4.9, 1),\r\n            fireBomb(16, oneEigth, 30 * 16, oneFourth, 5.05, 1),\r\n            fireBomb(16, fiveEigths, 30 * 16, oneFourth, 5.2, 1)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        destroyCountdownTimer();\r\n\r\n        console.log(`Level ${currentLevel} completed.`);\r\n        increaseLevel();\r\n    } catch (error) {\r\n        console.log(`Level ${currentLevel} restarted.`);\r\n    };\r\n};\r\n\r\nasync function levelFive() {\r\n    try {\r\n        initializeLevel(oneHalf + blockieAdjustment, oneHalf + blockieAdjustment);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, fullScreen, oneFourth),\r\n            createWall(0, oneFourth, oneFourth, oneHalf),\r\n            createWall(threeFourths, oneFourth, oneFourth, oneHalf),\r\n            createWall(0, threeFourths, 14 * 16, oneEigth),\r\n            createWall(18 * 16, threeFourths, 14 * 16, oneEigth),\r\n            createActivePoint(oneEigth - 8, pointEight - 8, 0),\r\n\r\n            createPassivePoint(sevenEigths - 8, pointEight - 8, 2.5, 7)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(oneFourth, oneFourth, 6 * 16, threeFourths),\r\n            createWall(14 * 16, 12 * 16, 4 * 16, 20 * 16),\r\n            createWall(18 * 16, oneFourth, 6 * 16, threeFourths),\r\n            createActivePoint(sevenEigths - 8, sevenEigths - 8, 0),\r\n            createPassivePoint(oneHalf - 8, pointThree - 8, 0, 7),\r\n\r\n            loopFireBombs(0, oneFourth, oneFourth, 2 * 16, 1, 0, 1),\r\n            loopFireBombs(0, oneHalf, oneFourth, 2 * 16, 0, 0, 1),\r\n            loopFireBombs(0, threeFourths, oneFourth, 2 * 16, 1, 0, 1),\r\n\r\n            fireMovingHorizontalLaser(0, 32, 1.4, 6.5, 10)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        moveBlockie(sevenEigths - 8, sevenEigths - 8);\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, fullScreen, 2 * 16),\r\n            createWall(0, 6 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 12 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 18 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 24 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 30 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 0, 2 * 16, fullScreen),\r\n            createWall(6 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(12 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(18 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(24 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(30 * 16, 0, 2 * 16, fullScreen),\r\n            createActivePoint(4 * 16 - 8, 4 * 16 - 8, 0),\r\n            createPassivePoint(4 * 16 - 8, 28 * 16 - 8, 0, 17),\r\n\r\n            createPassivePoint(oneHalf - 8, oneHalf - 8, 7, 7),\r\n\r\n            loopFireBombs(8 * 16, 2 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n            loopFireBombs(20 * 16, 2 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n\r\n            loopFireBombs(2 * 16, 8 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n            loopFireBombs(8 * 16, 8 * 16, 4 * 16, 4 * 16, 2, 2, 1),\r\n            loopFireBombs(14 * 16, 8 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n            loopFireBombs(20 * 16, 8 * 16, 4 * 16, 4 * 16, 2, 2, 1),\r\n            loopFireBombs(26 * 16, 8 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n\r\n            loopFireBombs(8 * 16, 14 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n            loopFireBombs(14 * 16, 14 * 16, 4 * 16, 4 * 16, 2, 2, 1),\r\n            loopFireBombs(20 * 16, 14 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n\r\n            loopFireBombs(2 * 16, 20 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n            loopFireBombs(8 * 16, 20 * 16, 4 * 16, 4 * 16, 2, 2, 1),\r\n            loopFireBombs(14 * 16, 20 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n            loopFireBombs(20 * 16, 20 * 16, 4 * 16, 4 * 16, 2, 2, 1),\r\n            loopFireBombs(26 * 16, 20 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n\r\n            loopFireBombs(8 * 16, 26 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n            loopFireBombs(20 * 16, 26 * 16, 4 * 16, 4 * 16, 0, 2, 1),\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        console.log(`Level ${currentLevel} completed.`);\r\n        increaseLevel();\r\n    } catch (error) {\r\n        console.log(`Level ${currentLevel} restarted.`);\r\n    };\r\n};\r\n\r\nasync function levelSix() {\r\n    try {\r\n        initializeLevel(oneEigth + blockieAdjustment, oneEigth + blockieAdjustment);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 6 * 16, 26 * 16, oneFourth),\r\n            createWall(0, 14 * 16, 14 * 16, 4 * 16),\r\n            createWall(0, 18 * 16, fullScreen, 14 * 16),\r\n            createWall(0, 0, 2 * 16, 6 * 16),\r\n            createWall(2 * 16, 0, 30 * 16, 2 * 16),\r\n            createWall(30 * 16, 2 * 16, 2 * 16, oneHalf),\r\n            createWall(17 * 16, 2 * 16, 2 * 16, 4 * 16),\r\n            createWall(26 * 16, threeEigths, oneEigth, 2 * 16),\r\n            createActivePoint(oneHalf - 8, oneHalf - 8, 0),\r\n            loopFireBombs(7 * 16, 2 * 16, 10 * 16, 4 * 16, 0, 0.5, 1),\r\n            loopFireBombs(26 * 16, 2 * 16, 4 * 16, 10 * 16, 0, 0.5, 1),\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, fullScreen, oneFourth),\r\n            createWall(0, oneFourth, oneFourth, oneHalf),\r\n            createWall(threeFourths, oneFourth, oneFourth, oneHalf),\r\n            createWall(0, threeFourths, 14 * 16, oneEigth),\r\n            createWall(18 * 16, threeFourths, 14 * 16, oneEigth),\r\n            createActivePoint(pointOne - 8, pointEight - 8, 0),\r\n            loopFireBombs(oneEigth, sevenEigths, 10 * 16, 4 * 16, 0, 0.5, 1),\r\n            loopFireBombs(18 * 16, sevenEigths, 10 * 16, 4 * 16, 0, 0.5, 1),\r\n\r\n            createPassivePoint(pointEight - 8, pointEight - 8, 2.5, 7)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, 14 * 16, sevenEigths),\r\n            createWall(14 * 16, 0, oneEigth, 14 * 16),\r\n            createWall(18 * 16, 0, 14 * 16, fullScreen),\r\n            createActivePoint(oneHalf - 8, oneHalf - 8, 0),\r\n            fireMovingHorizontalLaser(0, 16, 0.7, 0, 10),\r\n\r\n            fireMovingHorizontalLaser(31 * 16, 16, -1.6, 2, 10)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createActivePoint(pointOne - 8, pointEight - 8, 0),\r\n            fireBomb(15 * 16, 15 * 16, 2 * 16, 2 * 16, 0.15, 0.5),\r\n            fireBomb(14 * 16, 14 * 16, 4 * 16, 4 * 16, 0.3, 0.5),\r\n            fireBomb(13 * 16, 13 * 16, 6 * 16, 6 * 16, 0.45, 0.5),\r\n            fireBomb(12 * 16, 12 * 16, 8 * 16, 8 * 16, 0.6, 0.5),\r\n            fireBomb(11 * 16, 11 * 16, 10 * 16, 10 * 16, 0.75, 0.5),\r\n            fireBomb(10 * 16, 10 * 16, 12 * 16, 12 * 16, 0.9, 0.5),\r\n            fireBomb(9 * 16, 9 * 16, 14 * 16, 14 * 16, 1.05, 0.5),\r\n            fireBomb(8 * 16, 8 * 16, 16 * 16, 16 * 16, 1.2, 0.5),\r\n            fireBomb(7 * 16, 7 * 16, 18 * 16, 18 * 16, 1.35, 0.5),\r\n            fireBomb(6 * 16, 6 * 16, 20 * 16, 20 * 16, 1.5, 0.5),\r\n            fireBomb(5 * 16, 5 * 16, 22 * 16, 22 * 16, 1.65, 0.5),\r\n            fireBomb(4 * 16, 4 * 16, 24 * 16, 24 * 16, 1.8, 0.5),\r\n            fireBomb(3 * 16, 3 * 16, 26 * 16, 26 * 16, 1.95, 0.5),\r\n            fireBomb(2 * 16, 2 * 16, 28 * 16, 28 * 16, 2.1, 0.5),\r\n            fireBomb(1 * 16, 1 * 16, 30 * 16, 30 * 16, 2.25, 0.5),\r\n            fireBomb(0, 0, 32 * 16, 32 * 16, 2.4, 0.5)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createActivePoint(oneHalf - 8, oneHalf - 8, 0),\r\n            fireMovingHorizontalLaser(0, oneEigth, 1.4, 0, 10),\r\n            fireMovingVerticalLaser(sevenEigths, oneEigth, -1.4, 0, 10)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        console.log(`Level ${currentLevel} completed.`);\r\n        increaseLevel();\r\n    } catch (error) {\r\n        console.log(`Level ${currentLevel} restarted.`);\r\n    };\r\n};\r\n\r\nasync function levelSeven() {\r\n    try {\r\n        initializeLevel(oneHalf + blockieAdjustment, oneHalf + blockieAdjustment);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, fullScreen, 14 * 16),\r\n            createWall(0, 14 * 16, 14 * 16, oneEigth),\r\n            createWall(18 * 16, 14 * 16, 18 * 16, oneEigth),\r\n            createWall(0, 18 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 20 * 16, oneFourth, oneEigth),\r\n            createWall(12 * 16, 20 * 16, 20 * 16, 4 * 16),\r\n            createWall(0, 24 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 26 * 16, 2 * 16, oneEigth),\r\n            createWall(6 * 16, 26 * 16, 26 * 16, oneEigth),\r\n            createWall(0, 30 * 16, fullScreen, 2 * 16),\r\n            createActivePoint(oneEigth - 8, sevenEigths - 8, 0)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, threeFourths, oneFourth),\r\n            createWall(0, oneFourth, oneHalf, oneFourth),\r\n            createWall(threeFourths, oneFourth, oneFourth, oneFourth),\r\n            createWall(0, oneHalf, oneFourth, oneFourth),\r\n            createWall(oneHalf, oneHalf, oneHalf, oneFourth),\r\n            createWall(oneFourth, threeFourths, threeFourths, oneFourth),\r\n            createActivePoint(sevenEigths - 8, oneEigth - 8, 0),\r\n            loopFireBombs(threeFourths, 0, oneFourth, oneFourth, 0, 0.5, 0.5),\r\n            loopFireBombs(oneHalf, oneFourth, oneFourth, oneFourth, 1, 0.5, 0.5),\r\n            loopFireBombs(oneFourth, oneHalf, oneFourth, oneFourth, 0, 0.5, 0.5),\r\n            loopFireBombs(0, threeFourths, oneFourth, oneFourth, 1, 0.5, 0.5),\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, threeFourths, oneEigth),\r\n            createWall(0, oneEigth, fiveEigths, oneEigth),\r\n            createWall(0, oneFourth, oneHalf, oneEigth),\r\n            createWall(sevenEigths, oneFourth, oneEigth, oneEigth),\r\n            createWall(0, threeEigths, threeEigths, oneEigth),\r\n            createWall(threeFourths, threeEigths, oneFourth, oneEigth),\r\n            createWall(threeFourths, oneHalf, oneFourth, oneEigth),\r\n            createWall(0, oneHalf, threeEigths, oneEigth),\r\n            createWall(sevenEigths, fiveEigths, oneEigth, oneEigth),\r\n            createWall(0, fiveEigths, oneHalf, oneEigth),\r\n            createWall(0, threeFourths, fiveEigths, oneEigth),\r\n            createWall(0, sevenEigths, threeFourths, oneEigth),\r\n            createActivePoint(sevenEigths - 8, sevenEigths - 8, 0),\r\n            createPassivePoint(pointFour - 8, oneHalf - 8, 0, 20),\r\n            loopFireBombs(threeEigths, threeEigths, oneEigth, oneFourth, 0.7, 2.4, 0.7),\r\n            loopFireBombs(oneHalf, oneFourth, oneEigth, oneHalf, 0.7, 2.4, 0.7),\r\n            loopFireBombs(fiveEigths, oneEigth, oneEigth, threeFourths, 0.7, 2.4, 0.7)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        moveBlockie(sevenEigths + blockieAdjustment, sevenEigths + blockieAdjustment);\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, fullScreen, 2 * 16),\r\n            createWall(0, 6 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 12 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 18 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 24 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 30 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 0, 2 * 16, fullScreen),\r\n            createWall(6 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(12 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(18 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(24 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(30 * 16, 0, 2 * 16, fullScreen),\r\n            createActivePoint(oneEigth - 8, oneEigth - 8),\r\n            createPassivePoint(oneEigth - 8, oneHalf - 8, 5, 7),\r\n\r\n            loopFireBombs(2 * 16, 2 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n            loopFireBombs(8 * 16, 2 * 16, 4 * 16, 4 * 16, 0, 1, 0.5),\r\n            loopFireBombs(14 * 16, 2 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n            loopFireBombs(20 * 16, 2 * 16, 4 * 16, 4 * 16, 0, 1, 0.5),\r\n            loopFireBombs(26 * 16, 2 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n\r\n            loopFireBombs(2 * 16, 8 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n            loopFireBombs(8 * 16, 8 * 16, 4 * 16, 4 * 16, 0, 1, 0.5),\r\n            loopFireBombs(14 * 16, 8 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n            loopFireBombs(20 * 16, 8 * 16, 4 * 16, 4 * 16, 0, 1, 0.5),\r\n            loopFireBombs(26 * 16, 8 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n\r\n            loopFireBombs(2 * 16, 14 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n            loopFireBombs(8 * 16, 14 * 16, 4 * 16, 4 * 16, 0, 1, 0.5),\r\n            loopFireBombs(14 * 16, 14 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n            loopFireBombs(20 * 16, 14 * 16, 4 * 16, 4 * 16, 0, 1, 0.5),\r\n            loopFireBombs(26 * 16, 14 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n\r\n            loopFireBombs(2 * 16, 20 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n            loopFireBombs(8 * 16, 20 * 16, 4 * 16, 4 * 16, 0, 1, 0.5),\r\n            loopFireBombs(14 * 16, 20 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n            loopFireBombs(20 * 16, 20 * 16, 4 * 16, 4 * 16, 0, 1, 0.5),\r\n            loopFireBombs(26 * 16, 20 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n\r\n            loopFireBombs(2 * 16, 26 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n            loopFireBombs(8 * 16, 26 * 16, 4 * 16, 4 * 16, 0, 1, 0.5),\r\n            loopFireBombs(14 * 16, 26 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n            loopFireBombs(20 * 16, 26 * 16, 4 * 16, 4 * 16, 0, 1, 0.5),\r\n            loopFireBombs(26 * 16, 26 * 16, 4 * 16, 4 * 16, 1.25, 1, 0.5),\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, fullScreen, 2 * 16),\r\n            createWall(0, 6 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 12 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 18 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 24 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 30 * 16, fullScreen, 2 * 16),\r\n            createWall(0, 0, 2 * 16, fullScreen),\r\n            createWall(6 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(12 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(18 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(24 * 16, 0, 2 * 16, fullScreen),\r\n            createWall(30 * 16, 0, 2 * 16, fullScreen),\r\n            createActivePoint(oneEigth - 8, sevenEigths - 8, 0),\r\n\r\n            loopFireBombs(8 * 16, 2 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n            loopFireBombs(14 * 16, 2 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n            loopFireBombs(20 * 16, 2 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n\r\n            loopFireBombs(2 * 16, 8 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n            loopFireBombs(8 * 16, 8 * 16, 4 * 16, 4 * 16, 1, 0.5, 0.5),\r\n            loopFireBombs(14 * 16, 8 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n            loopFireBombs(20 * 16, 8 * 16, 4 * 16, 4 * 16, 1, 0.5, 0.5),\r\n            loopFireBombs(26 * 16, 8 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n\r\n            loopFireBombs(2 * 16, 14 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n            loopFireBombs(8 * 16, 14 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n            loopFireBombs(20 * 16, 14 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n            loopFireBombs(26 * 16, 14 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n\r\n            loopFireBombs(2 * 16, 20 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n            loopFireBombs(8 * 16, 20 * 16, 4 * 16, 4 * 16, 1, 0.5, 0.5),\r\n            loopFireBombs(14 * 16, 20 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n            loopFireBombs(20 * 16, 20 * 16, 4 * 16, 4 * 16, 1, 0.5, 0.5),\r\n            loopFireBombs(26 * 16, 20 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n\r\n            loopFireBombs(8 * 16, 26 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n            loopFireBombs(14 * 16, 26 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5),\r\n            loopFireBombs(20 * 16, 26 * 16, 4 * 16, 4 * 16, 0, 0.5, 0.5)\r\n        ]);\r\n\r\n        console.log(`Level ${currentLevel} completed.`);\r\n        increaseLevel();\r\n    } catch (error) {\r\n        console.log(`Level ${currentLevel} restarted.`);\r\n    };\r\n};\r\n\r\nasync function levelEight() {\r\n    try {\r\n\r\n    } catch (error) {\r\n        console.log(`Level ${currentLevel} restarted.`);\r\n    };\r\n};\r\n\r\nasync function levelNine() {\r\n    try {\r\n\r\n    } catch (error) {\r\n        console.log(`Level ${currentLevel} restarted.`);\r\n    };\r\n};\r\n\r\nasync function levelTen() {\r\n    try {\r\n\r\n    } catch (error) {\r\n        console.log(`Level ${currentLevel} restarted.`);\r\n    };\r\n};\r\n\r\nasync function levelEleven() {\r\n    try {\r\n\r\n    } catch (error) {\r\n        console.log(`Level ${currentLevel} restarted.`);\r\n    };\r\n};\r\n\r\nasync function levelTwelve() {\r\n    try {\r\n\r\n    } catch (error) {\r\n        console.log(`Level ${currentLevel} restarted.`);\r\n    };\r\n};\r\n\r\n//Resets the initial values for the beginning of every level.\r\nfunction initializeLevel(blockieX, blockieY) {\r\n    gameState = \"playing\";\r\n\r\n    blockie.x = blockieX;\r\n    blockie.y = blockieY;\r\n\r\n    recoveringFromDash = false;\r\n    allowDashAgain = true;\r\n};\r\n\r\n//Clears all arrays, clears the canvas, displays the game over screen, and waits to restart the current level.\r\nasync function restartLevel(reason) {\r\n    //Stops all currently-running timeouts so that they stop hurting performance and don't execute after reseting.\r\n    for (let i = 0; i < currentTimeouts.length; i++) {\r\n        clearTimeout(currentTimeouts[i]);\r\n    };\r\n\r\n    currentTimeouts.splice(0);\r\n\r\n    //Stops all currently-running timeouts so that they stop hurting performance and don't execute after reseting.\r\n    for (let i = 0; i < currentIntervals.length; i++) {\r\n        clearInterval(currentIntervals[i]);\r\n    };\r\n\r\n    currentIntervals.splice(0);\r\n\r\n    updateAllObjects();\r\n    for (let i = 0; i < allObjects.length; i++) {\r\n        rejectInstances(allObjects[i]);\r\n    };\r\n\r\n    destroyCountdownTimer();\r\n\r\n    //Removes all points collected in the level.\r\n    currentLevelPoints = 0;\r\n\r\n    //Switches how the game resets based on how it triggered.\r\n    if (reason === \"died\") {\r\n        gameState = \"animatingBlockieDestruction\";\r\n\r\n        //Animates Blockie's destruction.\r\n        blockie.state = \"destructing\";\r\n        blockie.sx = 0;\r\n\r\n        await displayMessage(\"Determination is your only asset.\");\r\n    } else if (reason === \"keyPressed\") {\r\n        blockie.state = \"playing\";\r\n        controlLevel();\r\n    } else if (reason === \"countdownTimer\") {\r\n        gameState = \"playingCutscene\";\r\n        await playCutscene(spCountdownDestructionScene, 0.17);\r\n        await displayMessage(\"You've failed another world.\");\r\n    };\r\n};\r\n\r\nasync function increaseLevel() {\r\n    gameState = \"finishingLevel\";\r\n\r\n    blockie.angleMovingDegrees = -180;\r\n\r\n\r\n    //Points are only made permanent once a level is completed.\r\n    updateLevelPoints(currentLevel);\r\n    currentLevelPoints = 0;\r\n    calculateTotalPoints();\r\n\r\n    currentLevel++;\r\n\r\n    //Waits for the PartyHat to descend on to Blockie's head.\r\n    await new Promise((resolve, reject) => {\r\n        let partyHatInstance = new PartyHat();\r\n        partyHats.push(partyHatInstance);\r\n\r\n        function animateFinishedLevelHat() {\r\n            partyHatInstance.y += Math.min(2, (blockie.y - partyHatInstance.y - partyHatInstance.height));\r\n\r\n            if (partyHatInstance.y + partyHatInstance.height !== blockie.y) {\r\n                //Continuously recalls the function until the PartyHat reaches Blockie's head.\r\n                window.requestAnimationFrame(animateFinishedLevelHat);\r\n            } else {\r\n                resolve(\"resolved\");\r\n            };\r\n        };\r\n\r\n        window.requestAnimationFrame(animateFinishedLevelHat);\r\n    });\r\n\r\n    await displayMessage(\"You haven't escaped yet.\")\r\n};\r\n\r\nfunction controlLevel() {\r\n    switch (currentLevel) {\r\n        case 1:\r\n            levelOne();\r\n            break;\r\n        case 2:\r\n            levelTwo();\r\n            break;\r\n        case 3:\r\n            levelThree();\r\n            break;\r\n        case 4:\r\n            levelFour();\r\n            break;\r\n        case 5:\r\n            levelFive();\r\n            break;\r\n        case 6:\r\n            levelSix();\r\n            break;\r\n        case 7:\r\n            levelSeven();\r\n            break;\r\n        case 8:\r\n            levelEight();\r\n            break;\r\n        case 9:\r\n            levelNine();\r\n            break;\r\n        case 10:\r\n            levelTen();\r\n            break;\r\n        case 11:\r\n            levelEleven();\r\n            break;\r\n        case 12:\r\n            levelTwelve();\r\n            break;\r\n    };\r\n};\r\n\r\n//Level-Handling Helper Functions\r\n\r\n//Resolves all promises and removes all instances from their object arrays.\r\nfunction resolveInstances(objectArray) {\r\n    //The for loop's length is determined before it starts to avoid missing the first element.\r\n    let initialArrayLength = objectArray.length;\r\n\r\n    for (let i = initialArrayLength - 1; i >= 0; i--) {\r\n        //Rejects the instances' Promises and timeouts and destroys the instances.\r\n        let instance = objectArray[i];\r\n        instance.externalResolve();\r\n        clearTimeout(instance.timeout);\r\n        objectArray.splice(i, 1);\r\n    };\r\n};\r\n\r\n//Rejects all promises and removes all instances from their object arrays.\r\nfunction rejectInstances(objectArray) {\r\n    //The for loop's length is determined before it starts to avoid missing the first element.\r\n    let initialArrayLength = objectArray.length;\r\n\r\n    for (let i = initialArrayLength - 1; i >= 0; i--) {\r\n        //Rejects the instances' Promises and timeouts and destroys the instances.\r\n        let instance = objectArray[i];\r\n        instance.externalReject();\r\n        clearTimeout(instance.timeout);\r\n        objectArray.splice(i, 1);\r\n    };\r\n};\r\n\r\n//Adds a currently-running timeout to an array so that it can be easily deactivated when the game restarts.\r\nfunction addCurrentTimeout(timeout) {\r\n    currentTimeouts.push(timeout);\r\n};\r\n\r\n//Removes a timeout from the array of currently-running timeouts.\r\nfunction removeCurrentTimeout(timeout) {\r\n    let currentTimeoutIndex = currentTimeouts.indexOf(timeout);\r\n    currentTimeouts.splice(currentTimeoutIndex, 1);\r\n};\r\n\r\n//Adds a currently-running interval to an array so that it can be easily deactivated when the game restarts.\r\nfunction addCurrentInterval(interval) {\r\n    currentIntervals.push(interval);\r\n};\r\n\r\n//Removes a interval from the array of currently-running intervals and clears it.\r\nfunction removeCurrentInterval(interval) {\r\n    clearInterval(interval);\r\n    let currentIntervalIndex = currentIntervals.indexOf(interval);\r\n    currentIntervals.splice(currentIntervalIndex, 1);\r\n};\r\n\r\n//Shows a message and awaits a player input to continue the game.\r\nasync function displayMessage(message) {\r\n    //Forces the player to read the message for 1 second before they can continue the game.\r\n    await new Promise((resolve, reject) => {\r\n        let drawGameOverScreen = setTimeout(() => {\r\n            //Placed here to draw Blockie with a PartyHat during increaseLevel().\r\n            partyHats.splice(0);\r\n\r\n            //Draws the game over screen.\r\n            document.getElementById(\"messageDisplayer\").innerHTML = message;\r\n            gameState = \"displayingMessage\";\r\n            resolve(\"resolved\");\r\n        }, 1000);\r\n    });\r\n\r\n    return await new Promise((resolve, reject) => {\r\n        //Restarts the game once acceptable keys are pressed.\r\n        function resumePlaying() {\r\n            if (keysDown[16] || keysDown[32]) {\r\n                //Prevents dashing immediatley after restarting the game.\r\n                delete keysDown[16];\r\n                delete keysDown[32];\r\n\r\n                document.getElementById(\"messageDisplayer\").innerHTML = \"\";\r\n\r\n                gameState = \"playing\";\r\n                blockie.state = \"playing\";\r\n\r\n                controlLevel();\r\n\r\n                resolve(\"resolved\");\r\n            } else {\r\n                //Continuously recalls the function until an acceptable key is pressed.\r\n                window.requestAnimationFrame(resumePlaying);\r\n            };\r\n        };\r\n\r\n        window.requestAnimationFrame(resumePlaying);\r\n    });\r\n};\r\n\r\n//Blockie Functions \r\n\r\nfunction initializeDash() {\r\n    blockie.state = \"recoveringFromDash\";\r\n    blockie.speed = dashDistance;\r\n    recoveringFromDash = true;\r\n    allowDashAgain = false;\r\n\r\n    let endDashRecovery = setTimeout(() => {\r\n        recoveringFromDash = false;\r\n        blockie.state = \"playing\";\r\n        removeCurrentTimeout(endDashRecovery);\r\n    }, dashRecoverySeconds * 1000);\r\n    addCurrentTimeout(endDashRecovery);\r\n\r\n    //Sets an interval to the length of the dash recovery which counts down the semi-accurate remaining length of the timeout.\r\n    //This is used in drawing the remaining seconds meter to show the player how much more recovery time that they need to wait.\r\n    blockie.remainingDashSeconds = allowDashAgainSeconds;\r\n    let remainingDashSecondsInterval = setInterval(() => {\r\n        blockie.remainingDashSeconds -= 0.004;\r\n    }, 1);\r\n    addCurrentInterval(remainingDashSecondsInterval);\r\n\r\n    let resetAllowDashAgain = setTimeout(() => {\r\n        allowDashAgain = true;\r\n        removeCurrentInterval(remainingDashSecondsInterval);\r\n        removeCurrentTimeout(resetAllowDashAgain);\r\n    }, allowDashAgainSeconds * 1000);\r\n    addCurrentTimeout(resetAllowDashAgain);\r\n};\r\n\r\n//Allows for dashing again.\r\nfunction resetBlockieState() {\r\n    blockie.state = \"playing\";\r\n    recoveringFromDash = false;\r\n    allowDashAgain = true;\r\n\r\n    //Prevents Blockie from dashing again based off of one button press.\r\n    delete keysDown[16];\r\n    delete keysDown[32];\r\n    delete keysDown[37];\r\n    delete keysDown[38];\r\n    delete keysDown[39];\r\n    delete keysDown[40];\r\n};\r\n\r\n//Adjusts Blockie's location to prevent wall clipping in screen transitions.\r\nfunction moveBlockie(x, y) {\r\n    blockie.x = x;\r\n    blockie.y = y;\r\n};\r\n\r\n//Instance Functions\r\n\r\n//Creates a WaitingTimeout instance, and awaits for its resolution to then create the root collision instance. This is meant to allow\r\n//for instances to spawn at different times concurrently (using Promise.all) or spawn a bit after another's destruction.\r\nfunction setWaitingTimeout(waitingSeconds) {\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new WaitingTimeout();\r\n    waitingTimeouts.push(instance);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        instance.timeout = setTimeout(() => {\r\n            //Removes the instance from its object array (so it isn't drawn or colliding) and resolves it once it is \"destroyed\".\r\n            let instanceIndex = waitingTimeouts.indexOf(instance);\r\n            waitingTimeouts.splice(instanceIndex, 1);\r\n            resolve(\"resolved\");\r\n        }, waitingSeconds * 1000);\r\n    });\r\n};\r\n\r\n//Sets the timeouts that cause the collision instance to \"blink\" 2 times before firing. All warning timeouts are set at the same length \r\n//to allow the player to predict collisions.\r\nasync function setWarningTimeouts(instanceAffecting) {\r\n    //Each timeout sets the affected instance's timeout and reject function equal to a new \"blinking\" timeout for a bit.\r\n    let warningSeconds = 1;\r\n\r\n    await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instanceAffecting.externalResolve = resolve;\r\n        instanceAffecting.externalReject = reject;\r\n\r\n        instanceAffecting.timeout = setTimeout(() => {\r\n            instanceAffecting.visible = false;\r\n\r\n            resolve(\"resolved\");\r\n        }, warningSeconds * 0.25 * 1000);\r\n    });\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instanceAffecting.externalResolve = resolve;\r\n        instanceAffecting.externalReject = reject;\r\n\r\n        instanceAffecting.timeout = setTimeout(() => {\r\n            instanceAffecting.visible = true;\r\n\r\n            resolve(\"resolved\");\r\n        }, warningSeconds * 0.25 * 1000);\r\n    });\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instanceAffecting.externalResolve = resolve;\r\n        instanceAffecting.externalReject = reject;\r\n\r\n        instanceAffecting.timeout = setTimeout(() => {\r\n            instanceAffecting.visible = false;\r\n\r\n            resolve(\"resolved\");\r\n        }, warningSeconds * 0.25 * 1000);\r\n    });\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instanceAffecting.externalResolve = resolve;\r\n        instanceAffecting.externalReject = reject;\r\n\r\n        instanceAffecting.timeout = setTimeout(() => {\r\n            //Makes the affected instance visible and collidable.\r\n            instanceAffecting.state = \"firing\";\r\n            instanceAffecting.visible = true;\r\n            resolve(\"resolved\");\r\n        }, warningSeconds * 0.25 * 1000);\r\n    });\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function createPassivePoint(x, y, waitingSeconds, firingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new PassivePoint(x, y, firingSeconds);\r\n    passivePoints.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        //Sets an interval to the length of the firingSeconds which counts down the semi-accurate remaining length of the timeout.\r\n        //This is used in drawing the remaining seconds meter to show the player how much longer the point will exist.\r\n        instance.remainingFiringSeconds = firingSeconds;\r\n        let remainingFiringSecondsInterval = setInterval(() => {\r\n            instance.remainingFiringSeconds -= 0.004;\r\n        }, 1);\r\n        addCurrentInterval(remainingFiringSecondsInterval);\r\n\r\n        instance.timeout = setTimeout(() => {\r\n            removeCurrentInterval(remainingFiringSecondsInterval);\r\n\r\n            //Removes the instance from its object array (so it isn't drawn or colliding) and resolves it once it is \"destroyed\".\r\n            let instanceIndex = passivePoints.indexOf(instance);\r\n            passivePoints.splice(instanceIndex, 1);\r\n            resolve(\"resolved\");\r\n        }, firingSeconds * 1000);\r\n    });\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function createActivePoint(x, y, waitingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new ActivePoint(x, y);\r\n    activePoints.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n    });\r\n};\r\n\r\n//Continuously recreates the same instance until the activePoint is touched.\r\nasync function loopFireMovingHorizontalLasers(y, height, speed, initialWaitingSeconds, waitingSeconds, firingSeconds) {\r\n    await setWaitingTimeout(initialWaitingSeconds);\r\n\r\n    //Creates a new instance after each previous one has resolved.\r\n    while (!cancelAwaitChain) {\r\n        await fireMovingHorizontalLaser(y, height, speed, waitingSeconds, firingSeconds);\r\n    };\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    return;\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function fireMovingHorizontalLaser(y, height, speed, waitingSeconds, firingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new MovingHorizontalLaser(y, height, speed);\r\n    movingHorizontalLasers.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        instance.timeout = setTimeout(() => {\r\n            //Removes the instance from its object array (so it isn't drawn or colliding) and resolves it once it is \"destroyed\".\r\n            let instanceIndex = movingHorizontalLasers.indexOf(instance);\r\n            movingHorizontalLasers.splice(instanceIndex, 1);\r\n            resolve(\"resolved\");\r\n        }, firingSeconds * 1000);\r\n    });\r\n};\r\n\r\n//Continuously recreates the same instance until the activePoint is touched.\r\nasync function loopFireMovingVerticalLasers(x, width, speed, initialWaitingSeconds, waitingSeconds, firingSeconds) {\r\n    await setWaitingTimeout(initialWaitingSeconds);\r\n\r\n    //Creates a new instance after each previous one has resolved.\r\n    while (!cancelAwaitChain) {\r\n        await fireMovingVerticalLaser(x, width, speed, waitingSeconds, firingSeconds);\r\n    };\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    return;\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function fireMovingVerticalLaser(x, width, speed, waitingSeconds, firingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new MovingVerticalLaser(x, width, speed);\r\n    movingVerticalLasers.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        instance.timeout = setTimeout(() => {\r\n            //Removes the instance from its object array (so it isn't drawn or colliding) and resolves it once it is \"destroyed\".\r\n            let instanceIndex = movingVerticalLasers.indexOf(instance);\r\n            movingVerticalLasers.splice(instanceIndex, 1);\r\n            resolve(\"resolved\");\r\n        }, firingSeconds * 1000);\r\n    });\r\n};\r\n\r\n//Continuously recreates the same instance until the activePoint is touched.\r\nasync function loopFireBombs(x, y, width, height, initialWaitingSeconds, waitingSeconds, firingSeconds) {\r\n    await setWaitingTimeout(initialWaitingSeconds);\r\n\r\n    //Creates a new instance after each previous one has resolved.\r\n    while (!cancelAwaitChain) {\r\n        await fireBomb(x, y, width, height, waitingSeconds, firingSeconds);\r\n    };\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    return;\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function fireBomb(x, y, width, height, waitingSeconds, firingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new Bomb(x, y, width, height);\r\n    bombs.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        instance.timeout = setTimeout(() => {\r\n            //Removes the instance from its object array (so it isn't drawn or colliding) and resolves it once it is \"destroyed\".\r\n            let instanceIndex = bombs.indexOf(instance);\r\n            bombs.splice(instanceIndex, 1);\r\n            resolve(\"resolved\");\r\n        }, firingSeconds * 1000);\r\n    });\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function createWall(x, y, width, height) {\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new Wall(x, y, width, height);\r\n    walls.push(instance);\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n    });\r\n};\r\n\r\n//Instance Helper Functions\r\n\r\nfunction updateAllObjects() {\r\n    allObjects = [\r\n        waitingTimeouts,\r\n        passivePoints,\r\n        activePoints,\r\n        movingHorizontalLasers,\r\n        movingVerticalLasers,\r\n        bombs,\r\n        walls\r\n    ];\r\n};\r\n\r\nfunction updateAllInteractiveObjects() {\r\n    allObjects = [\r\n        waitingTimeouts,\r\n        passivePoints,\r\n        activePoints,\r\n        movingHorizontalLasers,\r\n        movingVerticalLasers,\r\n        bombs\r\n    ];\r\n};\r\n\r\n//Moves lasers by adding speed to their location every step.\r\nfunction moveMovingHorizontalLasers() {\r\n    for (let i = 0; i < movingHorizontalLasers.length; i++) {\r\n        if (movingHorizontalLasers[i].state !== \"warning\") {\r\n            movingHorizontalLasers[i].y += movingHorizontalLasers[i].speed;\r\n        };\r\n    };\r\n};\r\n\r\n//Moves lasers by adding speed to their location every step.\r\nfunction moveMovingVerticalLasers() {\r\n    for (let i = 0; i < movingVerticalLasers.length; i++) {\r\n        if (movingVerticalLasers[i].state !== \"warning\") {\r\n            movingVerticalLasers[i].x += movingVerticalLasers[i].speed;\r\n        };\r\n    };\r\n};\r\n\r\n//Drawing Functions\r\n\r\nfunction animateBlockie() {\r\n    //Draws the remaining seconds meter for when Blockie can dash again.\r\n    if (!allowDashAgain && gameState === \"playing\") {\r\n        context.fillStyle = \"#378CFF\";\r\n        context.fillRect(blockie.x, blockie.y - 8, blockie.width * (blockie.remainingDashSeconds / allowDashAgainSeconds), 4);\r\n    };\r\n\r\n    //Draws Blockie himself.\r\n    if (blockie.state === \"playing\") {\r\n        blockie.sprite = spBlockiePlaying;\r\n        //sx is the location on the blockie.png sprite map. Here it determines the sprite's direction facing. It starts at the \r\n        //idle image, then goes to the top-left, and then continues in a clockwise direction.\r\n        blockie.sx = blockie.width * (Math.round(blockie.angleMovingDegrees / 45) + 4);\r\n    } else if (blockie.state === \"recoveringFromDash\") {\r\n        blockie.sprite = spBlockieRecoveringFromDash;\r\n        blockie.sx = 0;\r\n    } else if (blockie.state === \"destructing\") {\r\n        blockie.sprite = spBlockieDestructing;\r\n\r\n        let endAnimateBlockieDestructing = setTimeout(() => {\r\n            clearInterval(animateBlockieDestructing);\r\n            removeCurrentTimeout(animateBlockieDestructing);\r\n            removeCurrentTimeout(endAnimateBlockieDestructing);\r\n        }, 1.5 * 1000);\r\n        addCurrentTimeout(endAnimateBlockieDestructing);\r\n\r\n        let animateBlockieDestructing = setInterval(() => {\r\n            blockie.sx += blockie.width;\r\n        }, 0.5 * 1000);\r\n        addCurrentTimeout(animateBlockieDestructing);\r\n    };\r\n};\r\n\r\nfunction drawBlockie() {\r\n    context.drawImage(blockie.sprite, blockie.sx, 0, blockie.width, blockie.height, blockie.x, blockie.y, blockie.width, blockie.height);\r\n};\r\n\r\nfunction drawPassivePoints() {\r\n    for (let i = 0; i < passivePoints.length; i++) {\r\n        let currentInstance = passivePoints[i];\r\n\r\n        //Draws the remaining seconds meter for when the point will disappear.\r\n        context.fillStyle = \"#E6FF16\";\r\n        context.fillRect(currentInstance.x, currentInstance.y - 8, currentInstance.width * (currentInstance.remainingFiringSeconds / currentInstance.totalFiringSeconds), 4);\r\n\r\n        //Draws the point itself.\r\n        if (currentInstance.visible) {\r\n            //Changes the sprite depending on the state of the instance.\r\n            if (currentInstance.state == \"warning\") {\r\n                context.strokeStyle = \"#E6FF16\";\r\n                context.strokeRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            } else if (currentInstance.state == \"firing\") {\r\n                context.fillStyle = \"#E6FF16\";\r\n                context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nfunction drawActivePoints() {\r\n    for (let i = 0; i < activePoints.length; i++) {\r\n        let currentInstance = activePoints[i];\r\n\r\n        //Draws the point itself.\r\n        if (currentInstance.visible) {\r\n            //Changes the sprite depending on the state of the instance.\r\n            if (currentInstance.state == \"warning\") {\r\n                context.strokeStyle = \"#FF9012\";\r\n                context.strokeRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            } else if (currentInstance.state == \"firing\") {\r\n                context.fillStyle = \"#FF9012\";\r\n                context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nfunction drawMovingHorizontalLasers() {\r\n    for (let i = 0; i < movingHorizontalLasers.length; i++) {\r\n        let currentInstance = movingHorizontalLasers[i];\r\n        if (currentInstance.visible) {\r\n            //Changes the sprite depending on the state of the instance.\r\n            if (currentInstance.state == \"warning\") {\r\n                context.fillStyle = \"#FF51EF\";\r\n\r\n                //Warning triangles are complex because they must face the direction of the laser's speed.\r\n                //Left warning triangle.\r\n                context.beginPath();\r\n                context.moveTo(currentInstance.x + 16, currentInstance.y + currentInstance.height * Math.abs(Math.min(0, Math.sign(currentInstance.speed))));\r\n                context.lineTo(currentInstance.x + 24, currentInstance.y + currentInstance.height * Math.max(0, Math.sign(currentInstance.speed)));\r\n                context.lineTo(currentInstance.x + 32, currentInstance.y + currentInstance.height * Math.abs(Math.min(0, Math.sign(currentInstance.speed))));\r\n                context.fill();\r\n\r\n                //Right warning triangle.\r\n                context.beginPath();\r\n                context.moveTo(currentInstance.width - 16, currentInstance.y + currentInstance.height * Math.abs(Math.min(0, Math.sign(currentInstance.speed))));\r\n                context.lineTo(currentInstance.width - 24, currentInstance.y + currentInstance.height * Math.max(0, Math.sign(currentInstance.speed)));\r\n                context.lineTo(currentInstance.width - 32, currentInstance.y + currentInstance.height * Math.abs(Math.min(0, Math.sign(currentInstance.speed))));\r\n                context.fill();\r\n            } else if (currentInstance.state == \"firing\") {\r\n                context.fillStyle = \"#FF51EF\";\r\n                context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nfunction drawMovingVerticalLasers() {\r\n    for (let i = 0; i < movingVerticalLasers.length; i++) {\r\n        let currentInstance = movingVerticalLasers[i];\r\n        if (currentInstance.visible) {\r\n            //Changes the sprite depending on the state of the instance.\r\n            if (currentInstance.state == \"warning\") {\r\n                context.fillStyle = \"#FF51EF\";\r\n\r\n                //Warning triangles are complex because they must face the direction of the laser's speed.\r\n                //Top warning triangle.\r\n                context.beginPath();\r\n                context.moveTo(currentInstance.x + currentInstance.width * Math.abs(Math.min(0, Math.sign(currentInstance.speed))), currentInstance.y + 16);\r\n                context.lineTo(currentInstance.x + currentInstance.width * Math.max(0, Math.sign(currentInstance.speed)), currentInstance.y + 24);\r\n                context.lineTo(currentInstance.x + currentInstance.width * Math.abs(Math.min(0, Math.sign(currentInstance.speed))), currentInstance.y + 32);\r\n                context.fill();\r\n\r\n                //Bottom warning triangle.\r\n                context.beginPath();\r\n                context.moveTo(currentInstance.x + currentInstance.width * Math.abs(Math.min(0, Math.sign(currentInstance.speed))), currentInstance.height - 16);\r\n                context.lineTo(currentInstance.x + currentInstance.width * Math.max(0, Math.sign(currentInstance.speed)), currentInstance.height - 24);\r\n                context.lineTo(currentInstance.x + currentInstance.width * Math.abs(Math.min(0, Math.sign(currentInstance.speed))), currentInstance.height - 32);\r\n                context.fill();\r\n            } else if (currentInstance.state == \"firing\") {\r\n                context.fillStyle = \"#FF51EF\";\r\n                context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nfunction drawBombs() {\r\n    for (let i = 0; i < bombs.length; i++) {\r\n        let currentInstance = bombs[i];\r\n        if (currentInstance.visible) {\r\n            //Changes the sprite depending on the state of the instance.\r\n            if (currentInstance.state == \"warning\") {\r\n                context.strokeStyle = \"#FF51EF\";\r\n                context.strokeRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            } else if (currentInstance.state == \"firing\") {\r\n                context.fillStyle = \"#FF51EF\";\r\n                context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nfunction drawWalls() {\r\n    for (let i = 0; i < walls.length; i++) {\r\n        let currentInstance = walls[i];\r\n        context.fillStyle = \"#741EFF\";\r\n        context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n    };\r\n};\r\n\r\nfunction drawPartyHats() {\r\n    for (let i = 0; i < partyHats.length; i++) {\r\n        let currentInstance = partyHats[i];\r\n\r\n        context.fillStyle = \"#378CFF\";\r\n\r\n        context.beginPath();\r\n        context.moveTo(currentInstance.x, currentInstance.y + currentInstance.height);\r\n        context.lineTo(currentInstance.x + currentInstance.width / 2, currentInstance.y);\r\n        context.lineTo(currentInstance.x + currentInstance.width, currentInstance.y + currentInstance.height);\r\n        context.fill();\r\n    };\r\n};\r\n\r\n//Collision Functions\r\n\r\nfunction checkCollisionsWithClass(classArray) {\r\n    for (let i = 0; i < classArray.length; i++) {\r\n        checkInstancesColliding(blockie, classArray[i]);\r\n    };\r\n};\r\n\r\nfunction checkTestCollisionsWithClass(instanceOneX, instanceOneY, classArray) {\r\n    preventingMovement = false;\r\n\r\n    for (let i = 0; i < classArray.length; i++) {\r\n        checkTestInstancesColliding(blockie, instanceOneX, instanceOneY, classArray[i]);\r\n    };\r\n};\r\n\r\n//Determines if two instances are \"colliding\". They cannot be colliding if one is in the warning state.\r\nfunction checkInstancesColliding(instanceOne, instanceTwo) {\r\n    let xColliding = false;\r\n    let yColliding = false;\r\n\r\n    if ((instanceTwo.x <= instanceOne.x) && (instanceOne.x <= instanceTwo.x + instanceTwo.width) && (instanceTwo.state === \"firing\")) {\r\n        xColliding = true;\r\n    } else if ((instanceOne.x <= instanceTwo.x) && (instanceTwo.x <= instanceOne.x + instanceOne.width) && (instanceTwo.state === \"firing\")) {\r\n        xColliding = true;\r\n    };\r\n\r\n    if ((instanceTwo.y <= instanceOne.y) && (instanceOne.y <= instanceTwo.y + instanceTwo.height) && (instanceTwo.state === \"firing\")) {\r\n        yColliding = true;\r\n    } else if ((instanceOne.y <= instanceTwo.y) && (instanceTwo.y <= instanceOne.y + instanceOne.height) && (instanceTwo.state === \"firing\")) {\r\n        yColliding = true;\r\n    };\r\n\r\n    //The instances must have an overlapping area (x and y components) for there to be a collision.\r\n    if (xColliding && yColliding) {\r\n        collidingInstances.push(instanceTwo);\r\n    };\r\n};\r\n\r\n//Determines if two instances are \"colliding\" (with Blockie's theoretical test locations). They cannot be colliding if one is in \r\n//the warning state.\r\nfunction checkTestInstancesColliding(instanceOne, instanceOneX, instanceOneY, instanceTwo) {\r\n    let xColliding = false;\r\n    let yColliding = false;\r\n\r\n    if ((instanceTwo.x <= instanceOneX) && (instanceOneX <= instanceTwo.x + instanceTwo.width)) {\r\n        xColliding = true;\r\n    } else if ((instanceOneX <= instanceTwo.x) && (instanceTwo.x <= instanceOneX + instanceOne.width)) {\r\n        xColliding = true;\r\n    };\r\n\r\n    if ((instanceTwo.y <= instanceOneY) && (instanceOneY <= instanceTwo.y + instanceTwo.height)) {\r\n        yColliding = true;\r\n    } else if ((instanceOneY <= instanceTwo.y) && (instanceTwo.y <= instanceOneY + instanceOne.height)) {\r\n        yColliding = true;\r\n    };\r\n\r\n    //The instances must have an overlapping area (x and y components) for there to be a collision.\r\n    if (xColliding && yColliding) {\r\n        preventingMovement = true;\r\n    } else if (instanceOneX < 0 || canvas.width < (instanceOneX + instanceOne.width)) {\r\n        preventingMovement = true;\r\n    } else if (instanceOneY < 0 || canvas.height < (instanceOneY + instanceOne.height)) {\r\n        preventingMovement = true;\r\n    };\r\n};\r\n\r\n//Input Functions\r\n\r\nfunction initializeKeyInputs() {\r\n    //Adds all currently pressed keys as a keyCode with a pair of true in the keysDown object. .keyCode is used instead of .key so \r\n    //that capital letters can't cause unwanted movements.\r\n    document.addEventListener(\"keydown\", e => {\r\n        //Special keys can only be set as \"down\" during the first single frame of being held until release. This is done by preventing\r\n        //the key from being activated again before release and by deleting it from the array on the second frame of being pressed.\r\n        if (shiftAlreadyPressed) {\r\n            delete keysDown[16];\r\n        };\r\n        if (spaceAlreadyPressed) {\r\n            delete keysDown[32];\r\n        };\r\n        if (arrowLeftAlreadyPressed) {\r\n            delete keysDown[37];\r\n        };\r\n        if (arrowUpAlreadyPressed) {\r\n            delete keysDown[38];\r\n        };\r\n        if (arrowRightAlreadyPressed) {\r\n            delete keysDown[39];\r\n        };\r\n        if (arrowDownAlreadyPressed) {\r\n            delete keysDown[40];\r\n        };\r\n        if (pAlreadyPressed) {\r\n            delete keysDown[80];\r\n        };\r\n\r\n        if (e.keyCode === 16) {\r\n            if (!shiftAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                shiftAlreadyPressed = true;\r\n            };\r\n        } else if (e.keyCode === 32) {\r\n            if (!spaceAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                spaceAlreadyPressed = true;\r\n            };\r\n        } else if (e.keyCode === 37) {\r\n            if (!arrowLeftAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                arrowLeftAlreadyPressed = true;\r\n            };\r\n        } else if (e.keyCode === 38) {\r\n            if (!arrowUpAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                arrowUpAlreadyPressed = true;\r\n            };\r\n        } else if (e.keyCode === 39) {\r\n            if (!arrowRightAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                arrowRightAlreadyPressed = true;\r\n            };\r\n        } else if (e.keyCode === 40) {\r\n            if (!arrowDownAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                arrowDownAlreadyPressed = true;\r\n            };\r\n        } else if (e.keyCode === 80) {\r\n            if (!pAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                pAlreadyPressed = true;\r\n            };\r\n        } else {\r\n            keysDown[e.keyCode] = true;\r\n        };\r\n    });\r\n\r\n    //Deletes all currently unpressed keys from the keysDown object.\r\n    document.addEventListener(\"keyup\", e => {\r\n        //Setting the flag to false allows the key to be set as \"down\" again.\r\n        if (e.keyCode === 16) {\r\n            delete keysDown[e.keyCode];\r\n            shiftAlreadyPressed = false;\r\n        } else if (e.keyCode === 32) {\r\n            delete keysDown[e.keyCode];\r\n            spaceAlreadyPressed = false;\r\n        } else if (e.keyCode === 37) {\r\n            delete keysDown[e.keyCode];\r\n            arrowLeftAlreadyPressed = false;\r\n        } else if (e.keyCode === 38) {\r\n            delete keysDown[e.keyCode];\r\n            arrowUpAlreadyPressed = false;\r\n        } else if (e.keyCode === 39) {\r\n            delete keysDown[e.keyCode];\r\n            arrowRightAlreadyPressed = false;\r\n        } else if (e.keyCode === 40) {\r\n            delete keysDown[e.keyCode];\r\n            arrowDownAlreadyPressed = false;\r\n        } else if (e.keyCode === 80) {\r\n            delete keysDown[e.keyCode];\r\n            pAlreadyPressed = false;\r\n        } else {\r\n            delete keysDown[e.keyCode];\r\n        };\r\n    });\r\n};\r\n\r\n//Scale Functions \r\n\r\n//Scales the game (including the title, info, and others) along the restricting axis while preserving the games aspect ratio.\r\nfunction scaleGame() {\r\n    //Determines the scale of the most restricted axis.\r\n    gameScale = Math.min(window.innerWidth / 520, window.innerHeight / 617);\r\n\r\n    //Changes the scale of the game's CSS container.\r\n    let gameContainer = document.getElementById(\"gameContainer\");\r\n    gameContainer.style.transform = \"scale(\" + gameScale + \")\";\r\n\r\n    //Continuously recalls the function.\r\n    window.requestAnimationFrame(scaleGame);\r\n};\r\n\r\n//Point Functions\r\n\r\nfunction updateLevelPoints(currentLevel) {\r\n    levelPoints[currentLevel - 1] = currentLevelPoints;\r\n};\r\n\r\nfunction calculateTotalPoints() {\r\n    totalPoints = 0;\r\n    for (let i = 0; i < levelPoints.length; i++) {\r\n        totalPoints += levelPoints[i];\r\n    };\r\n};\r\n\r\n//Cutscene Functions\r\n\r\n//Waits for a small cutscene to finish.\r\nasync function playCutscene(scene, secondsPerFrame) {\r\n    let cutsceneSideLength = 512;\r\n    let cutscenesx = 0;\r\n    let lastFramesx = scene.naturalWidth - cutsceneSideLength;\r\n\r\n    //Each time the frame changes, the next sprite in the sprite map is shown.\r\n    let cutscene = setInterval(() => {\r\n        cutscenesx += cutsceneSideLength;\r\n    }, secondsPerFrame * 1000);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        function drawCutscene() {\r\n            context.drawImage(scene, cutscenesx, 0, cutsceneSideLength, cutsceneSideLength, 0, 0, cutsceneSideLength, cutsceneSideLength);\r\n\r\n            //Resolves the Promise if the cutscene is over.\r\n            if (cutscenesx > lastFramesx) {\r\n                resolve(\"resolved\");\r\n            } else {\r\n                //Continuously recalls the function until the animation is completed.\r\n                window.requestAnimationFrame(drawCutscene);\r\n            };\r\n        };\r\n\r\n        window.requestAnimationFrame(drawCutscene);\r\n    });\r\n}\r\n\r\n//Micellaneous Functions\r\n\r\n//Creates a timer that resets the level if the counter reaches 0.\r\nfunction createCountdownTimer(totalSeconds) {\r\n    let seconds = totalSeconds;\r\n\r\n    //Sets the timer container to be visible.\r\n    let countdownTimerContainer = document.getElementById(\"countdownTimerContainer\");\r\n    countdownTimerContainer.style.visibility = \"visible\";\r\n\r\n    countdown = setInterval(() => {\r\n        //Each interval the amount of seconds decreases and the displayed numbers are calculated.\r\n        seconds--;\r\n        let currentMinutes = Math.floor(seconds / 60);\r\n        let currentSeconds = seconds % 60;\r\n\r\n        //The remaining time is displayed.\r\n        let countdownTimer = document.getElementById(\"countdownTimer\");\r\n        countdownTimer.innerHTML = `${currentMinutes}:${currentSeconds}`;\r\n\r\n        //Restarts the level if the timer reaches 0.\r\n        if (seconds <= 0) {\r\n            destroyCountdownTimer();\r\n            restartLevel(\"countdownTimer\");\r\n        };\r\n    }, 1000);\r\n};\r\n\r\n//Sets the countdownTimer to be invisible and clears its interval.\r\nfunction destroyCountdownTimer() {\r\n    let countdownTimerContainer = document.getElementById(\"countdownTimerContainer\");\r\n    countdownTimerContainer.style.visibility = \"hidden\";\r\n    clearInterval(countdown);\r\n}\r\n\r\nfunction calculateAngleRadians(x, y) {\r\n    return Math.atan2(y, x);\r\n};\r\n\r\nfunction convertRadiansToDegrees(radians) {\r\n    return radians * 180 / Math.PI;\r\n};\r\n\r\n//Game loop\r\n\r\nfunction gameLoop() {\r\n    //Restarts the level if P is pressed.\r\n    if (keysDown[80]) {\r\n        restartLevel(\"keyPressed\");\r\n    };\r\n\r\n    if (gameState === \"playing\") {\r\n        //Blockie's Movement\r\n\r\n        if (!recoveringFromDash) {\r\n            //xInput and yInput are both used to determine the angle that Blockie is moving in.\r\n            xInput = 0;\r\n            yInput = 0;\r\n\r\n            //Each WASD key changes the angle of Blockie's movement.\r\n            //Right\r\n            if (keysDown[68]) {\r\n                xInput++;\r\n            };\r\n\r\n            //Left\r\n            if (keysDown[65]) {\r\n                xInput--;\r\n            };\r\n\r\n            //Down\r\n            if (keysDown[83]) {\r\n                yInput++;\r\n            };\r\n\r\n            //Up\r\n            if (keysDown[87]) {\r\n                yInput--;\r\n            };\r\n\r\n            if ((keysDown[16] || keysDown[32]) && allowDashAgain && (xInput !== 0 || yInput !== 0)) {\r\n                //Shift acts uniquely because it only is \"down\" for one frame; therefore, it must also be deleted after use because\r\n                //otherwise it could never be deleted in the input function.\r\n                delete keysDown[16];\r\n\r\n                //Pressing shift causes Blockie to \"dash\" by increasing his speed, creating a cooldown timeout, and playing a recovery \r\n                //animation.\r\n                initializeDash();\r\n            } else if ((keysDown[37] || keysDown[38] || keysDown[39] || keysDown[40]) && allowDashAgain) {\r\n                //Pressing the Arrow keys causes Blockie to \"dash\" by increasing his speed, creating a cooldown timeout, and playing a \r\n                //recovery animation. Directional inputs are reset to allow Blockie to dash only in the direction of the arrow keys.\r\n                xInput = 0;\r\n                yInput = 0;\r\n\r\n                //Right\r\n                if (keysDown[39]) {\r\n                    xInput++;\r\n                };\r\n\r\n                //Left\r\n                if (keysDown[37]) {\r\n                    xInput--;\r\n                };\r\n\r\n                //Down\r\n                if (keysDown[40]) {\r\n                    yInput++;\r\n                };\r\n\r\n                //Up\r\n                if (keysDown[38]) {\r\n                    yInput--;\r\n                };\r\n\r\n                initializeDash();\r\n            } else {\r\n                blockie.speed = 2;\r\n            };\r\n\r\n            //By the way atan2() works, all -y values return negative angles; therefore, the idle state image (image 0)\r\n            //must be set at -180 degrees and all angles must be increased by 180 degrees to rotate from the top-left in a \r\n            //clockwise direction continuously.\r\n            blockie.angleMovingDegrees = -180;\r\n\r\n            if (xInput !== 0 || yInput !== 0) {\r\n                //Finds the angle that Blockie is moving in radians based on the inputs.\r\n                blockie.angleMovingRadians = calculateAngleRadians(xInput, yInput);\r\n\r\n                //Converted to make the direction of Blockie more discernible.\r\n                blockie.angleMovingDegrees = convertRadiansToDegrees(blockie.angleMovingRadians);\r\n\r\n                //blockie.speed is the hypotenuse for all directional velocities to allow for diagonal movement.\r\n                blockie.dx = Math.cos(blockie.angleMovingRadians) * blockie.speed;\r\n                blockie.dy = Math.sin(blockie.angleMovingRadians) * blockie.speed;\r\n\r\n                //The SubPixels store the directional velocity.\r\n                blockie.xSubPixel += blockie.dx;\r\n                blockie.ySubPixel += blockie.dy;\r\n\r\n                //The velocity is then floored to avoid the sprite from being on subpixel locations and being distorted.\r\n                blockie.dx = Math.floor(blockie.xSubPixel);\r\n                blockie.dy = Math.floor(blockie.ySubPixel);\r\n\r\n                //The SubPixels then store the decimal remainders so they can be added on the next step to not lose speed.\r\n                blockie.xSubPixel -= blockie.dx;\r\n                blockie.ySubPixel -= blockie.dy;\r\n\r\n                //The testLocations are where Blockie should go, but it must also be checked for collisions before he is moved.\r\n                blockie.targetXLocation = blockie.x + blockie.dx;\r\n                blockie.targetYLocation = blockie.y + blockie.dy;\r\n            } else {\r\n                //Accounts for possible changes in Blockie's location due to respawning or something else that isn't an input.\r\n                blockie.targetXLocation = blockie.x;\r\n                blockie.targetYLocation = blockie.y;\r\n            };\r\n\r\n            //Movement Obstacles\r\n\r\n            //Updates Blockie's location if he's touching a wall to the nearest open location.\r\n\r\n            checkTestCollisionsWithClass(blockie.targetXLocation, blockie.targetYLocation, walls);\r\n\r\n            //Blockie's movement will be prevented on some axes if he is touching a wall at his target location.\r\n            if (preventingMovement) {\r\n                blockie.targetXLocation = blockie.x;\r\n                blockie.targetYLocation = blockie.y;\r\n\r\n                let xChange = 0;\r\n                let yChange = 0;\r\n                let xTestingDistance = 0;\r\n                let yTestingDistance = 0;\r\n\r\n                //This checks for the last available x location after Blockie has already moved in his desired direction. This \r\n                //allows for moving along walls while moving in a diagonal direction.\r\n                if (Math.abs(blockie.dx - xTestingDistance) < 1) {\r\n                    xChange = blockie.dx - xTestingDistance;\r\n                } else {\r\n                    xChange = Math.sign(blockie.dx);\r\n                };\r\n\r\n                checkTestCollisionsWithClass(blockie.targetXLocation + xChange, blockie.targetYLocation, walls);\r\n\r\n                while (!preventingMovement && Math.abs(xTestingDistance) <= Math.abs(blockie.dx) - 1) {\r\n                    blockie.targetXLocation += xChange;\r\n                    xTestingDistance += xChange;\r\n\r\n                    if (Math.abs(blockie.dx - xTestingDistance) < 1) {\r\n                        xChange = blockie.dx - xTestingDistance;\r\n                    } else {\r\n                        xChange = Math.sign(blockie.dx);\r\n                    };\r\n\r\n                    checkTestCollisionsWithClass(blockie.targetXLocation + xChange, blockie.targetYLocation, walls);\r\n                };\r\n\r\n                //This checks for the last available y location after Blockie has already moved in his desired direction. This \r\n                //allows for moving along walls while moving in a diagonal direction.\r\n                if (Math.abs(blockie.dy - yTestingDistance) < 1) {\r\n                    yChange = blockie.dy - yTestingDistance;\r\n                } else {\r\n                    yChange = Math.sign(blockie.dy);\r\n                };\r\n\r\n                checkTestCollisionsWithClass(blockie.targetXLocation, blockie.targetYLocation + yChange, walls);\r\n\r\n                while (!preventingMovement && Math.abs(yTestingDistance) <= Math.abs(blockie.dy) - 1) {\r\n                    blockie.targetYLocation += yChange;\r\n                    yTestingDistance += yChange;\r\n\r\n                    if (Math.abs(blockie.dy - yTestingDistance) < 1) {\r\n                        yChange = blockie.dy - yTestingDistance;\r\n                    } else {\r\n                        yChange = Math.sign(blockie.dy);\r\n                    };\r\n\r\n                    checkTestCollisionsWithClass(blockie.targetXLocation, blockie.targetYLocation + yChange, walls);\r\n                };\r\n            };\r\n\r\n            blockie.x = blockie.targetXLocation;\r\n            blockie.y = blockie.targetYLocation;\r\n        };\r\n\r\n        //Other Instances' Movements\r\n\r\n        moveMovingHorizontalLasers();\r\n        moveMovingVerticalLasers();\r\n\r\n        //Collision Handling\r\n\r\n        collidingInstances.splice(0);\r\n\r\n        updateAllInteractiveObjects();\r\n        for (let i = 0; i < allObjects.length; i++) {\r\n            checkCollisionsWithClass(allObjects[i]);\r\n        };\r\n\r\n        for (let i = 0; i < collidingInstances.length; i++) {\r\n            if (collidingInstances[i].constructor.name === \"PassivePoint\") {\r\n                //Adds points to the current level's total.\r\n                currentLevelPoints++;\r\n\r\n                //Resolves the PassivePoint's Promise and destroys the instance once it is touched.\r\n                let collidingPoint = collidingInstances[i];\r\n                collidingPoint.externalResolve();\r\n                clearTimeout(collidingPoint.timeout);\r\n                let instanceIndex = passivePoints.indexOf(collidingPoint);\r\n                passivePoints.splice(instanceIndex, 1);\r\n            } else if (collidingInstances[i].constructor.name === \"ActivePoint\") {\r\n                //Adds points to the current level's total.\r\n                currentLevelPoints++;\r\n\r\n                //Stops all currently-running timeouts so that they stop hurting performance and don't execute after resetting.\r\n                for (let i = 0; i < currentTimeouts.length; i++) {\r\n                    clearTimeout(currentTimeouts[i]);\r\n                };\r\n\r\n                currentTimeouts.splice(0);\r\n\r\n                //Stops all currently-running timeouts so that they stop hurting performance and don't execute after resetting.\r\n                for (let i = 0; i < currentIntervals.length; i++) {\r\n                    clearInterval(currentIntervals[i]);\r\n                };\r\n\r\n                currentIntervals.splice(0);\r\n\r\n                resetBlockieState();\r\n\r\n                cancelAwaitChain = true;\r\n\r\n                updateAllObjects();\r\n                for (let i = 0; i < allObjects.length; i++) {\r\n                    resolveInstances(allObjects[i]);\r\n                };\r\n\r\n                //Allows for Blockie to touch activePoints if they are underneath collisions, since he won't die.\r\n                break;\r\n            } else {\r\n                restartLevel(\"died\");\r\n                break;\r\n            };\r\n        };\r\n    };\r\n\r\n    //Continuously recalls the function.\r\n    window.requestAnimationFrame(gameLoop);\r\n};\r\n\r\n//Drawing is handled in a loop that is separate from the gameLoop because the game should still be drawn even while the game is \r\n//restarting or changing levels.\r\nfunction drawingLoop() {\r\n    //Updates the amount of points in the gameInfo div.\r\n    document.getElementById(\"currentPoints\").innerHTML = `Points: ${currentLevelPoints}|7`;\r\n\r\n    //Update the current level in the currentLevel div.\r\n    document.getElementById(\"currentLevel\").innerHTML = \"Level: \" + currentLevel;\r\n\r\n    //Clears the canvas so that it can be redrawn with updated locations, instances, and states.\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    if (gameState !== \"displayingMessage\" && gameState !== \"playingCutscene\") {\r\n        animateBlockie();\r\n        drawBlockie();\r\n    };\r\n\r\n    if (gameState === \"playing\") {\r\n        drawWalls();\r\n        drawPassivePoints();\r\n        drawActivePoints();\r\n        drawMovingHorizontalLasers();\r\n        drawMovingVerticalLasers();\r\n        drawBombs();\r\n    } else if (gameState === \"finishingLevel\") {\r\n        drawPartyHats();\r\n    };\r\n\r\n    //Continuously recalls the function.\r\n    window.requestAnimationFrame(drawingLoop);\r\n};\r\n\r\n//Game Start\r\n\r\nlevelOne();\r\n\r\ninitializeKeyInputs();\r\nwindow.requestAnimationFrame(gameLoop);\r\nwindow.requestAnimationFrame(drawingLoop);\r\nwindow.requestAnimationFrame(scaleGame);"]}