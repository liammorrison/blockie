{"version":3,"sources":["../src/blockie.js"],"names":["initializeLevel","oneSixteenth","blockieAdjustment","fifteenSixteenths","cancelAwaitChain","createCountdownTimer","Promise","all","createWall","oneEigth","oneHalf","sevenEigths","threeFourths","fireBomb","fiveEigths","fiveSixteenths","fullScreen","threeSixteenths","oneFourth","elevenSixteenths","nineSixteenths","thirteenSixteenths","fireMovingBomb","createActivePoint","moveBlockie","sevenSixteenths","threeEigths","fireMovingHorizontalLaser","fireMovingWall","fireContinuallyMovingWall","loopFireBombs","fireMovingActivePoint","fireContinuallyMovingBomb","destroyCountdownTimer","increaseLevel","levelOne","error","levelTwo","levelThree","levelFour","levelFive","levelSix","levelSeven","levelEight","levelNine","levelTen","levelEleven","levelTwelve","levelEnd","reason","i","currentTimeouts","length","clearTimeout","splice","currentIntervals","clearInterval","updateAllInstances","allInstances","rejectInstances","currentLevelPoints","gameState","blockie","state","sx","displayMessage","resetBlockieState","controlLevel","playCutscene","spCountdownDestructionScene","restartLevel","angleMovingDegrees","updateLevelPoints","currentLevel","calculateTotalPoints","resolve","reject","partyHatInstance","PartyHat","partyHats","push","animateFinishedLevelHat","y","Math","min","height","window","requestAnimationFrame","message","changeLevel","drawGameOverScreen","setTimeout","document","getElementById","innerHTML","resumePlaying","keysDown","instanceAffecting","warningSeconds","externalResolve","externalReject","timeout","visible","setWarningTimeouts","x","waitingSeconds","firingSeconds","setWaitingTimeout","instance","PassivePoint","passivePoints","remainingFiringSeconds","remainingFiringSecondsInterval","setInterval","addCurrentInterval","removeCurrentInterval","instanceIndex","indexOf","createPassivePoint","xSpeed","ySpeed","MovingPassivePoint","movingPassivePoints","fireMovingPassivePoint","ActivePoint","activePoints","MovingActivePoint","movingActivePoints","speed","initialWaitingSeconds","loopFireMovingHorizontalLasers","MovingHorizontalLaser","movingHorizontalLasers","width","fireMovingVerticalLaser","loopFireMovingVerticalLasers","MovingVerticalLaser","movingVerticalLasers","Bomb","bombs","loopFireMovingBombs","MovingBomb","movingBombs","directionChangeSeconds","directionChangeTimeout","Wall","walls","loopFireMovingWalls","MovingWall","movingWalls","scene","secondsPerFrame","cutsceneSideLength","cutscenesx","lastFramesx","naturalWidth","cutscene","drawCutscene","context","drawImage","canvas","getContext","lineWidth","totalPoints","xInput","yInput","preventingMovement","arrowLeftAlreadyPressed","arrowUpAlreadyPressed","arrowRightAlreadyPressed","arrowDownAlreadyPressed","shiftAlreadyPressed","spaceAlreadyPressed","pAlreadyPressed","recoveringFromDash","allowDashAgain","dashDistance","dashRecoverySeconds","allowDashAgainSeconds","spBlockiePlaying","createElement","src","spBlockieDestructing","spBlockieRecoveringFromDash","gameScale","countdown","waitingTimeouts","allInteractiveInstances","allCollisionInstances","collidingInstances","levelPoints","Player","angleMovingRadians","dx","dy","xSubPixel","ySubPixel","xTarget","yTarget","sprite","remainingDashSeconds","WaitingTimeout","totalFiringSeconds","blockieX","blockieY","resolveInstances","objectArray","initialArrayLength","addCurrentTimeout","removeCurrentTimeout","currentTimeoutIndex","interval","currentIntervalIndex","initializeDash","endDashRecovery","remainingDashSecondsInterval","resetAllowDashAgain","moveBlockieAwayFromMovingWalls","checkCollisionsWithClass","collidingMovingWallInstance","checkBlockieOutsideBorder","checkTestInstancesColliding","updateAllInteractiveInstances","updateAllCollisionInstances","moveMovingHorizontalLasers","moveMovingVerticalLasers","moveMovingPassivePoints","moveMovingActivePoints","moveMovingBombs","moveMovingWalls","animateBlockie","fillStyle","fillRect","round","endAnimateBlockieDestructing","animateBlockieDestructing","drawBlockie","drawPassivePoints","currentInstance","strokeStyle","strokeRect","drawMovingPassivePoints","drawActivePoints","drawMovingActivePoints","drawMovingHorizontalLasers","beginPath","moveTo","abs","sign","lineTo","max","fill","drawMovingVerticalLasers","drawBombs","drawMovingBombs","drawWalls","drawMovingWalls","drawPartyHats","classArray","checkInstancesColliding","checkCollisionsWithClasses","classesArray","currentClass","checkTestCollisionsWithClasses","instanceOneX","instanceOneY","instanceOne","instanceTwo","xColliding","yColliding","initializeKeyInputs","addEventListener","e","keyCode","scaleGame","innerWidth","innerHeight","gameContainer","style","transform","totalSeconds","seconds","countdownTimerContainer","visibility","currentMinutes","floor","currentSeconds","countdownTimer","calculateAngleRadians","atan2","convertRadiansToDegrees","radians","PI","gameLoop","cos","sin","xChange","yChange","xDir","yDir","lastAvailableX","lastAvailableY","constructor","name","collidingPoint","drawingLoop","clearRect"],"mappings":"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","file":"blockie.js","sourcesContent":["//Game Setup\r\n\r\nconst canvas = document.getElementById(\"game\");\r\nconst context = canvas.getContext(\"2d\");\r\ncontext.lineWidth = 4;\r\n\r\n//Variables\r\n\r\nlet gameState = \"playing\";\r\n\r\nlet currentLevel = 1;\r\n\r\nlet currentLevelPoints = 0;\r\nlet totalPoints = 0;\r\n\r\nlet xInput = 0;\r\nlet yInput = 0;\r\n\r\nlet preventingMovement = false;\r\n\r\nlet arrowLeftAlreadyPressed = false;\r\nlet arrowUpAlreadyPressed = false;\r\nlet arrowRightAlreadyPressed = false;\r\nlet arrowDownAlreadyPressed = false;\r\nlet shiftAlreadyPressed = false;\r\nlet spaceAlreadyPressed = false;\r\nlet pAlreadyPressed = false;\r\n\r\nlet recoveringFromDash = false;\r\nlet allowDashAgain = true;\r\nlet dashDistance = 96;\r\nlet dashRecoverySeconds = 0.3;\r\nlet allowDashAgainSeconds = 0.9;\r\n\r\n//Used to stop async/await functions by preventing another await to run. Used when Blockie touches activePoints and the current\r\n//instances needs to stop running, yet everything cannot be rejected (because that would stop the level too).\r\nlet cancelAwaitChain = false;\r\n\r\n//Sprite maps. \r\n\r\n//These are used when drawing to easily reference sprites. They are large sprite maps to avoid loading many individual sprite \r\n//files (which would hurt performance).\r\n\r\nlet spBlockiePlaying = document.createElement(\"img\");\r\nspBlockiePlaying.src = \"../images/spBlockiePlaying.png\";\r\n\r\nlet spBlockieDestructing = document.createElement(\"img\");\r\nspBlockieDestructing.src = \"../images/spBlockieDestructing.png\";\r\n\r\nlet spBlockieRecoveringFromDash = document.createElement(\"img\");\r\nspBlockieRecoveringFromDash.src = \"../images/spBlockieRecoveringFromDash.png\";\r\n\r\nlet spCountdownDestructionScene = document.createElement(\"img\");\r\nspCountdownDestructionScene.src = \"../images/spCountdownDestructionScene.png\";\r\n\r\nlet gameScale = 1;\r\n\r\nlet countdown = 0;\r\n\r\n//Arrays\r\n\r\nlet keysDown = [];\r\n\r\nlet waitingTimeouts = [];\r\nlet passivePoints = [];\r\nlet movingPassivePoints = [];\r\nlet activePoints = [];\r\nlet movingActivePoints = [];\r\nlet movingHorizontalLasers = [];\r\nlet movingVerticalLasers = [];\r\nlet bombs = [];\r\nlet movingBombs = [];\r\nlet walls = [];\r\nlet movingWalls = [];\r\nlet partyHats = [];\r\n\r\n//Used in for loops to apply a function to many objects.\r\nlet allInstances = [];\r\nlet allInteractiveInstances = [];\r\nlet allCollisionInstances = [];\r\n\r\nlet currentTimeouts = [];\r\nlet currentIntervals = [];\r\n\r\nlet collidingInstances = [];\r\n\r\nlet levelPoints = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n//Classes\r\n\r\nclass Player {\r\n    constructor() {\r\n        this.width = 32;\r\n        this.height = 32;\r\n\r\n        this.x = canvas.width / 2 - this.width / 2;\r\n        this.y = canvas.height / 2 - this.height / 2;\r\n\r\n        this.speed = 2;\r\n        this.angleMovingDegrees = 0;\r\n        this.angleMovingRadians = 0;\r\n        this.dx = 0;\r\n        this.dy = 0;\r\n        this.xSubPixel = 0;\r\n        this.ySubPixel = 0;\r\n        this.xTarget = this.x;\r\n        this.yTarget = this.y;\r\n\r\n        this.state = \"playing\";\r\n\r\n        this.sprite = spBlockiePlaying;\r\n        this.sx = 0;\r\n\r\n        //Used to draw the remaining seconds meter above the instance.\r\n        this.remainingDashSeconds = 0;\r\n    };\r\n};\r\n\r\nclass WaitingTimeout {\r\n    constructor() {\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalReject;\r\n        this.timeout;\r\n    };\r\n};\r\n\r\n//The difference between PassivePoints and ActivePoints is that the latter resolve all currently running promises when touched by\r\n//Blockie, while the former do not.\r\n\r\nclass PassivePoint {\r\n    constructor(x, y, totalFiringSeconds) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = 16;\r\n        this.height = 16;\r\n\r\n        //When created, the instance begins its warning state to provide visual feedback.\r\n        this.state = \"warning\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalResolve;\r\n        this.externalReject;\r\n        this.timeout;\r\n\r\n        //Used to draw the remaining seconds meter above the instance.\r\n        this.totalFiringSeconds = totalFiringSeconds;\r\n        this.remainingFiringSeconds = 0;\r\n    };\r\n};\r\n\r\nclass MovingPassivePoint {\r\n    constructor(x, y, xSpeed, ySpeed, totalFiringSeconds) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = 16;\r\n        this.height = 16;\r\n        this.xSpeed = xSpeed;\r\n        this.ySpeed = ySpeed;\r\n\r\n        //When created, the instance begins its warning state to provide visual feedback.\r\n        this.state = \"warning\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalResolve;\r\n        this.externalReject;\r\n        this.timeout;\r\n\r\n        //Used to draw the remaining seconds meter above the instance.\r\n        this.totalFiringSeconds = totalFiringSeconds;\r\n        this.remainingFiringSeconds = 0;\r\n    };\r\n};\r\n\r\nclass ActivePoint {\r\n    constructor(x, y, totalFiringSeconds) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = 16;\r\n        this.height = 16;\r\n\r\n        //When created, the instance begins its warning state to provide visual feedback.\r\n        this.state = \"warning\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalResolve;\r\n        this.externalReject;\r\n        this.timeout;\r\n    };\r\n};\r\n\r\nclass MovingActivePoint {\r\n    constructor(x, y, xSpeed, ySpeed, totalFiringSeconds) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = 16;\r\n        this.height = 16;\r\n        this.xSpeed = xSpeed;\r\n        this.ySpeed = ySpeed;\r\n\r\n        //When created, the instance begins its warning state to provide visual feedback.\r\n        this.state = \"warning\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalResolve;\r\n        this.externalReject;\r\n        this.timeout;\r\n    };\r\n};\r\n\r\nclass MovingHorizontalLaser {\r\n    constructor(y, height, speed) {\r\n        this.x = 0;\r\n        this.y = y;\r\n        this.width = canvas.width;\r\n        this.height = height;\r\n        this.speed = speed;\r\n\r\n        //When created, the instance begins its warning state to provide visual feedback.\r\n        this.state = \"warning\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalReject;\r\n        this.timeout;\r\n    };\r\n};\r\n\r\nclass MovingVerticalLaser {\r\n    constructor(x, width, speed) {\r\n        this.x = x;\r\n        this.y = 0;\r\n        this.width = width;\r\n        this.height = canvas.height;\r\n        this.speed = speed;\r\n\r\n        //When created, the instance begins its warning state to provide visual feedback.\r\n        this.state = \"warning\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalReject;\r\n        this.timeout;\r\n    };\r\n};\r\n\r\nclass Bomb {\r\n    constructor(x, y, width, height) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        //When created, the instance begins its warning state to provide visual feedback.\r\n        this.state = \"warning\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalReject;\r\n        this.timeout;\r\n    };\r\n};\r\n\r\nclass MovingBomb {\r\n    constructor(x, y, width, height, xSpeed, ySpeed) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.xSpeed = xSpeed;\r\n        this.ySpeed = ySpeed;\r\n\r\n        //When created, the instance begins its warning state to provide visual feedback.\r\n        this.state = \"warning\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalReject;\r\n        this.timeout;\r\n    };\r\n};\r\n\r\nclass Wall {\r\n    constructor(x, y, width, height) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        //Walls are always \"firing\" and visible.\r\n        this.state = \"firing\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalReject;\r\n        this.timeout;\r\n    }\r\n}\r\n\r\nclass MovingWall {\r\n    constructor(x, y, width, height, xSpeed, ySpeed) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.xSpeed = xSpeed;\r\n        this.ySpeed = ySpeed;\r\n\r\n        //Walls are always \"firing\" and visible.\r\n        this.state = \"firing\";\r\n        this.visible = true;\r\n\r\n        //Allows for each instance to be \"destroyed\" from an outside source (through level resets, Blockie interaction, etc.).\r\n        this.externalReject;\r\n        this.timeout;\r\n    }\r\n}\r\n\r\nclass PartyHat {\r\n    constructor() {\r\n        this.x = blockie.x + 8;\r\n        this.y = -20;\r\n        this.width = 16;\r\n        this.height = 20;\r\n    };\r\n};\r\n\r\nlet blockie = new Player();\r\n\r\n//Functions\r\n\r\n//Level-Handling Functions\r\n\r\n//Since these are frequently used numbers, they are variables for simplicity. The canvas' width and height are the same, so they \r\n//work with both axes.\r\nlet oneSixteenth = 2 * 16;\r\nlet oneEigth = 4 * 16;\r\nlet threeSixteenths = 6 * 16;\r\nlet oneFourth = 8 * 16;\r\nlet fiveSixteenths = 10 * 16;\r\nlet threeEigths = 12 * 16;\r\nlet sevenSixteenths = 14 * 16;\r\nlet oneHalf = canvas.width / 2;\r\nlet nineSixteenths = 18 * 16;\r\nlet fiveEigths = 20 * 16;\r\nlet elevenSixteenths = 22 * 16;\r\nlet threeFourths = 24 * 16;\r\nlet thirteenSixteenths = 26 * 16;\r\nlet sevenEigths = 28 * 16;\r\nlet fifteenSixteenths = 30 * 16;\r\nlet fullScreen = 32 * 16;\r\n\r\nlet blockieAdjustment = -blockie.width / 2\r\n\r\n//Levels are a series of obstacles and objectives that appear in specific orders and time periods using async/await.\r\nasync function levelOne() {\r\n    try {\r\n        initializeLevel(oneSixteenth + blockieAdjustment, fifteenSixteenths + blockieAdjustment);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        createCountdownTimer(80);\r\n\r\n        await Promise.all([\r\n            createWall(oneEigth, oneHalf, sevenEigths, oneEigth),\r\n            createWall(0, threeFourths, sevenEigths, oneEigth),\r\n\r\n            fireBomb(0, oneHalf, oneEigth, oneEigth, 0, 4.5),\r\n\r\n            fireBomb(11 * 16, fiveEigths, fiveSixteenths, oneEigth, 0, 0.75),\r\n            fireBomb(11 * 16, fiveEigths, fiveSixteenths, oneEigth, 2.25, 0.75),\r\n            fireBomb(11 * 16, fiveEigths, fiveSixteenths, oneEigth, 4.5, 0.75),\r\n\r\n            fireBomb(11 * 16, sevenEigths, fiveSixteenths, oneEigth, 1.125, 0.75),\r\n            fireBomb(11 * 16, sevenEigths, fiveSixteenths, oneEigth, 3.375, 0.75),\r\n\r\n            fireBomb(0, oneHalf, oneEigth, oneEigth, 7, 1000000),\r\n            fireBomb(0, fiveEigths, fullScreen, oneEigth, 7, 1000000),\r\n            fireBomb(sevenEigths, threeFourths, oneEigth, oneEigth, 7, 1000000),\r\n            fireBomb(0, sevenEigths, fullScreen, oneEigth, 7, 1000000),\r\n\r\n            fireBomb(threeSixteenths, oneEigth, 3 * 16, 3 * 16, 7.5, 2),\r\n            fireBomb(oneSixteenth, oneFourth, 3 * 16, 3 * 16, 7.5, 2),\r\n            fireBomb(threeSixteenths, oneFourth, 3 * 16, 3 * 16, 7.5, 2),\r\n            fireBomb(fiveSixteenths, oneFourth, 3 * 16, 3 * 16, 7.5, 2),\r\n\r\n            fireBomb(elevenSixteenths, oneEigth, 3 * 16, 3 * 16, 7.5, 2),\r\n            fireBomb(nineSixteenths, oneFourth, 3 * 16, 3 * 16, 7.5, 2),\r\n            fireBomb(elevenSixteenths, oneFourth, 3 * 16, 3 * 16, 7.5, 2),\r\n            fireBomb(thirteenSixteenths, oneFourth, 3 * 16, 3 * 16, 7.5, 2),\r\n\r\n            fireMovingBomb(-threeFourths, 0, threeFourths, oneHalf, 0.34, 0, 9.5, 11.5),\r\n\r\n            createActivePoint(oneHalf - 8, fiveSixteenths - 8, 21),\r\n            fireMovingBomb(fullScreen, 0, oneSixteenth, oneHalf, -2, 0, 9.5, 7),\r\n            fireMovingBomb(fullScreen, 0, oneSixteenth, oneHalf, -2, 0, 10.62, 7),\r\n            fireMovingBomb(fullScreen, 0, oneSixteenth, oneHalf, -2, 0, 11.74, 7),\r\n            fireMovingBomb(fullScreen, 0, oneSixteenth, oneHalf, -2, 0, 12.86, 7),\r\n            fireMovingBomb(fullScreen, 0, oneSixteenth, oneHalf, -2, 0, 13.98, 7),\r\n            fireMovingBomb(fullScreen, 0, oneSixteenth, oneHalf, -2, 0, 15.1, 7),\r\n            fireMovingBomb(fullScreen, 0, oneSixteenth, oneHalf, -2, 0, 16.22, 7),\r\n            fireMovingBomb(fullScreen, 0, oneSixteenth, oneHalf, -2, 0, 17.34, 7),\r\n            fireMovingBomb(fullScreen, 0, oneSixteenth, oneHalf, -2, 0, 18.46, 7),\r\n            fireMovingBomb(fullScreen, 0, oneSixteenth, oneHalf, -2, 0, 19.58, 7),\r\n            fireMovingBomb(fullScreen, 0, oneSixteenth, oneHalf, -2, 0, 20.7, 7),\r\n            fireMovingBomb(fullScreen, 0, oneSixteenth, oneHalf, -2, 0, 21.82, 7),\r\n            fireMovingBomb(fullScreen, 0, oneSixteenth, oneHalf, -2, 0, 22.94, 7),\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        moveBlockie(oneHalf + blockieAdjustment, fiveSixteenths + blockieAdjustment);\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, sevenSixteenths, fullScreen),\r\n            createWall(sevenSixteenths, 0, oneEigth, oneSixteenth),\r\n            createWall(sevenSixteenths, threeSixteenths, oneEigth, oneSixteenth),\r\n            createWall(sevenSixteenths, threeEigths, oneEigth, oneSixteenth),\r\n            createWall(sevenSixteenths, nineSixteenths, oneEigth, oneSixteenth),\r\n            createWall(sevenSixteenths, threeFourths, oneEigth, oneSixteenth),\r\n            createWall(sevenSixteenths, fifteenSixteenths, oneEigth, oneSixteenth),\r\n            createWall(nineSixteenths, 0, sevenSixteenths, fullScreen),\r\n\r\n            fireMovingHorizontalLaser(0, oneSixteenth, 1.2, 0, 3.98),\r\n            fireMovingHorizontalLaser(fifteenSixteenths, oneSixteenth, -0.4, 0, 3.98),\r\n\r\n            fireMovingHorizontalLaser(0, oneSixteenth, 1.2, 4, 7),\r\n            fireMovingHorizontalLaser(0, oneEigth, 1.2, 7, 4.85),\r\n            fireMovingHorizontalLaser(0, oneSixteenth, 3.2, 11, 3.5),\r\n\r\n            createActivePoint(oneHalf - 8, oneHalf - 8, 16),\r\n            fireMovingBomb(thirteenSixteenths, oneSixteenth, oneEigth, oneEigth, -2, 0, 15, 1.6),\r\n            fireMovingBomb(oneSixteenth, oneFourth, oneEigth, oneEigth, 2, 0, 15, 1.6),\r\n            fireMovingBomb(thirteenSixteenths, fiveEigths, oneEigth, oneEigth, -2, 0, 15, 1.6),\r\n            fireMovingBomb(oneSixteenth, thirteenSixteenths, oneEigth, oneEigth, 2, 0, 15, 1.6)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(oneEigth, oneEigth, threeFourths, oneEigth),\r\n            createWall(oneFourth, threeEigths, oneHalf, oneSixteenth),\r\n            createWall(oneFourth, nineSixteenths, oneHalf, oneSixteenth),\r\n            createWall(oneEigth, threeFourths, threeFourths, oneEigth),\r\n            createWall(oneEigth, oneFourth, oneEigth, oneHalf),\r\n            createWall(threeEigths, oneFourth, oneSixteenth, oneHalf),\r\n            createWall(nineSixteenths, oneFourth, oneSixteenth, oneHalf),\r\n            createWall(threeFourths, oneFourth, oneEigth, oneHalf),\r\n\r\n            fireMovingWall(0, -oneEigth, 36 * 16, oneEigth, -1.8, 1.8, 0, 2.9),\r\n            fireMovingWall(fullScreen, -oneEigth, oneEigth, 36 * 16, -1.8, 1.8, 0, 2.9),\r\n\r\n            fireMovingWall(-oneEigth, fullScreen, 36 * 16, oneEigth, 1.8, -1.8, 3, 2.9),\r\n            fireMovingWall(-oneEigth, 0, oneEigth, 36 * 16, 1.8, -1.8, 3, 2.9),\r\n\r\n            fireMovingWall(0, -oneEigth, fullScreen, oneEigth, 0, 2.3, 5.9, 2.28),\r\n\r\n            createActivePoint(oneHalf - 8, oneHalf - 8, 10.4),\r\n            fireMovingWall(0, -fullScreen, fullScreen, fullScreen, 0, 1.5, 9, 4),\r\n            fireMovingWall(-fullScreen, 0, fullScreen, fullScreen, 1.5, 0, 9, 4),\r\n            fireMovingWall(0, fullScreen, fullScreen, fullScreen, 0, -1.5, 9, 4),\r\n            fireMovingWall(fullScreen, 0, fullScreen, fullScreen, -1.5, 0, 9, 4)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, fullScreen, oneSixteenth),\r\n            createWall(0, fifteenSixteenths, fullScreen, oneSixteenth),\r\n            createWall(0, oneSixteenth, oneSixteenth, sevenEigths),\r\n            createWall(fifteenSixteenths, oneSixteenth, oneSixteenth, sevenEigths),\r\n\r\n            fireContinuallyMovingWall(oneSixteenth, oneSixteenth, oneEigth, oneSixteenth, 0, 1.5, 0, 1.75),\r\n            fireContinuallyMovingWall(threeSixteenths, oneSixteenth, oneEigth, oneSixteenth, 0, 1.5, 0.35, 1.75),\r\n            fireContinuallyMovingWall(fiveSixteenths, oneSixteenth, oneEigth, oneSixteenth, 0, 1.5, 0.7, 1.75),\r\n            fireContinuallyMovingWall(sevenSixteenths, oneSixteenth, oneEigth, oneSixteenth, 0, 1.5, 1.05, 1.75),\r\n            fireContinuallyMovingWall(nineSixteenths, oneSixteenth, oneEigth, oneSixteenth, 0, 1.5, 1.4, 1.75),\r\n            fireContinuallyMovingWall(elevenSixteenths, oneSixteenth, oneEigth, oneSixteenth, 0, 1.5, 1.75, 1.75),\r\n            fireContinuallyMovingWall(thirteenSixteenths, oneSixteenth, oneEigth, oneSixteenth, 0, 1.5, 2.1, 1.75),\r\n\r\n            fireContinuallyMovingWall(oneSixteenth, sevenEigths, oneEigth, oneSixteenth, 0, -1.5, 0, 1.75),\r\n            fireContinuallyMovingWall(threeSixteenths, sevenEigths, oneEigth, oneSixteenth, 0, -1.5, 0.35, 1.75),\r\n            fireContinuallyMovingWall(fiveSixteenths, sevenEigths, oneEigth, oneSixteenth, 0, -1.5, 0.7, 1.75),\r\n            fireContinuallyMovingWall(sevenSixteenths, sevenEigths, oneEigth, oneSixteenth, 0, -1.5, 1.05, 1.75),\r\n            fireContinuallyMovingWall(nineSixteenths, sevenEigths, oneEigth, oneSixteenth, 0, -1.5, 1.4, 1.75),\r\n            fireContinuallyMovingWall(elevenSixteenths, sevenEigths, oneEigth, oneSixteenth, 0, -1.5, 1.75, 1.75),\r\n            fireContinuallyMovingWall(thirteenSixteenths, sevenEigths, oneEigth, oneSixteenth, 0, -1.5, 2.1, 1.75),\r\n\r\n            fireMovingBomb(oneSixteenth, oneSixteenth, oneEigth, oneEigth, 2.8, 0, 0.73, 2.28),\r\n            fireMovingBomb(oneSixteenth, thirteenSixteenths, oneEigth, oneEigth, 2.8, 0, 0.73, 2.28),\r\n\r\n            fireMovingBomb(oneSixteenth, threeEigths, oneEigth, oneFourth, 2.8, 0, 2.48, 2.28),\r\n\r\n            fireMovingBomb(oneSixteenth, oneSixteenth, oneEigth, oneEigth, 2.8, 0, 4.23, 2.28),\r\n            fireMovingBomb(oneSixteenth, thirteenSixteenths, oneEigth, oneEigth, 2.8, 0, 4.23, 2.28),\r\n\r\n            fireMovingBomb(oneSixteenth, threeEigths, oneEigth, oneFourth, 2.8, 0, 5.98, 2.28),\r\n\r\n            createActivePoint(oneHalf - 8, oneHalf - 8, 8.8)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        moveBlockie(oneHalf + blockieAdjustment, oneHalf + blockieAdjustment);\r\n\r\n        await Promise.all([\r\n            createWall(0, 0, fullScreen, oneSixteenth),\r\n            createWall(0, threeSixteenths, fullScreen, oneSixteenth),\r\n            createWall(0, threeEigths, fullScreen, oneSixteenth),\r\n            createWall(0, nineSixteenths, fullScreen, oneSixteenth),\r\n            createWall(0, threeFourths, fullScreen, oneSixteenth),\r\n            createWall(0, fifteenSixteenths, fullScreen, oneSixteenth),\r\n            createWall(0, 0, oneSixteenth, fullScreen),\r\n            createWall(threeSixteenths, 0, oneSixteenth, fullScreen),\r\n            createWall(threeEigths, 0, oneSixteenth, fullScreen),\r\n            createWall(nineSixteenths, 0, oneSixteenth, fullScreen),\r\n            createWall(threeFourths, 0, oneSixteenth, fullScreen),\r\n            createWall(fifteenSixteenths, 0, oneSixteenth, fullScreen),\r\n\r\n            fireMovingWall(-fullScreen, 0, fullScreen, fullScreen, 0.75, 0, 0, 1000000),\r\n            fireMovingWall(0, fullScreen, fullScreen, fullScreen, 0, -0.75, 0, 1000000),\r\n\r\n            fireBomb(oneFourth, oneFourth, oneEigth, oneEigth, 0, 1.8),\r\n            fireBomb(sevenSixteenths, oneFourth, oneEigth, oneEigth, 0, 1.8),\r\n            fireBomb(fiveEigths, oneFourth, oneEigth, oneEigth, 0, 1.8),\r\n            fireBomb(oneFourth, sevenSixteenths, oneEigth, oneEigth, 0, 1.8),\r\n            fireBomb(fiveEigths, sevenSixteenths, oneEigth, oneEigth, 0, 1.8),\r\n            fireBomb(oneFourth, fiveEigths, oneEigth, oneEigth, 0, 1.8),\r\n            fireBomb(sevenSixteenths, fiveEigths, oneEigth, oneEigth, 0, 1.8),\r\n            fireBomb(fiveEigths, fiveEigths, oneEigth, oneEigth, 0, 1.8),\r\n\r\n            fireBomb(sevenSixteenths, oneFourth, oneEigth, oneEigth, 1.8, 1.8),\r\n            fireBomb(fiveEigths, oneFourth, oneEigth, oneEigth, 1.8, 1.8),\r\n            fireBomb(thirteenSixteenths, sevenSixteenths, oneEigth, oneEigth, 1.8, 1.8),\r\n\r\n            fireBomb(fiveEigths, oneFourth, oneEigth, oneEigth, 3.6, 1.8),\r\n            fireBomb(thirteenSixteenths, oneSixteenth, oneEigth, oneEigth, 3.6, 1.8),\r\n\r\n            createActivePoint(sevenEigths - 8, oneEigth - 8, 7.2)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        await Promise.all([\r\n            loopFireBombs(0, oneFourth, oneEigth, oneSixteenth, 0, 0.3, 1),\r\n            loopFireBombs(oneEigth, oneEigth, oneFourth, sevenEigths, 0, 0.3, 1),\r\n            loopFireBombs(oneHalf, 0, oneFourth, sevenEigths, 0, 0.3, 1),\r\n            fireMovingActivePoint(oneSixteenth - 8, threeEigths - 8, 0, 0.4, 0),\r\n\r\n            fireContinuallyMovingWall(oneEigth, 0, oneSixteenth, oneEigth, 2.5, 0, 0, 0.65),\r\n            fireContinuallyMovingBomb(threeEigths, fifteenSixteenths, oneEigth, oneSixteenth, 0, -2.5, 0, 3.2),\r\n            fireContinuallyMovingBomb(threeFourths, oneFourth, oneFourth, oneSixteenth, 0, 2.5, 0, 1.9),\r\n            fireContinuallyMovingWall(elevenSixteenths, sevenEigths, oneSixteenth, oneEigth, -2.5, 0, 0, 0.65)\r\n        ]);\r\n\r\n        cancelAwaitChain = false;\r\n\r\n        destroyCountdownTimer();\r\n\r\n        increaseLevel();\r\n    } catch (error) {};\r\n};\r\n\r\nasync function levelTwo() {\r\n    try {\r\n\r\n    } catch (error) {};\r\n};\r\n\r\nasync function levelThree() {\r\n    try {\r\n\r\n    } catch (error) {};\r\n};\r\n\r\nasync function levelFour() {\r\n    try {\r\n\r\n    } catch (error) {};\r\n};\r\n\r\nasync function levelFive() {\r\n    try {\r\n\r\n    } catch (error) {};\r\n};\r\n\r\nasync function levelSix() {\r\n    try {\r\n\r\n    } catch (error) {};\r\n};\r\n\r\nasync function levelSeven() {\r\n    try {\r\n\r\n    } catch (error) {};\r\n};\r\n\r\nasync function levelEight() {\r\n    try {\r\n\r\n    } catch (error) {};\r\n};\r\n\r\nasync function levelNine() {\r\n    try {\r\n\r\n    } catch (error) {};\r\n};\r\n\r\nasync function levelTen() {\r\n    try {\r\n\r\n    } catch (error) {};\r\n};\r\n\r\nasync function levelEleven() {\r\n    try {\r\n\r\n    } catch (error) {};\r\n};\r\n\r\nasync function levelTwelve() {\r\n    try {\r\n\r\n    } catch (error) {};\r\n};\r\n\r\nasync function levelEnd() {\r\n    try {\r\n\r\n    } catch (error) {};\r\n}\r\n\r\n//Resets the initial values for the beginning of every level.\r\nfunction initializeLevel(blockieX, blockieY) {\r\n    gameState = \"playing\";\r\n\r\n    blockie.x = blockieX;\r\n    blockie.y = blockieY;\r\n\r\n    recoveringFromDash = false;\r\n    allowDashAgain = true;\r\n};\r\n\r\n//Clears all arrays, clears the canvas, displays the game over screen, and waits to restart the current level.\r\nasync function restartLevel(reason) {\r\n    //Stops all currently-running timeouts so that they stop hurting performance and don't execute after reseting.\r\n    for (let i = 0; i < currentTimeouts.length; i++) {\r\n        clearTimeout(currentTimeouts[i]);\r\n    };\r\n\r\n    currentTimeouts.splice(0);\r\n\r\n    //Stops all currently-running timeouts so that they stop hurting performance and don't execute after reseting.\r\n    for (let i = 0; i < currentIntervals.length; i++) {\r\n        clearInterval(currentIntervals[i]);\r\n    };\r\n\r\n    currentIntervals.splice(0);\r\n\r\n    updateAllInstances();\r\n    for (let i = 0; i < allInstances.length; i++) {\r\n        rejectInstances(allInstances[i]);\r\n    };\r\n\r\n    destroyCountdownTimer();\r\n\r\n    //Removes all points collected in the level.\r\n    currentLevelPoints = 0;\r\n\r\n    //Switches how the game resets based on how it triggered.\r\n    if (reason === \"died\") {\r\n        gameState = \"animatingBlockieDestruction\";\r\n\r\n        //Animates Blockie's destruction.\r\n        blockie.state = \"destructing\";\r\n        blockie.sx = 0;\r\n\r\n        await displayMessage(\"Determination is your only asset.\", true);\r\n    } else if (reason === \"keyPressed\") {\r\n        resetBlockieState();\r\n        controlLevel();\r\n    } else if (reason === \"countdownTimer\") {\r\n        gameState = \"playingCutscene\";\r\n        await playCutscene(spCountdownDestructionScene, 0.17);\r\n        await displayMessage(\"You've failed another world.\", true);\r\n    };\r\n};\r\n\r\nasync function increaseLevel() {\r\n    gameState = \"finishingLevel\";\r\n\r\n    blockie.angleMovingDegrees = -180;\r\n\r\n\r\n    //Points are only made permanent once a level is completed.\r\n    updateLevelPoints(currentLevel);\r\n    currentLevelPoints = 0;\r\n    calculateTotalPoints();\r\n\r\n    currentLevel++;\r\n\r\n    //Waits for the PartyHat to descend on to Blockie's head.\r\n    await new Promise((resolve, reject) => {\r\n        let partyHatInstance = new PartyHat();\r\n        partyHats.push(partyHatInstance);\r\n\r\n        function animateFinishedLevelHat() {\r\n            partyHatInstance.y += Math.min(2, (blockie.y - partyHatInstance.y - partyHatInstance.height));\r\n\r\n            if (partyHatInstance.y + partyHatInstance.height !== blockie.y) {\r\n                //Continuously recalls the function until the PartyHat reaches Blockie's head.\r\n                window.requestAnimationFrame(animateFinishedLevelHat);\r\n            } else {\r\n                resolve(\"resolved\");\r\n            };\r\n        };\r\n\r\n        window.requestAnimationFrame(animateFinishedLevelHat);\r\n    });\r\n\r\n    await displayMessage(\"You haven't escaped yet.\", true);\r\n};\r\n\r\nfunction controlLevel() {\r\n    switch (currentLevel) {\r\n        case 1:\r\n            levelOne();\r\n            break;\r\n        case 2:\r\n            levelTwo();\r\n            break;\r\n        case 3:\r\n            levelThree();\r\n            break;\r\n        case 4:\r\n            levelFour();\r\n            break;\r\n        case 5:\r\n            levelFive();\r\n            break;\r\n        case 6:\r\n            levelSix();\r\n            break;\r\n        case 7:\r\n            levelSeven();\r\n            break;\r\n        case 8:\r\n            levelEight();\r\n            break;\r\n        case 9:\r\n            levelNine();\r\n            break;\r\n        case 10:\r\n            levelTen();\r\n            break;\r\n        case 11:\r\n            levelEleven();\r\n            break;\r\n        case 12:\r\n            levelTwelve();\r\n            break;\r\n        case 13:\r\n            levelEnd();\r\n            break;\r\n    };\r\n};\r\n\r\n//Level-Handling Helper Functions\r\n\r\n//Resolves all promises and removes all instances from their object arrays.\r\nfunction resolveInstances(objectArray) {\r\n    //The for loop's length is determined before it starts to avoid missing the first element.\r\n    let initialArrayLength = objectArray.length;\r\n\r\n    for (let i = initialArrayLength - 1; i >= 0; i--) {\r\n        //Rejects the instances' Promises and timeouts and destroys the instances.\r\n        let instance = objectArray[i];\r\n        instance.externalResolve();\r\n        clearTimeout(instance.timeout);\r\n        objectArray.splice(i, 1);\r\n    };\r\n};\r\n\r\n//Rejects all promises and removes all instances from their object arrays.\r\nfunction rejectInstances(objectArray) {\r\n    //The for loop's length is determined before it starts to avoid missing the first element.\r\n    let initialArrayLength = objectArray.length;\r\n\r\n    for (let i = initialArrayLength - 1; i >= 0; i--) {\r\n        //Rejects the instances' Promises and timeouts and destroys the instances.\r\n        let instance = objectArray[i];\r\n        instance.externalReject();\r\n        clearTimeout(instance.timeout);\r\n        objectArray.splice(i, 1);\r\n    };\r\n};\r\n\r\n//Adds a currently-running timeout to an array so that it can be easily deactivated when the game restarts.\r\nfunction addCurrentTimeout(timeout) {\r\n    currentTimeouts.push(timeout);\r\n};\r\n\r\n//Removes a timeout from the array of currently-running timeouts.\r\nfunction removeCurrentTimeout(timeout) {\r\n    let currentTimeoutIndex = currentTimeouts.indexOf(timeout);\r\n    currentTimeouts.splice(currentTimeoutIndex, 1);\r\n};\r\n\r\n//Adds a currently-running interval to an array so that it can be easily deactivated when the game restarts.\r\nfunction addCurrentInterval(interval) {\r\n    currentIntervals.push(interval);\r\n};\r\n\r\n//Removes a interval from the array of currently-running intervals and clears it.\r\nfunction removeCurrentInterval(interval) {\r\n    clearInterval(interval);\r\n    let currentIntervalIndex = currentIntervals.indexOf(interval);\r\n    currentIntervals.splice(currentIntervalIndex, 1);\r\n};\r\n\r\n//Shows a message and awaits a player input to continue the game.\r\nasync function displayMessage(message, changeLevel) {\r\n    //Forces the player to read the message for 1 second before they can continue the game.\r\n    await new Promise((resolve, reject) => {\r\n        let drawGameOverScreen = setTimeout(() => {\r\n            //Placed here to draw Blockie with a PartyHat during increaseLevel().\r\n            partyHats.splice(0);\r\n\r\n            //Draws the game over screen.\r\n            document.getElementById(\"messageDisplayer\").innerHTML = message;\r\n            gameState = \"displayingMessage\";\r\n            resolve(\"resolved\");\r\n        }, 1000);\r\n    });\r\n\r\n    return await new Promise((resolve, reject) => {\r\n        //Restarts the game once acceptable keys are pressed.\r\n        function resumePlaying() {\r\n            if (keysDown[16] || keysDown[32]) {\r\n                document.getElementById(\"messageDisplayer\").innerHTML = \"\";\r\n\r\n                gameState = \"playing\";\r\n                resetBlockieState();\r\n\r\n                if (changeLevel) {\r\n                    controlLevel();\r\n                };\r\n\r\n                resolve(\"resolved\");\r\n            } else {\r\n                //Continuously recalls the function until an acceptable key is pressed.\r\n                window.requestAnimationFrame(resumePlaying);\r\n            };\r\n        };\r\n\r\n        window.requestAnimationFrame(resumePlaying);\r\n    });\r\n};\r\n\r\n//Blockie Functions \r\n\r\nfunction initializeDash() {\r\n    blockie.state = \"recoveringFromDash\";\r\n    blockie.speed = dashDistance;\r\n    recoveringFromDash = true;\r\n    allowDashAgain = false;\r\n\r\n    let endDashRecovery = setTimeout(() => {\r\n        recoveringFromDash = false;\r\n        blockie.state = \"playing\";\r\n        removeCurrentTimeout(endDashRecovery);\r\n    }, dashRecoverySeconds * 1000);\r\n    addCurrentTimeout(endDashRecovery);\r\n\r\n    //Sets an interval to the length of the dash recovery which counts down the semi-accurate remaining length of the timeout.\r\n    //This is used in drawing the remaining seconds meter to show the player how much more recovery time that they need to wait.\r\n    blockie.remainingDashSeconds = allowDashAgainSeconds;\r\n    let remainingDashSecondsInterval = setInterval(() => {\r\n        blockie.remainingDashSeconds -= 0.004;\r\n    }, 1);\r\n    addCurrentInterval(remainingDashSecondsInterval);\r\n\r\n    let resetAllowDashAgain = setTimeout(() => {\r\n        allowDashAgain = true;\r\n        removeCurrentInterval(remainingDashSecondsInterval);\r\n        removeCurrentTimeout(resetAllowDashAgain);\r\n    }, allowDashAgainSeconds * 1000);\r\n    addCurrentTimeout(resetAllowDashAgain);\r\n};\r\n\r\n//Allows for dashing again.\r\nfunction resetBlockieState() {\r\n    blockie.state = \"playing\";\r\n    recoveringFromDash = false;\r\n    allowDashAgain = true;\r\n\r\n    //Prevents Blockie from dashing again based off of one button press.\r\n    delete keysDown[16];\r\n    delete keysDown[32];\r\n    delete keysDown[37];\r\n    delete keysDown[38];\r\n    delete keysDown[39];\r\n    delete keysDown[40];\r\n};\r\n\r\n//Adjusts Blockie's location to prevent wall clipping in screen transitions.\r\nfunction moveBlockie(x, y) {\r\n    blockie.x = x;\r\n    blockie.y = y;\r\n};\r\n\r\nfunction moveBlockieAwayFromMovingWalls() {\r\n    //Loops through each moving wall that Blockie is touching and pushes Blockie away from it.\r\n    checkCollisionsWithClass(movingWalls);\r\n    for (let i = 0; i < collidingInstances.length; i++) {\r\n        let collidingMovingWallInstance = collidingInstances[i];\r\n        preventingMovement = false;\r\n\r\n        //Checks if Blockie would be not touching the current moving wall if he moved with the wall's xSpeed, and if so, \r\n        //\"pushes\" Blockie there.\r\n        preventingMovement = false;\r\n        checkBlockieOutsideBorder(blockie, blockie.x + collidingMovingWallInstance.xSpeed, blockie.y);\r\n        checkTestInstancesColliding(blockie, blockie.x + collidingMovingWallInstance.xSpeed, blockie.y, collidingMovingWallInstance);\r\n        if (!preventingMovement) {\r\n            blockie.x += collidingMovingWallInstance.xSpeed;\r\n            break;\r\n        };\r\n\r\n        //Checks if Blockie would be not touching the current moving wall if he moved with the wall's ySpeed, and if so, \r\n        //\"pushes\" Blockie there.\r\n        preventingMovement = false;\r\n        checkBlockieOutsideBorder(blockie, blockie.x, blockie.y + collidingMovingWallInstance.ySpeed);\r\n        checkTestInstancesColliding(blockie, blockie.x, blockie.y + collidingMovingWallInstance.ySpeed, collidingMovingWallInstance);\r\n        if (!preventingMovement) {\r\n            blockie.y += collidingMovingWallInstance.ySpeed;\r\n            break;\r\n        };\r\n    };\r\n}\r\n\r\n//Instance Functions\r\n\r\n//Creates a WaitingTimeout instance, and awaits for its resolution to then create the root collision instance. This is meant to allow\r\n//for instances to spawn at different times concurrently (using Promise.all) or spawn a bit after another's destruction.\r\nfunction setWaitingTimeout(waitingSeconds) {\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new WaitingTimeout();\r\n    waitingTimeouts.push(instance);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        instance.timeout = setTimeout(() => {\r\n            //Removes the instance from its object array (so it isn't drawn or colliding) and resolves it once it is \"destroyed\".\r\n            let instanceIndex = waitingTimeouts.indexOf(instance);\r\n            waitingTimeouts.splice(instanceIndex, 1);\r\n            resolve(\"resolved\");\r\n        }, waitingSeconds * 1000);\r\n    });\r\n};\r\n\r\n//Sets the timeouts that cause the collision instance to \"blink\" 2 times before firing. All warning timeouts are set at the same length \r\n//to allow the player to predict collisions.\r\nasync function setWarningTimeouts(instanceAffecting) {\r\n    //Each timeout sets the affected instance's timeout and reject function equal to a new \"blinking\" timeout for a bit.\r\n    let warningSeconds = 1;\r\n\r\n    await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instanceAffecting.externalResolve = resolve;\r\n        instanceAffecting.externalReject = reject;\r\n\r\n        instanceAffecting.timeout = setTimeout(() => {\r\n            instanceAffecting.visible = false;\r\n\r\n            resolve(\"resolved\");\r\n        }, warningSeconds * 0.25 * 1000);\r\n    });\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instanceAffecting.externalResolve = resolve;\r\n        instanceAffecting.externalReject = reject;\r\n\r\n        instanceAffecting.timeout = setTimeout(() => {\r\n            instanceAffecting.visible = true;\r\n\r\n            resolve(\"resolved\");\r\n        }, warningSeconds * 0.25 * 1000);\r\n    });\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instanceAffecting.externalResolve = resolve;\r\n        instanceAffecting.externalReject = reject;\r\n\r\n        instanceAffecting.timeout = setTimeout(() => {\r\n            instanceAffecting.visible = false;\r\n\r\n            resolve(\"resolved\");\r\n        }, warningSeconds * 0.25 * 1000);\r\n    });\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instanceAffecting.externalResolve = resolve;\r\n        instanceAffecting.externalReject = reject;\r\n\r\n        instanceAffecting.timeout = setTimeout(() => {\r\n            //Makes the affected instance visible and collidable.\r\n            instanceAffecting.state = \"firing\";\r\n            instanceAffecting.visible = true;\r\n            resolve(\"resolved\");\r\n        }, warningSeconds * 0.25 * 1000);\r\n    });\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function createPassivePoint(x, y, waitingSeconds, firingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new PassivePoint(x, y, firingSeconds);\r\n    passivePoints.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        //Sets an interval to the length of the firingSeconds which counts down the semi-accurate remaining length of the timeout.\r\n        //This is used in drawing the remaining seconds meter to show the player how much longer the point will exist.\r\n        instance.remainingFiringSeconds = firingSeconds;\r\n        let remainingFiringSecondsInterval = setInterval(() => {\r\n            instance.remainingFiringSeconds -= 0.004;\r\n        }, 1);\r\n        addCurrentInterval(remainingFiringSecondsInterval);\r\n\r\n        instance.timeout = setTimeout(() => {\r\n            removeCurrentInterval(remainingFiringSecondsInterval);\r\n\r\n            //Removes the instance from its object array (so it isn't drawn or colliding) and resolves it once it is \"destroyed\".\r\n            let instanceIndex = passivePoints.indexOf(instance);\r\n            passivePoints.splice(instanceIndex, 1);\r\n            resolve(\"resolved\");\r\n        }, firingSeconds * 1000);\r\n    });\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function fireMovingPassivePoint(x, y, xSpeed, ySpeed, waitingSeconds, firingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new MovingPassivePoint(x, y, xSpeed, ySpeed, firingSeconds);\r\n    movingPassivePoints.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        //Sets an interval to the length of the firingSeconds which counts down the semi-accurate remaining length of the timeout.\r\n        //This is used in drawing the remaining seconds meter to show the player how much longer the point will exist.\r\n        instance.remainingFiringSeconds = firingSeconds;\r\n        let remainingFiringSecondsInterval = setInterval(() => {\r\n            instance.remainingFiringSeconds -= 0.004;\r\n        }, 1);\r\n        addCurrentInterval(remainingFiringSecondsInterval);\r\n\r\n        instance.timeout = setTimeout(() => {\r\n            removeCurrentInterval(remainingFiringSecondsInterval);\r\n\r\n            //Removes the instance from its object array (so it isn't drawn or colliding) and resolves it once it is \"destroyed\".\r\n            let instanceIndex = movingPassivePoints.indexOf(instance);\r\n            movingPassivePoints.splice(instanceIndex, 1);\r\n            resolve(\"resolved\");\r\n        }, firingSeconds * 1000);\r\n    });\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function createActivePoint(x, y, waitingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new ActivePoint(x, y);\r\n    activePoints.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n    });\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function fireMovingActivePoint(x, y, xSpeed, ySpeed, waitingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new MovingActivePoint(x, y, xSpeed, ySpeed);\r\n    movingActivePoints.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n    });\r\n};\r\n\r\n//Continuously recreates the same instance until the activePoint is touched.\r\nasync function loopFireMovingHorizontalLasers(y, height, speed, initialWaitingSeconds, waitingSeconds, firingSeconds) {\r\n    await setWaitingTimeout(initialWaitingSeconds);\r\n\r\n    //Fires the first instance with 0 waiting seconds because the initialWaitingSeconds has already been waited for.\r\n    await fireMovingHorizontalLaser(y, height, speed, 0, firingSeconds);\r\n\r\n    //Creates a new instance after each previous one has resolved.\r\n    while (!cancelAwaitChain) {\r\n        await fireMovingHorizontalLaser(y, height, speed, waitingSeconds, firingSeconds);\r\n    };\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    return;\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function fireMovingHorizontalLaser(y, height, speed, waitingSeconds, firingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new MovingHorizontalLaser(y, height, speed);\r\n    movingHorizontalLasers.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        instance.timeout = setTimeout(() => {\r\n            //Removes the instance from its object array (so it isn't drawn or colliding) and resolves it once it is \"destroyed\".\r\n            let instanceIndex = movingHorizontalLasers.indexOf(instance);\r\n            movingHorizontalLasers.splice(instanceIndex, 1);\r\n            resolve(\"resolved\");\r\n        }, firingSeconds * 1000);\r\n    });\r\n};\r\n\r\n//Continuously recreates the same instance until the activePoint is touched.\r\nasync function loopFireMovingVerticalLasers(x, width, speed, initialWaitingSeconds, waitingSeconds, firingSeconds) {\r\n    await setWaitingTimeout(initialWaitingSeconds);\r\n\r\n    //Fires the first instance with 0 waiting seconds because the initialWaitingSeconds has already been waited for.\r\n    await fireMovingVerticalLaser(x, width, speed, 0, firingSeconds);\r\n\r\n    //Creates a new instance after each previous one has resolved.\r\n    while (!cancelAwaitChain) {\r\n        await fireMovingVerticalLaser(x, width, speed, waitingSeconds, firingSeconds);\r\n    };\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    return;\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function fireMovingVerticalLaser(x, width, speed, waitingSeconds, firingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new MovingVerticalLaser(x, width, speed);\r\n    movingVerticalLasers.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        instance.timeout = setTimeout(() => {\r\n            //Removes the instance from its object array (so it isn't drawn or colliding) and resolves it once it is \"destroyed\".\r\n            let instanceIndex = movingVerticalLasers.indexOf(instance);\r\n            movingVerticalLasers.splice(instanceIndex, 1);\r\n            resolve(\"resolved\");\r\n        }, firingSeconds * 1000);\r\n    });\r\n};\r\n\r\n//Continuously recreates the same instance until the activePoint is touched.\r\nasync function loopFireBombs(x, y, width, height, initialWaitingSeconds, waitingSeconds, firingSeconds) {\r\n    await setWaitingTimeout(initialWaitingSeconds);\r\n\r\n    //Fires the first instance with 0 waiting seconds because the initialWaitingSeconds has already been waited for.\r\n    await fireBomb(x, y, width, height, 0, firingSeconds);\r\n\r\n    //Creates a new instance after each previous one has resolved.\r\n    while (!cancelAwaitChain) {\r\n        await fireBomb(x, y, width, height, waitingSeconds, firingSeconds);\r\n    };\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    return;\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function fireBomb(x, y, width, height, waitingSeconds, firingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new Bomb(x, y, width, height);\r\n    bombs.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        instance.timeout = setTimeout(() => {\r\n            //Removes the instance from its object array (so it isn't drawn or colliding) and resolves it once it is \"destroyed\".\r\n            let instanceIndex = bombs.indexOf(instance);\r\n            bombs.splice(instanceIndex, 1);\r\n            resolve(\"resolved\");\r\n        }, firingSeconds * 1000);\r\n    });\r\n};\r\n\r\n//Continuously recreates the same instance until the activePoint is touched.\r\nasync function loopFireMovingBombs(x, y, width, height, xSpeed, ySpeed, initialWaitingSeconds, waitingSeconds, firingSeconds) {\r\n    await setWaitingTimeout(initialWaitingSeconds);\r\n\r\n    //Fires the first instance with 0 waiting seconds because the initialWaitingSeconds has already been waited for.\r\n    await fireMovingBomb(x, y, width, height, xSpeed, ySpeed, 0, firingSeconds);\r\n\r\n    //Creates a new instance after each previous one has resolved.\r\n    while (!cancelAwaitChain) {\r\n        await fireMovingBomb(x, y, width, height, xSpeed, ySpeed, waitingSeconds, firingSeconds);\r\n    };\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    return;\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function fireMovingBomb(x, y, width, height, xSpeed, ySpeed, waitingSeconds, firingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new MovingBomb(x, y, width, height, xSpeed, ySpeed);\r\n    movingBombs.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        instance.timeout = setTimeout(() => {\r\n            //Removes the instance from its object array (so it isn't drawn or colliding) and resolves it once it is \"destroyed\".\r\n            let instanceIndex = movingBombs.indexOf(instance);\r\n            movingBombs.splice(instanceIndex, 1);\r\n            resolve(\"resolved\");\r\n        }, firingSeconds * 1000);\r\n    });\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function fireContinuallyMovingBomb(x, y, width, height, xSpeed, ySpeed, initialWaitingSeconds, directionChangeSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(initialWaitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new MovingBomb(x, y, width, height, xSpeed, ySpeed);\r\n    movingBombs.push(instance);\r\n\r\n    //Creates the \"blinking\" effect for warning of a collision.\r\n    await setWarningTimeouts(instance);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        //Continually switches the sign of the wall's speed over each interval of the set parameter of time.\r\n        function directionChangeTimeout() {\r\n            instance.timeout = setTimeout(() => {\r\n                directionChangeTimeout();\r\n\r\n                //Makes the wall switch directions.\r\n                instance.xSpeed *= -1;\r\n                instance.ySpeed *= -1;\r\n            }, directionChangeSeconds * 1000);\r\n        };\r\n\r\n        directionChangeTimeout();\r\n    });\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function createWall(x, y, width, height) {\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new Wall(x, y, width, height);\r\n    walls.push(instance);\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n    });\r\n};\r\n\r\n//Continuously recreates the same instance until the activePoint is touched.\r\nasync function loopFireMovingWalls(x, y, width, height, xSpeed, ySpeed, initialWaitingSeconds, waitingSeconds, firingSeconds) {\r\n    await setWaitingTimeout(initialWaitingSeconds);\r\n\r\n    //Fires the first instance with 0 waiting seconds because the initialWaitingSeconds has already been waited for.\r\n    await fireMovingWall(x, y, width, height, xSpeed, ySpeed, 0, firingSeconds);\r\n\r\n    //Creates a new instance after each previous one has resolved.\r\n    while (!cancelAwaitChain) {\r\n        await fireMovingWall(x, y, width, height, xSpeed, ySpeed, waitingSeconds, firingSeconds);\r\n    };\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    return;\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function fireMovingWall(x, y, width, height, xSpeed, ySpeed, waitingSeconds, firingSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(waitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new MovingWall(x, y, width, height, xSpeed, ySpeed);\r\n    movingWalls.push(instance);\r\n\r\n    //Creates a timeout for the instance's destruction and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        instance.timeout = setTimeout(() => {\r\n            //Removes the instance from its object array (so it isn't drawn or colliding) and resolves it once it is \"destroyed\".\r\n            let instanceIndex = movingWalls.indexOf(instance);\r\n            movingWalls.splice(instanceIndex, 1);\r\n            resolve(\"resolved\");\r\n        }, firingSeconds * 1000);\r\n    });\r\n};\r\n\r\n//Creates an instance, adds it to an array for drawing and collisions, and controls all timing and variables.\r\nasync function fireContinuallyMovingWall(x, y, width, height, xSpeed, ySpeed, initialWaitingSeconds, directionChangeSeconds) {\r\n    //Waits to create the instance to allow for pauses and staggered collision instances.\r\n    await setWaitingTimeout(initialWaitingSeconds);\r\n\r\n    //Cancels the next await if the current screen is being resolved by an activePoint.\r\n    if (cancelAwaitChain) return;\r\n\r\n    //Creates an instance and sets all of its initial properties.\r\n    let instance = new MovingWall(x, y, width, height, xSpeed, ySpeed);\r\n    movingWalls.push(instance);\r\n\r\n    //Creates a timeout for the instance's direction changing and links its deactivation functions.\r\n    return await new Promise((resolve, reject) => {\r\n        //Links the instance's deactivation functions to itself to allow outside callings.\r\n        instance.externalResolve = resolve;\r\n        instance.externalReject = reject;\r\n\r\n        //Continually switches the sign of the wall's speed over each interval of the set parameter of time.\r\n        function directionChangeTimeout() {\r\n            instance.timeout = setTimeout(() => {\r\n                directionChangeTimeout();\r\n\r\n                //Makes the wall switch directions.\r\n                instance.xSpeed *= -1;\r\n                instance.ySpeed *= -1;\r\n            }, directionChangeSeconds * 1000);\r\n        };\r\n\r\n        directionChangeTimeout();\r\n    });\r\n};\r\n\r\n//Instance Helper Functions\r\n\r\nfunction updateAllInstances() {\r\n    allInstances = [\r\n        waitingTimeouts,\r\n        passivePoints,\r\n        movingPassivePoints,\r\n        activePoints,\r\n        movingActivePoints,\r\n        movingHorizontalLasers,\r\n        movingVerticalLasers,\r\n        bombs,\r\n        movingBombs,\r\n        walls,\r\n        movingWalls\r\n    ];\r\n};\r\n\r\nfunction updateAllInteractiveInstances() {\r\n    allInteractiveInstances = [\r\n        waitingTimeouts,\r\n        passivePoints,\r\n        movingPassivePoints,\r\n        activePoints,\r\n        movingActivePoints,\r\n        movingHorizontalLasers,\r\n        movingVerticalLasers,\r\n        bombs,\r\n        movingBombs\r\n    ];\r\n};\r\n\r\nfunction updateAllCollisionInstances() {\r\n    allCollisionInstances = [\r\n        walls,\r\n        movingWalls\r\n    ];\r\n};\r\n\r\n//Moves instances by adding speed to their location every step.\r\nfunction moveMovingHorizontalLasers() {\r\n    for (let i = 0; i < movingHorizontalLasers.length; i++) {\r\n        if (movingHorizontalLasers[i].state !== \"warning\") {\r\n            movingHorizontalLasers[i].y += movingHorizontalLasers[i].speed;\r\n        };\r\n    };\r\n};\r\n\r\n//Moves instances by adding speed to their location every step.\r\nfunction moveMovingVerticalLasers() {\r\n    for (let i = 0; i < movingVerticalLasers.length; i++) {\r\n        if (movingVerticalLasers[i].state !== \"warning\") {\r\n            movingVerticalLasers[i].x += movingVerticalLasers[i].speed;\r\n        };\r\n    };\r\n};\r\n\r\n//Moves instances by adding speed to their location every step.\r\nfunction moveMovingPassivePoints() {\r\n    for (let i = 0; i < movingPassivePoints.length; i++) {\r\n        if (movingPassivePoints[i].state !== \"warning\") {\r\n            movingPassivePoints[i].x += movingPassivePoints[i].xSpeed;\r\n            movingPassivePoints[i].y += movingPassivePoints[i].ySpeed;\r\n        };\r\n    };\r\n};\r\n\r\n//Moves instances by adding speed to their location every step.\r\nfunction moveMovingActivePoints() {\r\n    for (let i = 0; i < movingActivePoints.length; i++) {\r\n        if (movingActivePoints[i].state !== \"warning\") {\r\n            movingActivePoints[i].x += movingActivePoints[i].xSpeed;\r\n            movingActivePoints[i].y += movingActivePoints[i].ySpeed;\r\n        };\r\n    };\r\n};\r\n\r\n//Moves instances by adding speed to their location every step.\r\nfunction moveMovingBombs() {\r\n    for (let i = 0; i < movingBombs.length; i++) {\r\n        if (movingBombs[i].state !== \"warning\") {\r\n            movingBombs[i].x += movingBombs[i].xSpeed;\r\n            movingBombs[i].y += movingBombs[i].ySpeed;\r\n        };\r\n    };\r\n};\r\n\r\n//Moves instances by adding speed to their location every step.\r\nfunction moveMovingWalls() {\r\n    for (let i = 0; i < movingWalls.length; i++) {\r\n        if (movingWalls[i].state !== \"warning\") {\r\n            movingWalls[i].x += movingWalls[i].xSpeed;\r\n            movingWalls[i].y += movingWalls[i].ySpeed;\r\n        };\r\n    };\r\n};\r\n\r\n//Drawing Functions\r\n\r\nfunction animateBlockie() {\r\n    //Draws the remaining seconds meter for when Blockie can dash again.\r\n    if (!allowDashAgain && gameState === \"playing\") {\r\n        context.fillStyle = \"#378CFF\";\r\n        context.fillRect(blockie.x, blockie.y - 8, blockie.width * (blockie.remainingDashSeconds / allowDashAgainSeconds), 4);\r\n    };\r\n\r\n    //Draws Blockie himself.\r\n    if (blockie.state === \"playing\") {\r\n        blockie.sprite = spBlockiePlaying;\r\n        //sx is the location on the blockie.png sprite map. Here it determines the sprite's direction facing. It starts at the \r\n        //idle image, then goes to the top-left, and then continues in a clockwise direction.\r\n        blockie.sx = blockie.width * (Math.round(blockie.angleMovingDegrees / 45) + 4);\r\n    } else if (blockie.state === \"recoveringFromDash\") {\r\n        blockie.sprite = spBlockieRecoveringFromDash;\r\n        blockie.sx = 0;\r\n    } else if (blockie.state === \"destructing\") {\r\n        blockie.sprite = spBlockieDestructing;\r\n\r\n        let endAnimateBlockieDestructing = setTimeout(() => {\r\n            clearInterval(animateBlockieDestructing);\r\n            removeCurrentTimeout(animateBlockieDestructing);\r\n            removeCurrentTimeout(endAnimateBlockieDestructing);\r\n        }, 1.5 * 1000);\r\n        addCurrentTimeout(endAnimateBlockieDestructing);\r\n\r\n        let animateBlockieDestructing = setInterval(() => {\r\n            blockie.sx += blockie.width;\r\n        }, 0.5 * 1000);\r\n        addCurrentTimeout(animateBlockieDestructing);\r\n    };\r\n};\r\n\r\nfunction drawBlockie() {\r\n    context.drawImage(blockie.sprite, blockie.sx, 0, blockie.width, blockie.height, blockie.x, blockie.y, blockie.width, blockie.height);\r\n};\r\n\r\nfunction drawPassivePoints() {\r\n    for (let i = 0; i < passivePoints.length; i++) {\r\n        let currentInstance = passivePoints[i];\r\n\r\n        //Draws the remaining seconds meter for when the point will disappear.\r\n        context.fillStyle = \"#E6FF16\";\r\n        context.fillRect(currentInstance.x, currentInstance.y - 8, currentInstance.width * (currentInstance.remainingFiringSeconds / currentInstance.totalFiringSeconds), 4);\r\n\r\n        //Draws the point itself.\r\n        if (currentInstance.visible) {\r\n            //Changes the sprite depending on the state of the instance.\r\n            if (currentInstance.state == \"warning\") {\r\n                context.strokeStyle = \"#E6FF16\";\r\n                context.strokeRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            } else if (currentInstance.state == \"firing\") {\r\n                context.fillStyle = \"#E6FF16\";\r\n                context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nfunction drawMovingPassivePoints() {\r\n    for (let i = 0; i < movingPassivePoints.length; i++) {\r\n        let currentInstance = movingPassivePoints[i];\r\n\r\n        //Draws the remaining seconds meter for when the point will disappear.\r\n        context.fillStyle = \"#E6FF16\";\r\n        context.fillRect(currentInstance.x, currentInstance.y - 8, currentInstance.width * (currentInstance.remainingFiringSeconds / currentInstance.totalFiringSeconds), 4);\r\n\r\n        //Draws the point itself.\r\n        if (currentInstance.visible) {\r\n            //Changes the sprite depending on the state of the instance.\r\n            if (currentInstance.state == \"warning\") {\r\n                context.strokeStyle = \"#E6FF16\";\r\n                context.strokeRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            } else if (currentInstance.state == \"firing\") {\r\n                context.fillStyle = \"#E6FF16\";\r\n                context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nfunction drawActivePoints() {\r\n    for (let i = 0; i < activePoints.length; i++) {\r\n        let currentInstance = activePoints[i];\r\n\r\n        //Draws the point itself.\r\n        if (currentInstance.visible) {\r\n            //Changes the sprite depending on the state of the instance.\r\n            if (currentInstance.state == \"warning\") {\r\n                context.strokeStyle = \"#FF9012\";\r\n                context.strokeRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            } else if (currentInstance.state == \"firing\") {\r\n                context.fillStyle = \"#FF9012\";\r\n                context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nfunction drawMovingActivePoints() {\r\n    for (let i = 0; i < movingActivePoints.length; i++) {\r\n        let currentInstance = movingActivePoints[i];\r\n\r\n        //Draws the point itself.\r\n        if (currentInstance.visible) {\r\n            //Changes the sprite depending on the state of the instance.\r\n            if (currentInstance.state == \"warning\") {\r\n                context.strokeStyle = \"#FF9012\";\r\n                context.strokeRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            } else if (currentInstance.state == \"firing\") {\r\n                context.fillStyle = \"#FF9012\";\r\n                context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nfunction drawMovingHorizontalLasers() {\r\n    for (let i = 0; i < movingHorizontalLasers.length; i++) {\r\n        let currentInstance = movingHorizontalLasers[i];\r\n        if (currentInstance.visible) {\r\n            //Changes the sprite depending on the state of the instance.\r\n            if (currentInstance.state == \"warning\") {\r\n                context.fillStyle = \"#FF51EF\";\r\n\r\n                //Warning triangles are complex because they must face the direction of the laser's speed.\r\n                //Left warning triangle.\r\n                context.beginPath();\r\n                context.moveTo(currentInstance.x + 16, currentInstance.y + currentInstance.height * Math.abs(Math.min(0, Math.sign(currentInstance.speed))));\r\n                context.lineTo(currentInstance.x + 24, currentInstance.y + currentInstance.height * Math.max(0, Math.sign(currentInstance.speed)));\r\n                context.lineTo(currentInstance.x + 32, currentInstance.y + currentInstance.height * Math.abs(Math.min(0, Math.sign(currentInstance.speed))));\r\n                context.fill();\r\n\r\n                //Right warning triangle.\r\n                context.beginPath();\r\n                context.moveTo(currentInstance.width - 16, currentInstance.y + currentInstance.height * Math.abs(Math.min(0, Math.sign(currentInstance.speed))));\r\n                context.lineTo(currentInstance.width - 24, currentInstance.y + currentInstance.height * Math.max(0, Math.sign(currentInstance.speed)));\r\n                context.lineTo(currentInstance.width - 32, currentInstance.y + currentInstance.height * Math.abs(Math.min(0, Math.sign(currentInstance.speed))));\r\n                context.fill();\r\n            } else if (currentInstance.state == \"firing\") {\r\n                context.fillStyle = \"#FF51EF\";\r\n                context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nfunction drawMovingVerticalLasers() {\r\n    for (let i = 0; i < movingVerticalLasers.length; i++) {\r\n        let currentInstance = movingVerticalLasers[i];\r\n        if (currentInstance.visible) {\r\n            //Changes the sprite depending on the state of the instance.\r\n            if (currentInstance.state == \"warning\") {\r\n                context.fillStyle = \"#FF51EF\";\r\n\r\n                //Warning triangles are complex because they must face the direction of the laser's speed.\r\n                //Top warning triangle.\r\n                context.beginPath();\r\n                context.moveTo(currentInstance.x + currentInstance.width * Math.abs(Math.min(0, Math.sign(currentInstance.speed))), currentInstance.y + 16);\r\n                context.lineTo(currentInstance.x + currentInstance.width * Math.max(0, Math.sign(currentInstance.speed)), currentInstance.y + 24);\r\n                context.lineTo(currentInstance.x + currentInstance.width * Math.abs(Math.min(0, Math.sign(currentInstance.speed))), currentInstance.y + 32);\r\n                context.fill();\r\n\r\n                //Bottom warning triangle.\r\n                context.beginPath();\r\n                context.moveTo(currentInstance.x + currentInstance.width * Math.abs(Math.min(0, Math.sign(currentInstance.speed))), currentInstance.height - 16);\r\n                context.lineTo(currentInstance.x + currentInstance.width * Math.max(0, Math.sign(currentInstance.speed)), currentInstance.height - 24);\r\n                context.lineTo(currentInstance.x + currentInstance.width * Math.abs(Math.min(0, Math.sign(currentInstance.speed))), currentInstance.height - 32);\r\n                context.fill();\r\n            } else if (currentInstance.state == \"firing\") {\r\n                context.fillStyle = \"#FF51EF\";\r\n                context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nfunction drawBombs() {\r\n    for (let i = 0; i < bombs.length; i++) {\r\n        let currentInstance = bombs[i];\r\n        if (currentInstance.visible) {\r\n            //Changes the sprite depending on the state of the instance.\r\n            if (currentInstance.state == \"warning\") {\r\n                context.strokeStyle = \"#FF51EF\";\r\n                context.strokeRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            } else if (currentInstance.state == \"firing\") {\r\n                context.fillStyle = \"#FF51EF\";\r\n                context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nfunction drawMovingBombs() {\r\n    for (let i = 0; i < movingBombs.length; i++) {\r\n        let currentInstance = movingBombs[i];\r\n        if (currentInstance.visible) {\r\n            //Changes the sprite depending on the state of the instance.\r\n            if (currentInstance.state == \"warning\") {\r\n                context.strokeStyle = \"#FF51EF\";\r\n                context.strokeRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            } else if (currentInstance.state == \"firing\") {\r\n                context.fillStyle = \"#FF51EF\";\r\n                context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\nfunction drawWalls() {\r\n    for (let i = 0; i < walls.length; i++) {\r\n        let currentInstance = walls[i];\r\n        context.fillStyle = \"#741EFF\";\r\n        context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n    };\r\n};\r\n\r\nfunction drawMovingWalls() {\r\n    for (let i = 0; i < movingWalls.length; i++) {\r\n        let currentInstance = movingWalls[i];\r\n        context.fillStyle = \"#741EFF\";\r\n        context.fillRect(currentInstance.x, currentInstance.y, currentInstance.width, currentInstance.height);\r\n    };\r\n};\r\n\r\nfunction drawPartyHats() {\r\n    for (let i = 0; i < partyHats.length; i++) {\r\n        let currentInstance = partyHats[i];\r\n\r\n        context.fillStyle = \"#378CFF\";\r\n\r\n        context.beginPath();\r\n        context.moveTo(currentInstance.x, currentInstance.y + currentInstance.height);\r\n        context.lineTo(currentInstance.x + currentInstance.width / 2, currentInstance.y);\r\n        context.lineTo(currentInstance.x + currentInstance.width, currentInstance.y + currentInstance.height);\r\n        context.fill();\r\n    };\r\n};\r\n\r\n//Collision Functions\r\n\r\nfunction checkCollisionsWithClass(classArray) {\r\n    collidingInstances.splice(0);\r\n\r\n    for (let i = 0; i < classArray.length; i++) {\r\n        checkInstancesColliding(blockie, classArray[i]);\r\n    };\r\n};\r\n\r\nfunction checkCollisionsWithClasses(classesArray) {\r\n    collidingInstances.splice(0);\r\n\r\n    for (let i = 0; i < classesArray.length; i++) {\r\n        let currentClass = classesArray[i];\r\n        for (let i = 0; i < currentClass.length; i++) {\r\n            checkInstancesColliding(blockie, currentClass[i]);\r\n        };\r\n    };\r\n};\r\n\r\nfunction checkTestCollisionsWithClasses(instanceOneX, instanceOneY, classesArray) {\r\n    preventingMovement = false;\r\n\r\n    checkBlockieOutsideBorder(blockie, instanceOneX, instanceOneY);\r\n\r\n    for (let i = 0; i < classesArray.length; i++) {\r\n        let currentClass = classesArray[i];\r\n        for (let i = 0; i < currentClass.length; i++) {\r\n            checkTestInstancesColliding(blockie, instanceOneX, instanceOneY, currentClass[i]);\r\n        };\r\n    };\r\n};\r\n\r\n//Determines if two instances are \"colliding\". They cannot be colliding if one is in the warning state.\r\nfunction checkInstancesColliding(instanceOne, instanceTwo) {\r\n    let xColliding = false;\r\n    let yColliding = false;\r\n\r\n    if ((instanceTwo.x <= instanceOne.x) && (instanceOne.x <= instanceTwo.x + instanceTwo.width) && (instanceTwo.state === \"firing\")) {\r\n        xColliding = true;\r\n    } else if ((instanceOne.x <= instanceTwo.x) && (instanceTwo.x <= instanceOne.x + instanceOne.width) && (instanceTwo.state === \"firing\")) {\r\n        xColliding = true;\r\n    };\r\n\r\n    if ((instanceTwo.y <= instanceOne.y) && (instanceOne.y <= instanceTwo.y + instanceTwo.height) && (instanceTwo.state === \"firing\")) {\r\n        yColliding = true;\r\n    } else if ((instanceOne.y <= instanceTwo.y) && (instanceTwo.y <= instanceOne.y + instanceOne.height) && (instanceTwo.state === \"firing\")) {\r\n        yColliding = true;\r\n    };\r\n\r\n    //The instances must have an overlapping area (x and y components) for there to be a collision.\r\n    if (xColliding && yColliding) {\r\n        collidingInstances.push(instanceTwo);\r\n    };\r\n};\r\n\r\n//Determines if two instances are \"colliding\" (with Blockie's theoretical test locations). They cannot be colliding if one is in \r\n//the warning state.\r\nfunction checkTestInstancesColliding(instanceOne, instanceOneX, instanceOneY, instanceTwo) {\r\n    let xColliding = false;\r\n    let yColliding = false;\r\n\r\n    if ((instanceTwo.x <= instanceOneX) && (instanceOneX <= instanceTwo.x + instanceTwo.width)) {\r\n        xColliding = true;\r\n    } else if ((instanceOneX <= instanceTwo.x) && (instanceTwo.x <= instanceOneX + instanceOne.width)) {\r\n        xColliding = true;\r\n    };\r\n\r\n    if ((instanceTwo.y <= instanceOneY) && (instanceOneY <= instanceTwo.y + instanceTwo.height)) {\r\n        yColliding = true;\r\n    } else if ((instanceOneY <= instanceTwo.y) && (instanceTwo.y <= instanceOneY + instanceOne.height)) {\r\n        yColliding = true;\r\n    };\r\n\r\n    //The instances must have an overlapping area (x and y components) for there to be a collision.\r\n    if (xColliding && yColliding) {\r\n        preventingMovement = true;\r\n    }\r\n};\r\n\r\n//Checks if an instance (Blockie) is outside of the game canvas.\r\nfunction checkBlockieOutsideBorder(instanceOne, instanceOneX, instanceOneY) {\r\n    if (instanceOneX < 0 || canvas.width < (instanceOneX + instanceOne.width)) {\r\n        preventingMovement = true;\r\n    } else if (instanceOneY < 0 || canvas.height < (instanceOneY + instanceOne.height)) {\r\n        preventingMovement = true;\r\n    };\r\n}\r\n\r\n//Input Functions\r\n\r\nfunction initializeKeyInputs() {\r\n    //Adds all currently pressed keys as a keyCode with a pair of true in the keysDown object. .keyCode is used instead of .key so \r\n    //that capital letters can't cause unwanted movements.\r\n    document.addEventListener(\"keydown\", e => {\r\n        //Special keys can only be set as \"down\" during the first single frame of being held until release. This is done by preventing\r\n        //the key from being activated again before release and by deleting it from the array on the second frame of being pressed.\r\n        if (shiftAlreadyPressed) {\r\n            delete keysDown[16];\r\n        };\r\n        if (spaceAlreadyPressed) {\r\n            delete keysDown[32];\r\n        };\r\n        if (arrowLeftAlreadyPressed) {\r\n            delete keysDown[37];\r\n        };\r\n        if (arrowUpAlreadyPressed) {\r\n            delete keysDown[38];\r\n        };\r\n        if (arrowRightAlreadyPressed) {\r\n            delete keysDown[39];\r\n        };\r\n        if (arrowDownAlreadyPressed) {\r\n            delete keysDown[40];\r\n        };\r\n        if (pAlreadyPressed) {\r\n            delete keysDown[80];\r\n        };\r\n\r\n        if (e.keyCode === 16) {\r\n            if (!shiftAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                shiftAlreadyPressed = true;\r\n            };\r\n        } else if (e.keyCode === 32) {\r\n            if (!spaceAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                spaceAlreadyPressed = true;\r\n            };\r\n        } else if (e.keyCode === 37) {\r\n            if (!arrowLeftAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                arrowLeftAlreadyPressed = true;\r\n            };\r\n        } else if (e.keyCode === 38) {\r\n            if (!arrowUpAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                arrowUpAlreadyPressed = true;\r\n            };\r\n        } else if (e.keyCode === 39) {\r\n            if (!arrowRightAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                arrowRightAlreadyPressed = true;\r\n            };\r\n        } else if (e.keyCode === 40) {\r\n            if (!arrowDownAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                arrowDownAlreadyPressed = true;\r\n            };\r\n        } else if (e.keyCode === 80) {\r\n            if (!pAlreadyPressed) {\r\n                keysDown[e.keyCode] = true;\r\n                pAlreadyPressed = true;\r\n            };\r\n        } else {\r\n            keysDown[e.keyCode] = true;\r\n        };\r\n    });\r\n\r\n    //Deletes all currently unpressed keys from the keysDown object.\r\n    document.addEventListener(\"keyup\", e => {\r\n        //Setting the flag to false allows the key to be set as \"down\" again.\r\n        if (e.keyCode === 16) {\r\n            delete keysDown[e.keyCode];\r\n            shiftAlreadyPressed = false;\r\n        } else if (e.keyCode === 32) {\r\n            delete keysDown[e.keyCode];\r\n            spaceAlreadyPressed = false;\r\n        } else if (e.keyCode === 37) {\r\n            delete keysDown[e.keyCode];\r\n            arrowLeftAlreadyPressed = false;\r\n        } else if (e.keyCode === 38) {\r\n            delete keysDown[e.keyCode];\r\n            arrowUpAlreadyPressed = false;\r\n        } else if (e.keyCode === 39) {\r\n            delete keysDown[e.keyCode];\r\n            arrowRightAlreadyPressed = false;\r\n        } else if (e.keyCode === 40) {\r\n            delete keysDown[e.keyCode];\r\n            arrowDownAlreadyPressed = false;\r\n        } else if (e.keyCode === 80) {\r\n            delete keysDown[e.keyCode];\r\n            pAlreadyPressed = false;\r\n        } else {\r\n            delete keysDown[e.keyCode];\r\n        };\r\n    });\r\n};\r\n\r\n//Scale Functions \r\n\r\n//Scales the game (including the title, info, and others) along the restricting axis while preserving the games aspect ratio.\r\nfunction scaleGame() {\r\n    //Determines the scale of the most restricted axis.\r\n    gameScale = Math.min(window.innerWidth / 520, window.innerHeight / 617);\r\n\r\n    //Changes the scale of the game's CSS container.\r\n    let gameContainer = document.getElementById(\"gameContainer\");\r\n    gameContainer.style.transform = \"scale(\" + gameScale + \")\";\r\n\r\n    //Continuously recalls the function.\r\n    window.requestAnimationFrame(scaleGame);\r\n};\r\n\r\n//Point Functions\r\n\r\nfunction updateLevelPoints(currentLevel) {\r\n    levelPoints[currentLevel - 1] = currentLevelPoints;\r\n};\r\n\r\nfunction calculateTotalPoints() {\r\n    totalPoints = 0;\r\n    for (let i = 0; i < levelPoints.length; i++) {\r\n        totalPoints += levelPoints[i];\r\n    };\r\n};\r\n\r\n//Cutscene Functions\r\n\r\n//Waits for a small cutscene to finish.\r\nasync function playCutscene(scene, secondsPerFrame) {\r\n    let cutsceneSideLength = 512;\r\n    let cutscenesx = 0;\r\n    let lastFramesx = scene.naturalWidth - cutsceneSideLength;\r\n\r\n    //Each time the frame changes, the next sprite in the sprite map is shown.\r\n    let cutscene = setInterval(() => {\r\n        cutscenesx += cutsceneSideLength;\r\n    }, secondsPerFrame * 1000);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        function drawCutscene() {\r\n            context.drawImage(scene, cutscenesx, 0, cutsceneSideLength, cutsceneSideLength, 0, 0, cutsceneSideLength, cutsceneSideLength);\r\n\r\n            //Resolves the Promise if the cutscene is over.\r\n            if (cutscenesx > lastFramesx) {\r\n                resolve(\"resolved\");\r\n            } else {\r\n                //Continuously recalls the function until the animation is completed.\r\n                window.requestAnimationFrame(drawCutscene);\r\n            };\r\n        };\r\n\r\n        window.requestAnimationFrame(drawCutscene);\r\n    });\r\n}\r\n\r\n//Micellaneous Functions\r\n\r\n//Creates a timer that resets the level if the counter reaches 0.\r\nfunction createCountdownTimer(totalSeconds) {\r\n    let seconds = totalSeconds;\r\n\r\n    //Sets the timer container to be visible.\r\n    let countdownTimerContainer = document.getElementById(\"countdownTimerContainer\");\r\n    countdownTimerContainer.style.visibility = \"visible\";\r\n\r\n    countdown = setInterval(() => {\r\n        //Each interval the amount of seconds decreases and the displayed numbers are calculated.\r\n        seconds--;\r\n        let currentMinutes = Math.floor(seconds / 60);\r\n        let currentSeconds = seconds % 60;\r\n\r\n        //The remaining time is displayed.\r\n        let countdownTimer = document.getElementById(\"countdownTimer\");\r\n        countdownTimer.innerHTML = `${currentMinutes}:${currentSeconds}`;\r\n\r\n        //Restarts the level if the timer reaches 0.\r\n        if (seconds <= 0) {\r\n            destroyCountdownTimer();\r\n            restartLevel(\"countdownTimer\");\r\n        };\r\n    }, 1000);\r\n};\r\n\r\n//Sets the countdownTimer to be invisible and clears its interval.\r\nfunction destroyCountdownTimer() {\r\n    let countdownTimerContainer = document.getElementById(\"countdownTimerContainer\");\r\n    countdownTimerContainer.style.visibility = \"hidden\";\r\n    clearInterval(countdown);\r\n}\r\n\r\nfunction calculateAngleRadians(x, y) {\r\n    return Math.atan2(y, x);\r\n};\r\n\r\nfunction convertRadiansToDegrees(radians) {\r\n    return radians * 180 / Math.PI;\r\n};\r\n\r\n//Game loop\r\n\r\nfunction gameLoop() {\r\n    if (gameState === \"playing\") {\r\n        //Restarts the level if P is pressed.\r\n        if (keysDown[80]) {\r\n            restartLevel(\"keyPressed\");\r\n        };\r\n\r\n        //Other Instances' Movements\r\n\r\n        moveMovingPassivePoints();\r\n        moveMovingActivePoints();\r\n        moveMovingHorizontalLasers();\r\n        moveMovingVerticalLasers();\r\n        moveMovingBombs();\r\n        moveMovingWalls();\r\n\r\n        //Collision Handling\r\n\r\n        //\"Pushes\" Blockie away from walls that just moved to his location. Needed to allow Blockie to move.\r\n        moveBlockieAwayFromMovingWalls();\r\n\r\n        //Blockie's Movement\r\n\r\n        if (!recoveringFromDash) {\r\n            //xInput and yInput are both used to determine the angle that Blockie is moving in.\r\n            xInput = 0;\r\n            yInput = 0;\r\n\r\n            //Each WASD key changes the angle of Blockie's movement.\r\n            //Right\r\n            if (keysDown[68]) {\r\n                xInput++;\r\n            };\r\n\r\n            //Left\r\n            if (keysDown[65]) {\r\n                xInput--;\r\n            };\r\n\r\n            //Down\r\n            if (keysDown[83]) {\r\n                yInput++;\r\n            };\r\n\r\n            //Up\r\n            if (keysDown[87]) {\r\n                yInput--;\r\n            };\r\n\r\n            if ((keysDown[16] || keysDown[32]) && allowDashAgain && (xInput !== 0 || yInput !== 0)) {\r\n                //Shift acts uniquely because it only is \"down\" for one frame; therefore, it must also be deleted after use because\r\n                //otherwise it could never be deleted in the input function.\r\n                delete keysDown[16];\r\n\r\n                //Pressing shift causes Blockie to \"dash\" by increasing his speed, creating a cooldown timeout, and playing a recovery \r\n                //animation.\r\n                initializeDash();\r\n            } else if ((keysDown[37] || keysDown[38] || keysDown[39] || keysDown[40]) && allowDashAgain) {\r\n                //Pressing the Arrow keys causes Blockie to \"dash\" by increasing his speed, creating a cooldown timeout, and playing a \r\n                //recovery animation. Directional inputs are reset to allow Blockie to dash only in the direction of the arrow keys.\r\n                xInput = 0;\r\n                yInput = 0;\r\n\r\n                //Right\r\n                if (keysDown[39]) {\r\n                    xInput++;\r\n                };\r\n\r\n                //Left\r\n                if (keysDown[37]) {\r\n                    xInput--;\r\n                };\r\n\r\n                //Down\r\n                if (keysDown[40]) {\r\n                    yInput++;\r\n                };\r\n\r\n                //Up\r\n                if (keysDown[38]) {\r\n                    yInput--;\r\n                };\r\n\r\n                initializeDash();\r\n            } else {\r\n                blockie.speed = 2;\r\n            };\r\n\r\n            //By the way atan2() works, all -y values return negative angles; therefore, the idle state image (image 0)\r\n            //must be set at -180 degrees and all angles must be increased by 180 degrees to rotate from the top-left in a \r\n            //clockwise direction continuously.\r\n            blockie.angleMovingDegrees = -180;\r\n\r\n            if (xInput !== 0 || yInput !== 0) {\r\n                //Finds the angle that Blockie is moving in radians based on the inputs.\r\n                blockie.angleMovingRadians = calculateAngleRadians(xInput, yInput);\r\n\r\n                //Converted to make the direction of Blockie more discernible.\r\n                blockie.angleMovingDegrees = convertRadiansToDegrees(blockie.angleMovingRadians);\r\n\r\n                //blockie.speed is the hypotenuse for all directional velocities to allow for diagonal movement.\r\n                blockie.dx = Math.cos(blockie.angleMovingRadians) * blockie.speed;\r\n                blockie.dy = Math.sin(blockie.angleMovingRadians) * blockie.speed;\r\n\r\n                //The SubPixels store the directional velocity.\r\n                blockie.xSubPixel += blockie.dx;\r\n                blockie.ySubPixel += blockie.dy;\r\n\r\n                //The velocity is then floored to avoid the sprite from being on subpixel locations and being distorted.\r\n                blockie.dx = Math.floor(blockie.xSubPixel);\r\n                blockie.dy = Math.floor(blockie.ySubPixel);\r\n\r\n                //The SubPixels then store the decimal remainders so they can be added on the next step to not lose speed.\r\n                blockie.xSubPixel -= blockie.dx;\r\n                blockie.ySubPixel -= blockie.dy;\r\n\r\n                //The testLocations are where Blockie should go, but it must also be checked for collisions before he is moved.\r\n                blockie.xTarget = blockie.x + blockie.dx;\r\n                blockie.yTarget = blockie.y + blockie.dy;\r\n            } else {\r\n                //Accounts for possible changes in Blockie's location due to respawning or something else that isn't an input.\r\n                blockie.xTarget = blockie.x;\r\n                blockie.yTarget = blockie.y;\r\n            };\r\n\r\n            //Movement Obstacles\r\n\r\n            updateAllCollisionInstances();\r\n            checkTestCollisionsWithClasses(blockie.xTarget, blockie.yTarget, allCollisionInstances);\r\n\r\n            //Moves Blockie to an open space if he is trying to move into a collision instance.\r\n            if (preventingMovement) {\r\n                //Resets Blockie's target location to his current location because there is a 100% chance that space is clear.\r\n                blockie.xTarget = blockie.x;\r\n                blockie.yTarget = blockie.y;\r\n\r\n                let xChange = 0;\r\n                let yChange = 0;\r\n                let xDir = Math.sign(blockie.dx);\r\n                let yDir = Math.sign(blockie.dy);\r\n                let lastAvailableX = blockie.xTarget;\r\n                let lastAvailableY = blockie.yTarget;\r\n\r\n                //Finds the last free space in the direction that Blockie is moving in. Stops checking for more spaces once \r\n                //Blockie has moved past his dx or dy each frame.\r\n                while (Math.abs(xChange) < Math.abs(blockie.dx) || Math.abs(yChange) < Math.abs(blockie.dy)) {\r\n                    //Allows for Blockie to move in non-integer increments.\r\n                    if (Math.abs(blockie.dx) - xChange < 1) {\r\n                        xChange += blockie.dx - xChange;\r\n                    } else {\r\n                        xChange += xDir;\r\n                    };\r\n\r\n                    //Allows for Blockie to move in non-integer increments.\r\n                    if (Math.abs(blockie.dy) - yChange < 1) {\r\n                        yChange += blockie.dy - yChange;\r\n                    } else {\r\n                        yChange += yDir;\r\n                    };\r\n\r\n                    //Checks if each increment is empty and replaces the last available location with it.\r\n                    checkTestCollisionsWithClasses(blockie.xTarget + xChange, blockie.yTarget + yChange, allCollisionInstances);\r\n                    if (!preventingMovement) {\r\n                        lastAvailableX = blockie.xTarget + xChange;\r\n                        lastAvailableY = blockie.yTarget + yChange;\r\n                    };\r\n                };\r\n\r\n                //Sets Blockie's location to the last available one in the direction that he's moving in.\r\n                blockie.xTarget = lastAvailableX;\r\n                blockie.yTarget = lastAvailableY;\r\n\r\n                //Resets dx and dy to be relative to his new position.\r\n                blockie.dx = blockie.x + blockie.dx - blockie.xTarget;\r\n                blockie.dy = blockie.y + blockie.dy - blockie.yTarget;\r\n                xChange = 0;\r\n                yChange = 0;\r\n\r\n                //Independently checks along the x-axis for an available space after moving in Blockie's exact direction (this\r\n                //only activates when moving diagonally and allows for \"sliding\").\r\n                while (Math.abs(xChange) < Math.abs(blockie.dx)) {\r\n                    //Allows for Blockie to move in non-integer increments.\r\n                    if (Math.abs(blockie.dx) - xChange < 1) {\r\n                        xChange += blockie.dx - xChange;\r\n                    } else {\r\n                        xChange += xDir;\r\n                    };\r\n\r\n                    //Checks if each increment is empty and replaces the last available location with it.\r\n                    checkTestCollisionsWithClasses(blockie.xTarget + xChange, blockie.yTarget, allCollisionInstances);\r\n                    if (!preventingMovement) {\r\n                        lastAvailableX = blockie.xTarget + xChange;\r\n                    };\r\n                };\r\n\r\n                blockie.xTarget = lastAvailableX;\r\n\r\n                //Independently checks along the y-axis for an available space after moving in Blockie's exact direction (this\r\n                //only activates when moving diagonally and allows for \"sliding\").\r\n                while (Math.abs(yChange) < Math.abs(blockie.dy)) {\r\n                    //Allows for Blockie to move in non-integer increments.\r\n                    if (Math.abs(blockie.dy) - yChange < 1) {\r\n                        yChange += blockie.dy - yChange;\r\n                    } else {\r\n                        yChange += yDir;\r\n                    };\r\n\r\n                    //Checks if each increment is empty and replaces the last available location with it.\r\n                    checkTestCollisionsWithClasses(blockie.xTarget, blockie.yTarget + yChange, allCollisionInstances);\r\n                    if (!preventingMovement) {\r\n                        lastAvailableY = blockie.yTarget + yChange;\r\n                    };\r\n                };\r\n\r\n                blockie.yTarget = lastAvailableY;\r\n            };\r\n\r\n            blockie.x = blockie.xTarget;\r\n            blockie.y = blockie.yTarget;\r\n        };\r\n\r\n        //Collision Handling\r\n\r\n        //\"Pushes\" Blockie away from walls that he moved to.\r\n        moveBlockieAwayFromMovingWalls();\r\n\r\n        //Is Blockie Being Crushed?\r\n\r\n        //Checks if Blockie is colliding after everything has moved, and if so, restarts the level.\r\n        checkTestCollisionsWithClasses(blockie.x, blockie.y, allCollisionInstances);\r\n        if (preventingMovement) {\r\n            restartLevel(\"died\");\r\n        };\r\n\r\n        //Interactivity Handling\r\n\r\n        updateAllInteractiveInstances();\r\n        checkCollisionsWithClasses(allInteractiveInstances);\r\n\r\n        for (let i = 0; i < collidingInstances.length; i++) {\r\n            if (collidingInstances[i].constructor.name === \"PassivePoint\") {\r\n                //Adds points to the current level's total.\r\n                currentLevelPoints++;\r\n\r\n                //Resolves the PassivePoint's Promise and destroys the instance once it is touched.\r\n                let collidingPoint = collidingInstances[i];\r\n                collidingPoint.externalResolve();\r\n                clearTimeout(collidingPoint.timeout);\r\n                let instanceIndex = passivePoints.indexOf(collidingPoint);\r\n                passivePoints.splice(instanceIndex, 1);\r\n            } else if (collidingInstances[i].constructor.name === \"MovingPassivePoint\") {\r\n                //Adds points to the current level's total.\r\n                currentLevelPoints++;\r\n\r\n                //Resolves the PassivePoint's Promise and destroys the instance once it is touched.\r\n                let collidingPoint = collidingInstances[i];\r\n                collidingPoint.externalResolve();\r\n                clearTimeout(collidingPoint.timeout);\r\n                let instanceIndex = movingPassivePoints.indexOf(collidingPoint);\r\n                movingPassivePoints.splice(instanceIndex, 1);\r\n            } else if (collidingInstances[i].constructor.name === \"ActivePoint\" || collidingInstances[i].constructor.name === \"MovingActivePoint\") {\r\n                //Adds points to the current level's total.\r\n                currentLevelPoints++;\r\n\r\n                //Stops all currently-running timeouts so that they stop hurting performance and don't execute after resetting.\r\n                for (let i = 0; i < currentTimeouts.length; i++) {\r\n                    clearTimeout(currentTimeouts[i]);\r\n                };\r\n\r\n                currentTimeouts.splice(0);\r\n\r\n                //Stops all currently-running timeouts so that they stop hurting performance and don't execute after resetting.\r\n                for (let i = 0; i < currentIntervals.length; i++) {\r\n                    clearInterval(currentIntervals[i]);\r\n                };\r\n\r\n                currentIntervals.splice(0);\r\n\r\n                resetBlockieState();\r\n\r\n                cancelAwaitChain = true;\r\n\r\n                updateAllInstances();\r\n                for (let i = 0; i < allInstances.length; i++) {\r\n                    resolveInstances(allInstances[i]);\r\n                };\r\n\r\n                //Allows for Blockie to touch activePoints if they are underneath collisions, since he won't die.\r\n                break;\r\n            } else {\r\n                restartLevel(\"died\");\r\n                break;\r\n            };\r\n        };\r\n    };\r\n\r\n    //Continuously recalls the function.\r\n    window.requestAnimationFrame(gameLoop);\r\n};\r\n\r\n//Drawing is handled in a loop that is separate from the gameLoop because the game should still be drawn even while the game is \r\n//restarting or changing levels.\r\nfunction drawingLoop() {\r\n    //Updates the amount of points in the gameInfo div.\r\n    document.getElementById(\"currentPoints\").innerHTML = `Points: ${currentLevelPoints}|7`;\r\n\r\n    //Update the current level in the currentLevel div.\r\n    document.getElementById(\"currentLevel\").innerHTML = \"Level: \" + currentLevel;\r\n\r\n    //Clears the canvas so that it can be redrawn with updated locations, instances, and states.\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    if (gameState !== \"displayingMessage\" && gameState !== \"playingCutscene\") {\r\n        animateBlockie();\r\n        drawBlockie();\r\n    };\r\n\r\n    if (gameState === \"playing\") {\r\n        drawPassivePoints();\r\n        drawMovingPassivePoints();\r\n        drawActivePoints();\r\n        drawMovingActivePoints();\r\n        drawWalls();\r\n        drawMovingWalls();\r\n        drawMovingHorizontalLasers();\r\n        drawMovingVerticalLasers();\r\n        drawBombs();\r\n        drawMovingBombs();\r\n    } else if (gameState === \"finishingLevel\") {\r\n        drawPartyHats();\r\n    };\r\n\r\n    //Continuously recalls the function.\r\n    window.requestAnimationFrame(drawingLoop);\r\n};\r\n\r\n//Game Start\r\n\r\nlevelOne();\r\n\r\ninitializeKeyInputs();\r\nwindow.requestAnimationFrame(gameLoop);\r\nwindow.requestAnimationFrame(drawingLoop);\r\nwindow.requestAnimationFrame(scaleGame);"]}